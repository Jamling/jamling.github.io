[{"title":"万年历接口","url":"/2018/01/29/PHP/php-wnl/","content":"\n使用PHP写的一个万年历接口\n\n## 说明\n支持的年份为1900-2100（农历），支持公历和公历互转。接口基地址：http://api.ieclipse.cn/wnl/ 主要功能列表\n\n- 公历转农历\n- 农历转公历\n- 支持公历和农历节日\n- 支持干支纪年、纪月、纪日、纪时\n- 支持农历闰月\n\n## 示例json\n\n``` json\n{\n    \"code\":0, //响应码，为0时表示接口正常响应\n    \"msg\":\"ok\",\n    \"time\":1517217808,\n    \"data\":{\n        \"isToday\":false,\n        \"sYear\":\"2018\", //公历年\n        \"sMonth\":\"03\", //公历月\n        \"sDay\":16, //公历日\n        \"sWeek\":5, //公历周几， 0－6，0表示周日\n        \"sHour\":17, //公历小时\n        \"sFestival\":\"\", //公历节日，如元旦\n        \"lYear\":2018, //农历年\n        \"lMonth\":1, //农历月\n        \"lDay\":29, //农历日\n        \"lFestival\":\"\",//农历节日，如春节\n        \"isLeap\":false, //农历闰月\n        \"hzYear\":\"二〇一八\", //农历年大写\n        \"hzMonth\":\"正\", //农历月汉字,如果为闰月，前面有一个闰字\n        \"hzDay\":\"廿九\",//农历日\n        \"cWeek\":\"五\",//汉字星期几\n        \"cYear\":\"戊戌\", //汉字干支年\n        \"cMonth\":\"乙卯\",//汉字干支月\n        \"cDay\":\"丁未\",//汉字干支日\n        \"cAnimal\":\"狗\",//生肖年\n        \"cTerms\":\"\",//农历节气，如立春\n        \"cMnumber\":1431,\n        \"cDnumber\":43183,\n        \"cHour\":\"己酉\" //汉字干支时\n    } \n}\n```\n\n## 接口说明\n### 请求参数\n- date: 日期和时间，以`-`分隔，如2018-01-29-18，2019-01-29\n- l: 是否农历闰月，当date为农历时有效，如`l=true`\n\n### 响应\n- cHour: 当参数包含小时时，有此字段\n- cAnimal: 农历日期对应的生肖，遇到农历立春时，生肖会变化。\n- isLeap: 是否农历闰月\n\n## 公历转农历\nhttp://api.ieclipse.cn/wnl/lunar\n\n## 农历转公历\nhttp://api.ieclipse.cn/wnl/solar\n\n## 应用\n- [生辰助手](http://www.ieclipse.cn/birthday-tool)","tags":["PHP"],"categories":["Web"]},{"title":"防Boss利器SmartIM4Intellij","url":"/2017/07/14/Eclipse/idea-smartqq/","content":"\n## 简介\n\n![screenshot](https://raw.githubusercontent.com/Jamling/SmartIM4IntelliJ/master/screenshot.png)\n\nIntelliJ Idea上的SmartIM插件，适用于大多数的Intellij IDE，\n\nEclipse的插件请访问 https://github.com/Jamling/SmartIM4Eclipse/\n\n## 更新日志\n\n- v1.0.3/2017/07/14，美化了UI，添加了异常通知。\n\n## 安装\n\n- File->Settings->Plugins打开插件设置界面\n- 点击Browser repositories...并输入SmartIM执行搜索\n- 点击SmartIM进行安装并重启\n\n## 使用\n\n- 安装成功后，会在底部栏出现一个Smart的tab（如果没有底部栏，则在菜单View中把ToolButtons勾选上）\n- 点击Smart中的二维码使用手机QQ扫码登录\n\n最后附上github地址: https://github.com/Jamling/SmartIM4IntelliJ/\n","tags":["Eclipse"],"categories":["Eclipse 插件"]},{"title":"防Boss利器SmartIM4Eclipse","url":"/2017/06/28/Eclipse/Eclipse-smartqq/","content":"\n## 引言\n开发这个插件的目的是因为最近Boss一再强调纪律，不允许使用QQ，不过作为十几年Q龄的老用户，早已经习惯了QQ，虽然可以使用手机QQ，不过手机打字太慢，考虑到防Boss，还是开发了一个eclipse的插件，效率与隐私两不误。\n\n![screenshot](https://raw.githubusercontent.com/Jamling/SmartIM4Eclipse/master/main.png)\n![screenshot](https://raw.githubusercontent.com/Jamling/SmartIM4Eclipse/master/chat.png)\n\nIntellij IDEA上的插件请移步这里: https://github.com/Jamling/SmartIM4IntelliJ, 支持所有的Intellij IDE哦，包含Android Studio, WebStrom等\n\n## 功能\n- 收发文本消息\n- 热键设定\n- 一键关闭\n- 支持图灵机器人接入\n\n## 安装\n\n### Eclipse Marketplace\n\n1. 点击Eclipse->Help->Eclipse Marketplace...打开eclipse插件市场\n2. 输入SmartIM搜索\n3. 点击Install安装\n\n**推荐使用Eclipse Martplace安装**\n\n### Install New Software\n\n1. 点击Eclipse->Help->Install New Software...搜索插件\n2. 在Work with后面的输入框中输入http://dl.ieclipse.cn/updates/ 并回车\n3. 选中SmartIM，并取消勾选\"Contact all update site during install to find required software\"\n4. 点击底部Next按钮继续安装\n\n## 使用\n\n1. 点击Windows->Show view，找到SmartIM下的Smart双击打开Smart视图\n2. 点击视图工具栏或菜单栏中的同步图标进行登录\n3. 使用手机QQ扫描二维码\n4. 验证成功后，等待拉取最近消息，好友及群组列表\n5. 双击Smart视图中的好友或群，打开聊天窗口（聊天窗口为Console）\n6. 使用快捷键或点击I图标，激活输入窗口（不建议直接在console中输入，会导致同步时间）\n7. 输入聊天内容，并按快捷键（默认为Enter）发送聊天信息\n\n## 快捷键\n\n注：在eclipse中，CR表示Enter键\n\n- 激活输入，默认CR，在console下面打开一个小窗口进行输入\n- 发送，默认CR (Enter键)，发送消息\n- 上/下一个聊天, 默认左/右箭头，也可以在console工具栏使用鼠标切换\n- 隐藏聊天，默认Alt + M，隐藏Contact视图，清空当前聊天内容\n- 关闭聊天，默认Alt + C，关闭Contact视图和所有的聊天窗口\n- 退出输入，默认ESC\n\n注：快捷键有可能与eclipse中的热键冲突，请点击？打开首选项重新设置\n\n## 感谢\n\nSmartIM Java API: https://github.com/ScienJus/smartqq\n\n\n## 问题提交\n\n任何问题包括建议均可以在[Issue](https://github.com/Jamling/SmartIM4Eclipse/issues)中提交\n\n如果为Issue，建议带上eclipse版本及本插件版本信息（可以在Preference->SmartIM中查看并复制版本信息）\n\n\n最后附上github地址: https://github.com/Jamling/SmartIM4Eclipse/\n","tags":["Eclipse"],"categories":["Eclipse 插件"]},{"title":"Android bitmap config你理解对了吗？","url":"/2017/06/14/Android/Android-bitmap-config/","content":"\n在写本文之前，我还以为自己对android的bitmap很熟悉，直到自己亲手写代码实践，才发现自己错了很多年。真是汗颜啊！\n\n<!-- more -->\n\n## Bitmap Config\n首先，根据Android API 25的文档简要说明一下Android的Bitmap.Config以下4个选项\n\n- ALPHA_8: 每个像素占用1字节（8位），存储的是透明度信息。\n- ARGB_4444: 每个像素占用2字节（4+4+4+4＝16位），ARGB分别占用4位，支持alpha通道。\n **注：从API 13开始不推荐使用，在android 4.4上面，设置的ARGB_4444会被系统使用ARGB_8888替换**\n- ARGB_8888: 默认的选项，每像素占用4字节，ARGB分别占8位，支持1600万种颜色，质量最高，当然内存占用也高。\n- RGB_565: 每像素占用2字节，RGB分别占5，6，5位。支持65535种颜色，不支持alpha。\n\n| bitmap.config        | ALPHA_8          | ARGB_4444  | ARGB_8888| RGB_565|\n| ------------- |:-------------:| -----:|----:|----:|\n| bytes/pixel      | 1 byte | 2 byte | 4 byte | 2 byte|\n| alpha channel      | 8 bit| 4 bit | 8 bit | not support|\n\n## PNG 格式\n其次，简要说一下png格式\n\n- png 8: 支持不透明，索引色透明，alpha透明，最大支持256种颜色\n- png 24: 不支持透明，支持1600万种颜色\n- png 32: 支持透明，其它同png 24，支持1600万种颜色\n\n## bitmap内存占用计算\n第三，简要说一下bitmap占用的内存\n\nAndroid中bitmap的内存占用是跟图片的尺寸（高和宽）相关。一张图片的内存占用大致的计算公式如下：\n\n**占用内存 = 图像像素总和（width x height）再 x 每像素(bitmap config)占用的字节数**\n\n*以下是通过代码准确计算*\n```java\n    public static int getSizeInBytes(@Nullable Bitmap bitmap) {\n        if (bitmap == null) {\n            return 0;\n        }\n\n        // There's a known issue in KitKat where getAllocationByteCount() can throw an NPE. This was\n        // apparently fixed in MR1: http://bit.ly/1IvdRpd. So we do a version check here, and\n        // catch any potential NPEs just to be safe.\n        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.KITKAT) {\n            try {\n                return bitmap.getAllocationByteCount();\n            } catch (NullPointerException npe) {\n                // Swallow exception and try fallbacks.\n            }\n        }\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB_MR1) {\n            return bitmap.getByteCount();\n        }\n\n        // Estimate for earlier platforms.\n        return bitmap.getWidth() * bitmap.getRowBytes();\n    }\n```\n\n以一张1024*1024的图片为例，使用ARGB_8888，占用的内存为1024*1024*4=4M。像现在的手机摄像头动不动就是上千万像素，拍出来的照片如果按默认的ARGB_8888 config加载，则至少是几十M的内存占用。\n\nAndroid的图片资源主要分两部分：\n\n1. 一种是apk中自带的，多为png格式，由系统加载，支持缩放，代码中通过R.xxx引用，decode时使用的是默认的ARGB_8888选项，图像质量高；\n2. 另一种是网络图片或本地图片，多为jpg格式，加载时一般使用第三方的图片加载库，为节省内存decode时多为RGB_565选项。\n\n平时都是这么用，也没发现问题，优化内存占用时，一般也是从图片的尺寸方面入手。不过最近优化一个跟图片相关的功能，在图片尺寸无法缩放的条件下，只能通过更改bitmap config来降低内存的占用。然后意外的发现，导致颠覆了我的三观。为此我特地写了一个测试sample，代码详见[github](https://github.com/Jamling/BitmapConfig)，特地创建了一张背景色透明，图片内容为A（黑色50%透明度）R（红色）G（绿色）B（蓝色）图片，然后分别导出为：png8（alpha透明）、png24（不透明）、png32和jpeg（不透明）格式的图，分别使用ALPHA_8, ARGB_4444, ARGB_8888, RGB_565四种config加载图片，得到的实际结果如下（假设图像总像素为X）。\n\n## 实践结果\n\n### 运行截图\n![screenshot][1]\n\n### 结果统计\n\n| bitmap.config | ALPHA_8 | ARGB_4444  | ARGB_8888| RGB_565|\n| :-------------: |:-------------:|:-----:|:----:|:----:|\n|![][2]png8   |**4**~~`1`~~ X|2 X|4 X|**4**~~`2`~~ X A ~~`不`~~ 透明|\n|![][3]png24 |**4**~~`1`~~ X|2 X|4 X|**2** X|\n|![][4]png32 |**4**~~`1`~~ X|2 X|4 X|**4**~~`2`~~ X A ~~`不`~~ 透明|\n|![][5]jpeg    |**4**~~`1`~~ X|2 X|4 X|**2** X|\n\n**请注意表格中带删除线的部分**\n\n1. ALPHA_8：config占用的内存竟然和ARGB_8888一样，不是说每个像素占用1字节的么？\n2. RGB_565：在png8和png32中，图片中的A都保持了50%的透明度，而且占用的内存也和ARGB_8888一样，不是说RGB_565不包含alpha么？不是说占用的内存是ARGB_8888的一半么？\n3. ARGB_4444：在android 6.0上面，png8和png32看不见（全透明），png24和jpeg显示为一块黑色区域，在android 4.2上则显示正常。\n\n带着上面的疑问，在网上进行了相关的搜索，也没有找到答案。好吧，我是懵了，不知道各位看客如何？附上github上的示例工程：https://github.com/Jamling/BitmapConfig\n\n[1]: https://raw.githubusercontent.com/Jamling/BitmapConfig/master/screenshot.jpg\n[2]: https://raw.githubusercontent.com/Jamling/BitmapConfig/master/app/src/main/res/mipmap-xhdpi/png8.png\n[3]: https://raw.githubusercontent.com/Jamling/BitmapConfig/master/app/src/main/res/mipmap-xhdpi/png24.png\n[4]: https://raw.githubusercontent.com/Jamling/BitmapConfig/master/app/src/main/res/mipmap-xhdpi/png32.png\n[5]: https://raw.githubusercontent.com/Jamling/BitmapConfig/master/app/src/main/res/mipmap-xhdpi/jpeg_80.jpg\n","tags":["Android"],"categories":["Android"]},{"title":"我是怎么做App token认证的","url":"/2017/06/06/PHP/php-app-token/","content":"\n使用Token来做身份认证在目前的移动客户端上非常流行，Token这个概念来源于OAuth认证，主要是在服务端实现。关于相关的原理，同学们自行百度。在这里，我简单介绍一下我是怎么具体实现的，重点描述token生成、token识别及token缓存。\n\n## 生成Token\n服务端接收客户端传递的username和password等请求，在数据库中检查，如果用户名密码匹配的话，表示登录成功，服务端生成并返回一个token访问令牌。\n\n```php\n    public function login()\n    {\n        $data = array_merge($this->request->post(), []);\n\n        // login with password\n        $user = Db::name($this->table)->field($this->field_except, true)->where('name', $data['name'])->find();\n        if ($user) {\n            if ($user['pwd'] === EncryptService::password($data['pwd'])) {\n                $this->onLoginSuccess($user);\n            } else {\n                parent::logic_failure('密码不正确', 'user_wrong_pwd');\n            }\n        } else {\n            parent::logic_failure('用户不存在', 'user_not_exists');\n        }\n    }\n\n    private function onLoginSuccess($user)\n    {\n        unset($user['pwd']);\n        $token = Token::generateToken($this->request, $user);\n        $ret = [\n            'token' => $token['token'],\n            'user' => $user\n        ];\n        $this->logic_success(null, $ret);\n    }\n\n```\n在上面的代码中，登录成功，服务端向客户端返回token和user信息。token是通过Token类的静态方法`generateToken`来生成的。\n\n```php\n    public static function generateToken($request, $user)\n    {\n        // 1，生成包含用户及设备信息的新token\n        $data = [\n            'uuid' => $request->param('uuid', ''),\n            'uid' => $user['id'],\n            'ip' => $request->ip(),\n            'client' => $request->param('client', ''),\n            'update_time' => ApiBase::_timestamp(),\n        ];\n        // json序列化\n        $json = json_encode($data);\n        // 加密token信息\n        $key = md5(EncryptService::encrypt($json));\n        $data['token'] = $key;\n        // 2，从数据库查询用户的token，决定是update还是insert\n        $token = Token::get($user['id']);\n        // 如果数据库中已存在token，更新\n        if ($token) {\n            // 删除旧的缓存\n            cache($token['token'], null);\n            // 执行更新\n            $token->isUpdate(true)->save($data);\n        }\n        // 不存在，插入\n        else {\n            $token = new Token();\n            $data['create_time'] = ApiBase::_timestamp();\n            $token->data($data)->save();\n        }\n        // 3，将token写入缓存\n        Token::cacheToken($token->getData());\n        return $token->getData();\n    }\n```\n\n这里主要有3个步骤\n\n1. 根据用户及设备等信息生成一个唯一的token，uid用于识别用户，uuid用于识别设备，time用于保证唯一。将这些信息序列化后加密并生成md5\n2. 根据用户id查询用户登录表，不管用户原来是否已经存在token，新的token将替换旧的token\n3. 将token写入缓存，因为token是每个请求都会解析，如果不使用缓存的话，会导致数据库访问瓶颈。\n\n客户端应该保存token，然后在访问一些需要身份认证的API，比如修改昵称，就需要带上这个token了，而不需要显示带上用户信息，比如user_id。\n\n## 解析token\n服务端接收客户端传递的token，需要从中解析出相关的用户及设备信息。\n```php\n    public static function getToken($key)\n    {\n        if (!isset($key)) {\n            return null;\n        }\n        $token = cache($key);\n        if ($token) {\n            return $token;\n        }\n        else {\n            return Token::findByToken($key);\n        }\n    }\n```\n过程很简单，先从缓存中取，如果不存在再从数据库中查询。所有的请求，服务端都会执行解析token。\n\n## 验证token\n服务端简单地把API分为三类\n\n1. 公共API，客户端可以任意访问，不需要验证身份，此类API多以GET请求为多。比如查询产品列表\n2. 受保护的API，也即需要强制认证的API，这类API需要验证客户端身份才能访问，比如修改头像，客户端未传token或token无效，服务端返回一个错误码。\n3. 可选认证的API，介于1和2之间，不要求强制验证客户端身份，比如分享奖励，如果客户端传递了token并认证通过了，则给相应的奖励，否则不做任何的奖励。\n\n基于上面的分析，验证token附带一个是否强制验证的参数，用于中断。验证的规则也相对简单，只要用户请求的设备ID与token中的设备ID相同就算验证通过了。\n\n```php\n    public function checkToken($exit = true)\n    {\n        if ($this->token) {\n            if ($this->token['uuid'] === $this->request->param('uuid', '')) {\n                return true;\n            } else {\n                if ($exit) {\n                    $this->logic_failure(null, 'user_offline');\n                } else {\n                    $this->token = null;\n                }\n                return false;\n            }\n        } else {\n            if ($exit) {\n                $this->logic_failure(null, 'token_invalid');\n            }\n            return false;\n        }\n    }\n```\n\n## 缓存\n\n缓存相对简单，缓存的key为加密token之后的md5值，也即登录成功后，服务端向客户端发送的token值。缓存未设置有效期，默认永不过期。\n\n```php \n    public static function cacheToken($token)\n    {\n        if ($token) {\n            if (is_object($token)) {\n                $token = $token->getData();\n            }\n            cache($token['token'], ($token));\n        }\n    }\n?>\n```\n\n## 进阶\n\n为了让您的应该更加安全，还可以在以下方面强化\n\n1. token有效期\n2. token缓存加密\n3. token高级校验\n\n不过，我这里已经对token做了对称加密，相信他人伪造token的可能性也不大。","tags":["PHP"],"categories":["Web"]},{"title":"谈谈那些年微信支付踩过的坑","url":"/2017/05/24/Android/quickaf-wechat-pay/","content":"\n很早的时候就想写这篇文章了，作为BAT中的一员，还真不想吐槽它，免得被人身攻击。有人说，微信支付很简单嘛，官网有例子，网上也有现成的例子，不过谁用谁知道，本人也是在深入了解之后，真心觉得微信支付里的坑太多，BAT的开发们太敷衍了事，结果给不少的其他开发者带来诸多麻烦。我在这里做个稍全一点的介绍，尽量减少其他同学们掉坑里的概率。\n\n<!-- more -->\n\n## 在微信上创建你的应用\n这里特别强调一下，这一步很重要，不然微信支付集成调试会出现莫名的错误。\n\n1，在注册之前对于Android客户端，需要提供app应用的包名和应用签名（md5值），这两个东西问开发或产品同学要。尽量在注册前提供。另外还需准备一个28x28和108x108的logo图片，问设计或产品同学要。\n2，在[微信开放平台]上注册，注意了，是微信开放平台，不是公众号平台，公众号平台账号不能在开放平台登录。如果已经注册过，请直接登录，登录成功后，点击创建移动应用，创建Android应用时，`应用包名`和`应用签名`，尽量一次性填对了。应用创建成功后，将得到`appid`(以wx开头的一串数字)。然后再去申请微信支付（需做开发者认证并缴费）\n3，在[微信支付商户平台]注册或登录，申请app支付，申请通过后，将得到商户id`mch_id`(一串10位数字)，然后在*账户设置-->API安全-->密钥设置*中设置API密钥`key`(32位的字串)\n\n更多的申请帮助，请参考：https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419317780&token=6c7b59a75b08969c15fa41141ee8d88c236f01ab&lang=zh_CN\n\n注：关于微信支付申请，请在开放平台申请（同公众号支付申请流程，公众号支付不在本文讨论范围之内）微信的工作人员审核通过后，会发审核通过的邮件。里面包含*微信支付商户号*`mch_id`(一串10位数字)和APPID等信息。然后根据邮件提示或者直接在*微信商户平台中-->账户设置-->API安全-->密钥设置*中下载api证书并设置API密钥`key`(32位的字串)\n\n在微信开放平台创建应用成功后，APP支付也申请通过了。请提供给开发同学以下东西：\n\n- APPID `appid`(以wx开头的一串数字)\n- 商户id `mch_id`(一串10位数字)\n- API密钥 `key` (32位的字串)\n对于Android应用，还需要保证**应用包名**与**应用签名**正确\n\n只要上面的信息正确无误，下面就交给开发同学了。如果是直接使用微信支付sdk的同学，请准备好踩坑吧。\n\n## 支付SDK和demo\n### 微信支付SDK\nSDK从4.0.2开始，已改为使用gradle方式。\n```\ndependencies {\n   compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'\n}\n```\n以前是直接使用libammsdk.jar，相比起来，算是进步了。\n\n### demo\n我建议直接忽略官方的demo，不信我的可以直接去[Android资源下载](https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419319167&token=&lang=zh_CN)下载相关demo\n\n以下是我踩过的坑：\n\n- 支付Demo在另外一个单独的project中，尽管sdk demo与pay demo非常类似，搞不懂为啥不合为一个demo project。我昨天在微信网站下载的支付demo，今天在微信网站上就找不着了。昨天下载的支付demo，看版本是v3(sdk demo已经是5.0.2了)，还是eclipse工程，不过导入到eclipse之后，编译不通过。sdk中原来的com.tencent.mm.sdk包换成了com.tencent.mm.opensdk，demo，导致src代码一片红。\n- 支付Demo中的服务端下单接口地址(http://wxpay.weixin.qq.com/pub_v2/app/app_pay.php?plat=android) 不能访问，就算修复了编译错误，结果仍然运行不了。\n然后我看了下其它的文档，sdk换了，但是相关的文档并没有更新，尤其是混淆配置，直接影响到联调，这也是一个隐藏的坑。\n\n## 统一下单\n[统一下单]是商户系统（客户端或服务端）向微信支付后台发送请求，以拿到预支付交易会话标识(`prepayid`)等信息。关于接口的请求与响应信息，请参考[统一下单]接口描述。文档写得还是蛮全的，不过，实际上如何，我就只能呵呵了。请看下面\n\n- 接口的请求与响应都是xml格式，xml的解析不太方便，微信仅支持这个格式。算是小坑。\n- 接口文档中定义了一个`NOT_UTF8`的错误码，似乎微信要求的请求编码为utf-8，不过使用官方demo的Util.httpPost时，如果参数中有中文，还需将请求的xml转为ISO-8859-1编码的字符串才行。不然，微信直接返回给你一个空字符串，保证让你找不着北。\n- 接口文档中定义了一个`LACK_PARAMS`的错误码，指的是如果必填的参数为空，会返回此错误码，可事实上呢，有一次我把total_fee参数搞混了，写成了支付宝的参数名，结果接口返回一个空串，结果让我一顿好找。\n- Android从6.0开始，删除了apache的http组件，于是乎我把Util中的apache http组件换成了HttpUrlConnection，关于请求头，解析都和原来保持一致，结果返回个签名错误。要不是我换http组件之前可以成功下单，我几乎就信了它，真的去查签名了(事实上根本不是签名错误好吧)。后来我修改http的请求头，尝试各种请求方式与编码，结果还是返回签名错误，这让我很是折腾，一度曾想改回apache的http client。最后，我把请求的xml转为utf-8编码，然后HttpUrlConnection全都默认设置，这才下单成功。（PS，这里顺带讲一个HttpUrlConnection的坑，设置请求方法为post，可是debug中看到的HttpUrlConnection对象，请求方法仍为get，当初还以为是这个导致的，后来才知道HttpUrlConnection真正的实现是在delegate中）\n\n总结一下，[统一下单]的响应、错误码和错误描述比较混乱，成功响应还好，一旦出现问题，准让你摸不清东南西北。\n\n签名这块，请参考[签名算法](https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=4_3)，注意按字母升序组织请求参数。我用的是有序的TreeMap保存参数并做签名。没掉坑里。这里附上[微信提供的签名检验工具](https://pay.weixin.qq.com/wiki/tools/signverify/)\n\n## 调用支付接口\n这一步是客户端拿到`prepayid`之后，向微信发送PayReq。请求参数有7个(详细参考微信sdk中的PayReq类，其中`partnerId`填商户ID`mch_id`；`packageValue`固定填`Sign=WXPay`；`timestamp`为北京时间戳，单位为秒。其它的顾名思义，对号入座即可)，缺一不可。这里呢，也有坑\n\n- PayResp（响应）定义了errCode和errStr，只要支付失败，errCode都为-1，errStr永远为null，所以，具体的错误原因：签名错误、未注册APPID、项目设置APPID不正确、注册的APPID与设置的不匹配、其他异常等，一个一个查吧。\n- [统一下单]接口不返回timestamp，如果是我们自己设置一个，那么需要对请求重新签名，[统一下单]返回的sign就不能用了。不然调用支付接口肯定返回-1。\n- 如果接口调用失败，返回-1，是应用签名（apk的签名）不正确（比如debug和release版本使用的不同签名）导致的，那么需要清空微信缓存，才能支付成功。不过，我可不敢随便清微信缓存，我建议可以将手机重启，如果仍然不行，再清微信的缓存。\n\n## libammsdk.jar冲突\n因微信支付和分享是在同一个jar中，所以如果使用了第三方的分享sdk，极有可能会出现jar冲突。即使是相同模块中的jar完全一致也不行。解决的办法是只保留一个模块中的libammsdk.jar然后clen build。\n\n## 建议\n\n- apk的包名，签名在工程初始化的时候就确定好，debug和release使用同一个签名。\n- 微信开放平台在创建应用前，确认好apk包名和签名。\n- 如果是服务端下单，确保sign值是对的（需要再次签名的再签一次）。客户端拿到七个参数后，可以直接支付。\n- 建议在服务端下单，这样更安全。\n- 使用第三方的支付sdk，避免入坑。\n\n## af-pay\n最后推荐一个Android上的支付sdk：[af-pay]，github地址为：https://github.com/Jamling/af-pay\n[af-pay]是一个Android平台上支付库，支持支付宝和微信，使用[af-pay]可以让支付变得更简单，并且支持服务端与服务单下单。示例代码如下：\n```java\nprivate void doWxpay(String orderInfo) {\n    final Activity activity = this;\n    // 获取支付类\n    Wxpay wxpay = Wxpay.getInstance(activity);\n    // 设置支付回调监听\n    wxpay.setPayListener(new Wxpay.PayListener() {\n        @Override\n        public void onPaySuccess(BaseResp resp) {\n            showToast(activity, \"支付成功\");\n        }\n\n        @Override\n        public void onPayCanceled(BaseResp resp) {\n            showToast(activity, \"支付取消\");\n        }\n\n        @Override\n        public void onPayFailure(BaseResp resp) {\n            showToast(activity, \"支付失败\");\n        }\n    });\n    // 这里是服务端下单，内容是统一下单返回的xml\n    if (!TextUtils.isEmpty(orderInfo)) {\n        PayReq req = OrderInfoUtil.getPayReq(orderInfo);\n        wxpay.pay(req);\n    }\n    else { // 客户端下单\n        Wxpay.DEBUG = true; // 开启日志\n        // API密钥，在微信商户平台设置\n        Wxpay.Config.api_key = \"32位的字串\";\n        // APPID，在微信开放平台创建应用后生成\n        Wxpay.Config.app_id = \"wx...\";\n        // 商户ID，注册商户平台后生成\n        Wxpay.Config.mch_id = \"14...\";\n        // 支付结果异步通知接口，由后台开发提供\n        Wxpay.Config.notify_url = \"http://www.ieclipse.cn/app/pay/wxpay_notify.do\";\n        // 创建统一下单异步任务\n        Wxpay.DefaultOrderTask task = new Wxpay.DefaultOrderTask(wxpay);\n        // 这个商户订单号，由后台返回，在这里随便生成一个\n        String outTradeNo = OrderInfoUtil2_0.genOutTradeNo();\n        // 设置统一下单的请求参数\n        task.setParams(OrderInfoUtil.buildOrderParamMap(outTradeNo, \"测试支付\", \"\", \"1\", null, null, null));\n        task.execute();\n    }\n}\n```\n附上完整的支付过程中的日志\n![完整日志](http://dl.ieclipse.cn/screenshots/af-pay-wechat.png)\n\n如果是服务端下单，客户端只需生成PayReq对象，然后调用`wxpay.pay(PayReq)`即可。[af-pay]已经配置好回调的WXPayActivity和Receiver。详细信息请访问Github。\n\n## 关于\n[QuickAF]是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\n微信支付开发文档：https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_1\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n[微信开放平台]: https://open.weixin.qq.com\n[微信商户平台]: https://mch.weixin.qq.com\n[统一下单]: https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_1\n[af-pay]: https://github.com/Jamling/af-pay\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"Android中实现圆角图片的几种姿势","url":"/2017/05/18/Android/quickaf-round/","content":" Android中实现圆角图片有多种姿势，不知你解锁了几种？\n<!-- more -->\n\n## 方法一：setXfermode法\n此种方式就是再new一个相同尺寸的bitmap，然后使用paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));先画圆角矩形，再画原始bitmap，然后就得到了一个圆角的bitmap了。\n```java\npublic static Bitmap getRoundedCornerBitmap(Bitmap bitmap, float roundPx) {\n\n    Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);\n    Canvas canvas = new Canvas(output);\n\n    final int color = 0xff424242;\n    final Paint paint = new Paint();\n    final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());\n    final RectF rectF = new RectF(rect);\n\n    paint.setAntiAlias(true);\n    canvas.drawARGB(0, 0, 0, 0);\n    paint.setColor(color);\n    canvas.drawRoundRect(rectF, roundPx, roundPx, paint);\n\n    paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));\n    canvas.drawBitmap(bitmap, rect, rect, paint);\n\n    return output;\n}\n```\n点评：\n早期用得较多，占用bitmap双倍内存。\n\n## 方法二：使用BitmapShader\n此种方式是先将bitmap生成BitmapShader，然后将其绘制到canvas中, 部分关键代码如下，完整代码请参考[QuickAF]中的RoundImageView\n\n```java\nbitmapShader = new BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);\npaint.setShader(bitmapShader);\n```\n\n```java\n@Override\npublic void draw(Canvas canvas) {\n    Rect bounds = getBounds();\n    canvas.drawRoundRect(fillRect, radius, radius, paint);\n    if (mBorderWidth > 0) {\n        if (mIsCircle) {\n            canvas.drawCircle(bounds.width() / 2, bounds.height() / 2, radius, strokePaint);\n        }\n        else {\n            canvas.drawRoundRect(fillRect, radius, radius, strokePaint);\n        }\n    }\n}\n```\n点评：\n占用内存较大，实现有点小复杂。\n\n## 方法三：图片加载库\n目前github上有许多流行的图片加载库，基于上都附带圆角图片功能，只需要稍微配置一下，即可轻松的实现想要的效果。其实在底层，无非也是使用上面的两种方式。比如[Android-Universal-Image-Loader](Android-Universal-Image-Loader) 早期的RoundedBitmapDisplayer使用setXfermode来实现，后来使用BitmapShader实现。\n```java\nDisplayImageOptions options = new DisplayImageOptions.Builder()\n        .displayer(new RoundedBitmapDisplayer()) // display rounded bitmap\n        .build();\n```\n再以比较另类的[fresco](https://github.com/facebook/fresco)为例，虽然底层是以C实现，不过在圆角处理上，仍然还是在Java层实现，用的方式还是BitmapShader。不过对于非bitmap的圆角实现，fresco是用Paint直接画的。附上fresco配置。\n```xml\n<com.facebook.drawee.view.SimpleDraweeView\n  android:id=\"@+id/my_image_view\"\n  android:layout_width=\"20dp\"\n  android:layout_height=\"20dp\"\n  fresco:fadeDuration=\"300\"\n  fresco:actualImageScaleType=\"focusCrop\"\n  fresco:placeholderImage=\"@color/wait_color\"\n  fresco:placeholderImageScaleType=\"fitCenter\"\n  fresco:failureImage=\"@drawable/error\"\n  fresco:failureImageScaleType=\"centerInside\"\n  fresco:retryImage=\"@drawable/retrying\"\n  fresco:retryImageScaleType=\"centerCrop\"\n  fresco:progressBarImage=\"@drawable/progress_bar\"\n  fresco:progressBarImageScaleType=\"centerInside\"\n  fresco:progressBarAutoRotateInterval=\"1000\"\n  fresco:backgroundImage=\"@color/blue\"\n  fresco:overlayImage=\"@drawable/watermark\"\n  fresco:pressedStateOverlayImage=\"@color/red\"\n  fresco:roundAsCircle=\"false\"\n  fresco:roundedCornerRadius=\"1dp\"\n  fresco:roundTopLeft=\"true\"\n  fresco:roundTopRight=\"false\"\n  fresco:roundBottomLeft=\"false\"\n  fresco:roundBottomRight=\"true\"\n  fresco:roundWithOverlayColor=\"@color/corner_color\"\n  fresco:roundingBorderWidth=\"2dp\"\n  fresco:roundingBorderColor=\"@color/border_color\"\n/>\n```\n点评：\n由框架实现，使用简单，稳定。\n\n## 方法四：遮罩\n此种方式还是使用setXfermode，不过与方法一不同的是：不对图片作任何更改，只在圆角之外再画一层与背景颜色相同的四个角来遮挡，在视觉上造成圆角图片的效果。关键代码如下：\n```java\n@Override\nprotected void onDraw(Canvas canvas) {\n    super.onDraw(canvas);\n    if (src != null && dst != null) {\n        int w = getMeasuredWidth(), h = getMeasuredHeight();\n        int sc = canvas.saveLayer(0, 0, w, h, null,\n            Canvas.MATRIX_SAVE_FLAG | Canvas.CLIP_SAVE_FLAG | Canvas.HAS_ALPHA_LAYER_SAVE_FLAG\n                | Canvas.FULL_COLOR_LAYER_SAVE_FLAG | Canvas.CLIP_TO_LAYER_SAVE_FLAG);\n        canvas.drawBitmap(dst, 0, 0, paint); // 圆角矩形\n        paint.setXfermode(mode); // new PorterDuffXfermode(PorterDuff.Mode.SRC_OUT);\n        canvas.drawBitmap(src, 0, 0, paint); // 长方形\n        paint.setXfermode(null);\n        canvas.restoreToCount(sc);\n    }\n}\n```\n详细代码请参考[QuickAF]中的RoundMaskView\n\n使用这种方式，圆角化的对象不限于ImageView，还可以是任意的layout哦，比如下面的示例\n```xml\n<FrameLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\">\n\n        <ImageView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"150dp\"\n            android:src=\"@color/colorAccent\"/>\n\n        <TextView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"bottom\"\n            android:background=\"@color/black_alpha_50\"\n            android:padding=\"12dp\"\n            android:text=\"I am text\"/>\n    </LinearLayout>\n\n    <cn.ieclipse.af.view.RoundMaskView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:radius=\"10dp\"\n        app:af_borderColor=\"@color/white\"\n        app:af_borderWidth=\"1dp\"/>\n</FrameLayout>\n```\n配合FrameLayout，将LinearLayout实现了圆角，在视觉效果上，ImageView左上和右上圆角，TextView左下和右下圆角。\n\n点评：\n具有一定的局限性，不过不限于图片，所有的Layout都可以在视觉上实现圆角。\n\n## 关于\n\n[QuickAF]是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"QuickAF网络连接及数据解析简介","url":"/2017/05/12/Android/quickaf-rest/","content":"\n[QuickAF]中使用Volley进行网络连接，使用Gson来解析响应数据。为了更方便地执行REST API网络请求，[QuickAF]对Volley+Gson进行了简单的封装。\n\n<!-- more -->\n\n## 接口请求与响应设计\n\n### 接口\nREST接口是基于HTTP协议的，一个接口的定义包含请求地址，请求方法，请求参数，响应信息。请求地址为一个URL，由基地址和接口路径和查询字符串组成。比如http://127.0.0.1:8080/meituan/api/1.0/user/login?token=xxxxxxx; http://127.0.0.1:8080/meituan/api/1.0/ 为基地址，一套api，其基地址是相同的。1.0为接口版本，user/login为接口路径，token=xxxxxx为查询字符串。请求方法有GET/POST/PUT/DELETE等。[QuickAF]将接口地址抽象为IUrl接口\n```java\npublic interface IUrl {\n    /**\n     * return http method, see {@link com.android.volley.Request.Method}\n     *\n     * @return http method\n     * @see com.android.volley.Request.Method\n     */\n    int getMethod();\n\n    /**\n     * return the full url\n     *\n     * @return\n     */\n    String getUrl();\n\n    /**\n     * set query string to url.\n     *\n     * @param query query string, it a request parameter of string format usually\n     */\n    void setQuery(String query);\n}\n```\n\n### 请求\n一般来说接口的请求比较简单，如果请求是application/json，将请求对象转为json字符串即可。但是实际当中，仍然有许多接口使用的还是application/x-www-form-urlencoded，这种方式简单，而且适用于网页。[QuickAF]默认以后者来提交http请求，并且支持以下两种请求格式\n1. 键值对，这也是早期使用最多的，通过Map来存储请求参数。\n2. 对象，通过反射机制将对象的属性及属性值转化对键值对，具有很高的可扩展性，一旦接口有变更，比如接口要求添加uuid参数，可以非常方便的修改请求基类来满足业务需求，[QuickAF]建议使用这种方式来封装请求。\n\n通常在REST API中包含appKey, secret, uuid等全局请求参数，[QuickAF]的sample app中定义的请求基类如下：\n```java\npublic class BaseRequest implements java.io.Serializable {\n    public String appKey;\n    public String secret;\n    public String version;\n    public String uuid;\n}\n```\n具体的业务API只需要继承BaseRequest，然后添加具体的业务请求参数，比如注册的请求\n```java\npublic class RegisterRequest extends BaseRequest {\n    public String phone;\n    public String code;\n    public String password;\n}\n```\n对于GET请求，将请求对象转为查询字符串附在url中，对于POST请求，则将请求对象写入body中。\n\n### 响应\nREST API接口响应一般包含状态码(status)，提示信息(message)及业务对象(data)，需要经过json工具将其转为对象，这个对象我们姑且称之为接口对象。伪代码如下：\n```java\nclass MyResponse {\n  int code;//业务响应状态码\n  String message;//业务响应信息，比如投票失败\n  Object data;//业务响应对象，比如登录，返回的是一个User对象\n}\n```\n\n其实业务模块往往关心的只有业务对象(data)，因为对于业务操作不成功的处理，可以在基类中统一处理。在[QuickAF]中，将接口对象抽象为IBaseResponse接口。\n```java\npublic interface IBaseResponse<Output> extends java.io.Serializable{\n    /**\n     * Return the business data object\n     *\n     * @return concrete business data\n     */\n    Output getData();\n}\n```\n\n### 请求任务\n如果我们将请求视为输入，响应视为输出，那么对于一次网络请求，使用代码实现的话，就是：\n```java\nabstract class MyTask<Input,Output> {\n  void onSuccess(Output output); // 业务请求成功\n  void onError(RestError error);//业务请求失败\n  Url getUrl();//业务请求地址\n}\n```\n在[QuickAF]中，已经实现了网络请求与数据解析功能，所以对开发者来说，只需专注于业务接口，即：接口地址，请求对象，返回的业务对象(data)。业务请求成功，在相关的界面填充业务数据(data)，请求失败，给出相应的错误信息(message)。\n\n[QuickAF]有两个执行任务的方法\n\n1. 如果输出为对象(Output)是一个对象，则需调用load方法，将Output的class传进去。\n2. 如果输出为集合(List)，则需调用load2List方法，将集合中的元素class传进去。\n3. 自动识别，调用load方法，无需传入Output的class。\n\n```java\n// method 1\nclass MyTask<Object, User> {\n  //... 获取单个用户，输入为object，输出为User\n}\n// 执行任务\nnew MyTask().load(/*request*/null, User.class, /*don't load cache*/false);\n\n// method 2 for List\nclass MyListTask<Object, List<User>> {\n  //... 获取用户列表，输入为object, 输出为List<User>集合\n}\nnew MyListTask().load2List(null, User.class, /*use cache*/true);\n\n// method 3, auto load\nnew MyTask().load(null, false);// sampe to load(null, User.class, false)\nnew MyListTask().load(null, true);// sampe to load2List(null, User.class, false)\n```\n\n\n## 进阶操作\n### 配置接口对象\n接口对象，一个app，一般只有一个。定义如下\n```java BaseResponse.java\npublic class BaseResponse<Output> implements IBaseResponse {\n    private static final long serialVersionUID = -3440061414071692254L;\n\n    /**\n     * 状态码\n     */\n    public int code;\n\n    /**\n     * 消息\n     */\n    public String message;\n\n    /**\n     * 数据，业务对象\n     */\n    public Output data;\n    public Output getData() {\n      return data;\n    }\n}\n```\n然后可以在Application.onCreate()中配置。\n```java\n// typically, you just config volley in Application.onCreate\nVolleyConfig config = new VolleyConfig.Builder()\n    .setBaseResponseClass(WeatherBaseResponse.class)\n    .build();\nVolleyManager.init(getApplicationContext(), config);\n```\n如果有喜欢使用OkHttp的同学，还可配置网络连接使用OkHttp，需要写一个OkHttpStack继承自Volley的HurlStack，参考[QuickAF]示例app中的OkHttpStack.java.sample。\n\n### 接口统一处理\n主要是根据接口业务状态码进行处理。比如定义业务操作成功，响应码为0，那么不为0的时候，就不应该解析业务对象，转入错误分支。\n```java\nprotected abstract class AppBaseTask<Input, Output> extends RequestObjectTask<Input, Output> {\n\n    @Override\n    public boolean onInterceptor(IBaseResponse response) throws Exception {\n        if (response instanceof BaseResponse) {\n            BaseResponse resp = (BaseResponse) response;\n            if (0 != resp.code) {\n                onLogicError(new LogicError(null, resp.code, resp.message));\n                throw new InterceptorError();\n            }\n        }\n        return false;\n    }\n\n    public void onLogicError(LogicError error) {\n        if (404 == error.getCode() || 104 == error.getCode()) { {\n            // LoginActivity.go(MyApplication.instance);\n            return;\n        }\n        onError(new RestError(error));\n    }\n}\n```\n\n### 数据模拟\n接口对象或业务对象类需在mock()方法中给对象填充模拟值，参考示例工程中BaseInfo.java（这个类是所有业务对象模型的基类）。\n\n## 最佳实践\n- 所有的请求继承一个BaseRequest，接口定义的全局请求参数在BaseRequest中定义\n- 一套接口API，定义一个全局的AppController及AppBaseTask来处理公共的业务，比如业务拦截。\n- 所有的业务模型继承一个BaseInfo\n- 一个Controller对应一个界面，应继承AppController，包含若干网络请求Task\n- 网络请求Task回调作为内部interface定义在具体的Controller中。\n\n更多请参考demo app工程\n\n## 关于\n\n[QuickAF]是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"有奖破解网页密码第四弹","url":"/2017/04/01/Web/hexo-encryptv4_1/","content":"\n在今日24:00之前破解密码的，将送月球一日游~欢迎大家跳跃报名参加~\n\n<!-- more-->\n\n不好意思，我只是开个玩笑啦~祝愚人节快乐！\n","tags":["Hexo"],"categories":["Web"]},{"title":"安全杂谈二之入侵公司OA系统","url":"/2017/03/29/other/safe_ajax_cross/","content":"本次讲一个入侵公司OA系统，获取公司员工薪资待遇的故事。首先声明一下，入侵人不是我，是我的一个朋友，为方便叙述，在这里使用第一人称。\n\n<!-- more -->\n\n之前在某软件公司，使用的OA系统是由一家比较知名的另一软件公司深度定制的。里面使用了大量的javascript。有一次公司OA上新增了一个模块，用于查询员工的XX信息。当时我点击进去一看，XX的值竟然有光标闪烁，而且还可以输入值，当时我的第一反应就是，这应该是一个text域，一看源代码，果然是。那么我就想，既然是可编辑的text域，那么我可不可以提交此值呢？接着就去研究相关的源代码，然后竟然发现了查询XX值的SQL语句！哈哈，有了SQL我什么事不能做？不过SQL并不能直接执行。通过更深入的研究，又破解了SQL执行机制。然后，激动人心的时刻到了，我把XX的update sql通过脚本执行的时候，弹出了一个乱码提示框，而且重新加载XX信息界面，XX的值并没有更改。当时心里还是蛮慌的，以为失败了。而且，本次入侵，我使用的是局域网，人事/IT会不会来找我？过了两天发现我修改的XX竟然生效了~ 而且也没有谁来找我。于是，我邪恶地笑了，接下来是研究我的工资模块。有了之前的研究成果，我的进展很顺利，我可以在我的脚本写顺序查询自己的工资。接下来，就是研究怎么查询他人的工资了。我试着通过调试程序，将某个熟悉的同事的工号等信息替换成我的，然后继续执行。结果成功的查询到了。然后，通过再次深入的研究OA系统，并不断的优化。实现了点击一个按钮，将全公司除了隶属总公司的员工薪水信息导出到excel中。\n\nPS1：IE虽然不受前端工程师欢迎，不过拿来做入侵还是不错的。\nPS2：前端不要暴露表结构，哪怕是跟表结构相关的。\nPS3：世人无难事，就怕有心人，虽然花了不少时间，但还是值得的。\n","tags":["安全"],"categories":["其它"]},{"title":"安全杂谈一之SQL注入","url":"/2017/03/28/other/safe_sql_inject/","content":"Web系统非常容易受到攻击，SQL注入做为一个常用的攻击方式，常见于一些老的系统。危害相当大。在这里讲一个SQL注入相关的例子。\n\n<!-- more -->\n\n那是多年以前的事，再次见到她，不禁怦然心动，几年不见，她已是亭亭玉立，作为一枚单身狗，当然会有一些想法。在得知她仍单身的情况后，心中狂喜，满以为能通过这次的邂逅，拉近双方的距离，或许能终结我的单身生活也说不定，哈哈。不过，接下来的事却令我失望，漂亮的女生总是高冷的，但这并没有让我退却。我想方设法得到她的更多信息，如此才好展开攻势。不过她好像觉察到了我的意图，或是之前也有人使用过相同的伎俩，她拒绝向我透漏更多的个人信息。不过，这难不倒我这个技术出身的，我相信在网络的时代，我终会找到一丝蛛丝马迹。我先百度到了她所读的大学，然后在就业中找到了毕业生去向查询入口，不过需要登录才能查询。我仔细看了下，地址的后缀是.asp，表示这是一个比较老的系统了，或许我可以通过SQL注入来绕过。于是，我先在用户名中输入带特殊符合的SQL，很不幸，用户名不允许输入字符，需要输入真实姓名（用户名为真实姓名）。然后我将注入的SQL写在记事中，仔细地在密码域中一个一个输入，完毕之后，再重重敲击了一下Enter，奇迹发生了，我成功的登录了！而且，查询到了她毕业后的进入的公司。\n\n不过后面的事，我就不讲了，我仍然做我的单身青年，她仍然做她的高冷女神。\n\n写在最后：其实，我们程序员，并不全是呆板木讷的。我们有想法，有智商，同时也有手段。认真最一件事的时候，爆发力可是相当高的。在此与提醒同为做技术的同学们，Web系统的安全性一定要做好，SQL不要拼接，使用预处理SQL，服务端的校验一定要做，必要时加密。\n","tags":["安全"],"categories":["其它"]},{"title":"将多说评论换成畅言","url":"/2017/03/23/Web/hexo-duoshuo2changyan/","content":"\n多说在3月21日发布了重要通知，[全文]如下：\n\n<!-- more-->\n\n因公司业务调整，非常遗憾的向大家宣布多说项目即将关闭。 我们将于2017年6月1日正式关停服务，在此之前您可以通过后台的数据导出功能导出自己站点的评论数据。 对此给您造成的不便，我们深表歉意，感谢您的一路相伴。\n\n听到这则消息，我当时也是震惊的，不是说好的永久免费的吗？然则静心而论，免费而无盈利，终究不是长久之路。我对此也非常的理解。不管怎样，未雨绸缪，准备的工作还是要做的。所以在第一时间得为自己找一个备选的第三方评论系统。主要的选择如下：\n- 友言，其实最开始，我是使用友言的，博客也积累了一些评论，不过，功能有点单一，不如多说，所以决定换，在换成多说后，发现原来的评论无法导出，联系客服，说是维护中，好吧，维护大半年了，至今仍不能导出。所以不敢用了。\n- 网易云跟贴，网易家大业大，相信产品质量还是可以的。不过云跟贴，现在还是beta版本。待稳定再说吧。\n- 搜狐畅言，了解了一下，支持的功能比多说还多，还有一些特色功能，比如打赏，广告，而且也开放了API。\n综上，决定使用畅言。说干就干，将[hexo-theme-nova]添加了对畅言的支持。具体的代码呢，请参考github上的[hexo-theme-nova]项目。\n\n不过在此特别强调一下\n1，畅言要求网站有ICP备案，如果没有，或者不匹配，评论框无法加载。\n2，畅言本地调试不支持localhost(127.0.0.1)，只能进行在线测试。\n3，畅言的设置需延迟生效（有缓存），所以更改一项设置，要等十几分钟才能看到效果。\n4，畅言的导入功能不太正常，我昨天导入的多说，提示成功，可后台前台始终未见数据。结果我又导了一次，仍然不成功。我仔细看了看，两家的json格式不一样，还以为格式有问题，差点就想动手写插件转换了。不过手头有工作，暂时放下，今天一看，前台已经有原来多说的评论数据了，后台还是没有。\n\n\n最后一句：不要XXX了，我们欠YYY一个ZZZ。希望大家能尊重他人劳动成果~\n\n<!-- more-->\n\n[全文]: http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241\n[hexo-theme-nova]: https://github.com/Jamling/hexo-theme-nova\n","tags":["Hexo"],"categories":["Web"]},{"title":"有奖破解网页密码第三弹","url":"/2017/03/08/Web/hexo-encryptv2_1/","content":"\n本次不设奖金，因为破解的速度实在太快啦。\n\n<!-- more-->\n\nFuck Lotte&Fuck Thaad\n","tags":["Hexo"],"categories":["Web"]},{"title":"有奖破解网页密码第二弹","url":"/2017/03/08/Web/hexo-encryptv2/","content":"\n限时破解密码有奖，截止2017年3月8号24点前，第一个破解的人，请将页面密码作为内容评论，核实正确之后将得到20元人民币奖励。\n\n<!-- more-->\n\n恭喜您破解了本页密码！您属于以下人群之一：\n\n1. Web前端高手，js的加密，混淆等技术难不倒您。\n2. 善于思考的智者，善于从蛛丝马迹中发现端倪。\n3. Hexo Geeker，您对Hexo有较深入的了解，而不是普通的使用者。\n4. 猎奇者，您只是好奇本页内容是什么而已。\n\n其实，说了那么多，我就是在扯蛋，因为密码就在源码中~\n","tags":["Hexo"],"categories":["Web"]},{"title":"有奖破解网页密码第一弹","url":"/2017/03/07/Web/hexo-encrypt/","content":"\n限时破解密码有奖，截止2017年3月8号24点前，第一个破解的人，请将页面密码作为内容评论，核实正确之后将得到10元人民币奖励。\n(已结束，奖励已发放，密码为lady)\n<!-- more-->\n\n恭喜您破解了本页密码！您属于以下人群之一：\n\n1. Web前端高手，js的加密，混淆等技术难不倒您。\n2. 善于思考的智者，善于从蛛丝马迹中发现端倪。\n3. Hexo Geeker，您对Hexo有较深入的了解，而不是普通的使用者。\n4. 猎奇者，您只是好奇本页内容是什么而已。\n\n其实，说了那么多，我就是在扯蛋，因为密码就在源码中~\n","tags":["Hexo"],"categories":["Web"]},{"title":"QuickAF中的下拉刷新","url":"/2017/03/03/Android/quickaf-refreshlayout/","content":"\n{% asset_img RefreshLayout.png %}\n\n[QuickAF]使用`RefreshLayout`控件进行下拉刷新和上拉加载，通过在布局中定义`app:ptr_content`和`app:ptr_empty`或api中设置内容layout和错误view。\n`RefreshLayout`的特点如下：\n- 支持任意Layout的下拉刷新和上拉加载，默认支持`VScrollView`,`RecyclerView`, `ListView`, `GridView`上拉/下拉，还可以通过registerDetector来支持更多的Layout;\n- 支持自定义EmptyView，一个EmptyView包含loading, empty, error三个子view\n- 支持empty view的下拉刷新\n- 支持FooterView，FooterView一般在Adapter中定义\n\n<!-- more -->\n\n## 使用示例\n请参考[QuickAF]中的`BaseListFragment.java`\n\n```java\npublic abstract class BaseListFragment<T> extends BaseFragment implements RefreshLayout.OnRefreshListener {\n    protected RefreshLayout mRefreshLayout;\n    protected RefreshRecyclerHelper mRefreshHelper;\n    protected RecyclerView mListView;\n    protected AfRecyclerAdapter<T> mAdapter;\n\n    @Override\n    protected int getContentLayout() {\n        return R.layout.base_refresh_recycler;\n    }\n\n    @Override\n    protected void initContentView(View view) {\n        super.initContentView(view);\n\n        mRefreshLayout = (RefreshLayout) view.findViewById(R.id.refresh);\n        mRefreshLayout.setOnRefreshListener(this);\n        mRefreshLayout.setMode(RefreshLayout.REFRESH_MODE_BOTH);\n        mListView = (RecyclerView) mRefreshLayout.findViewById(R.id.rv);\n\n        mRefreshHelper = generateRefreshHelper();\n        mAdapter = generateAdapter();\n        mRefreshHelper.setAdapter(mAdapter);\n    }\n\n    @Override\n    public void onRefresh() {\n        load(false);\n    }\n\n    @Override\n    public void onLoadMore() {\n        load(false);\n    }\n\n    protected void load(boolean needCache) {\n    }\n\n    protected RefreshRecyclerHelper generateRefreshHelper() {\n        AppRefreshRecyclerHelper helper = new AppRefreshRecyclerHelper(mRefreshLayout);\n        return helper;\n    }\n\n    protected abstract AfRecyclerAdapter<T> generateAdapter();\n}\n```\n\n布局\n```xml base_refresh_recycler.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<cn.ieclipse.af.view.refresh.RefreshLayout\n    android:id=\"@+id/refresh\"\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:ptr_content=\"@layout/base_rv\"\n    app:ptr_empty=\"@layout/ptr_empty_view\">\n\n</cn.ieclipse.af.view.refresh.RefreshLayout>\n```\nptr_content布局\n```xml base_rv.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.v7.widget.RecyclerView\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:id=\"@+id/rv\"\n    style=\"@style/base_rv\">\n\n</android.support.v7.widget.RecyclerView>\n```\n\n## 关于\n\n[QuickAF]是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"VectorDrawble踩过的坑","url":"/2017/03/02/Android/vector-trap/","content":"\n## 前言\nAndroid 从5.0（代号L）开始支持矢量图，心想，这个好哇，drawable/mipmap图片资源终于可以瘦身了！后来还特地翻墙在YouTube上观看了Google IO大会上在Android Studio中创建Vector drawable的视频。本着匆用新版本的原则。一直对它处于了解阶段。并未在项目中实践。前一阵子，实践了一把，结果差点被坑死。下面列举一下本人亲自踩过的坑。\n\n<!-- more -->\n\n## fillColor无法在低于API21的版本使用引用颜色\n在项目中，使用定义了`colorPrimary`作为主题首选色，比如蓝色。现引用一个Vector，要求颜色与主题首选色一致。第一时间想到的就是，在Vector中作如下定义：\n\n```xml\n<path\n        android:fillColor=\"@color/colorPrimary\"\n        android:pathData=\"...\"/>\n```\n然而在5.0以下的设备中运行时发现，图标为黑色，`fillColor`设置无效。Google之后，说应该使用Tint来对vector着色，好吧，于是写了一个util方法进行处理。\n``` java\npublic static Drawable tintDrawable(Drawable drawable, int color) {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n        drawable.setTint(color);\n        return drawable;\n    }\n    else {\n        final Drawable wrappedDrawable = DrawableCompat.wrap(drawable);\n        DrawableCompat.setTint(wrappedDrawable, color);\n        return wrappedDrawable;\n    }\n}\n```\n\n## TextView compound drawable无法着色\n我有一个带Compound Drawable的`TextView`\n``` xml\n<TextView\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:drawableLeft=\"@drawable/ic_back\"\n    android:gravity=\"center\"\n    android:minHeight=\"40dp\"\n    android:minWidth=\"40dp\"\n    android:paddingRight=\"5dp\"\n    android:text=\"@string/common_back\"\n    android:textColor=\"@color/white\"\n    android:textSize=\"16sp\">\n</TextView>\n```\nic_back是VectorDrawble，我想设置图片颜色与文字一致，都为白色。本以为加上`android:drawableTint=\"#FFF\"`就行了，然而发现并不起作用。于是尝试将`TextView`换成`AppcompatTextView`，竟然还是不起作用，debug了一把，发现`AppcompatTextHelper`无法生成`TintInfo`\n```java\n    protected static TintInfo createTintInfo(Context context,\n            AppCompatDrawableManager drawableManager, int drawableId) {\n        final ColorStateList tintList = drawableManager.getTintList(context, drawableId);\n        if (tintList != null) {\n            final TintInfo tintInfo = new TintInfo();\n            tintInfo.mHasTintList = true;\n            tintInfo.mTintList = tintList;\n            return tintInfo;\n        }\n        return null;\n    }\n```\n我不明白`ImageView`的`android:tint`可以生效，而`TextView`不可以，又不想将`TextView`拆分为`ImageView`和`TextView`。所以呢，没办法，我只能复制一份ic_back.xml，然后修改fillColor为white之后另存为ic_back_white.xml。\n\n## VectorDrawble无法在selector中使用\n这里其实有两个问问题。\n为了提高用户体验，上面的`TextView`点击颜色会变换，我想让图片也跟着一起变色。我本是这么定义的\n```xml ic_back_selector.xml\n<selector\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <item android:state_pressed=\"true\">\n        <bitmap android:tint=\"#f00\"\n                android:src=\"@drawable/ic_back\"\n                />\n    </item>\n    <item>\n        <bitmap android:src=\"@drawable/ic_back\"\n            android:tint=\"#00f\"/>\n    </item>\n</selector>\n```\n首先在5.0之前的系统上运行，发现tint根本不起作用。所以我又定义了一个ic_back_pressed.xml。\n然后在5.0上的系统运行时，直接crash了。根据`Caused by: android.content.res.Resources$NotFoundException: File res/drawable/ic_back_selector.xml from drawable resource ID #0x7f02005d`错误，stackOverflow上又找到了答案，原来gradle中需要配置android.defaultConfig.vectorDrawables.useSupportLibrary = true。然而并没有卵用，gradle sync之后，还是crash。不过Android Studio有新的错误提示，意思是要使用app:srcCompat代替android:src，按照这个提示，又修改了一次。结果又是crash，提示`Caused by: org.xmlpull.v1.XmlPullParserException: Binary XML file line #6: <bitmap> requires a valid src attribute`。好吧，我认输了。drawable下面已经有ic_back.xml，ic_back_pressed.xml，ic_back_white.xml，ic_back_selector.xml这么多vectorDrawable了，而且我想要的效果还不能实现。这坑就不填了。\n","tags":["Android"],"categories":["Android"]},{"title":"Gradle Compile Exclude","url":"/2016/11/29/Android/gradle-compile-exclude/","content":"\nAndroid兼容库从24.2.0开始，对support-v4做了分库处理，原有的support-v4库拆分成为了support-compat、support-core-ui、support-fragment等库，本着稳定的原则，一直到25.0.0才开始在项目中升级support-v4库，将原有的support-v4替换为support-core-ui（其实，项目中只用到了ViewPager，SwipeRefreshLayout而已）以减少apk体积。然而问题来了，编译时出错，提示存在重复的类库。为保证support库版本一致，我还统一定义并使用了各模块的support版本变量，使用`gradle dependencies`查看依赖的时候，发现有个第三方库依赖于于support-v4:23.0.0。结果导致编译不通过。google了一把，发现gradle complie竟然还可以传参数。来exclude某些库。\n\n<!-- more -->\n\n特记录如下：\n```gradle\n    compile(\"com.timehop.stickyheadersrecyclerview:library:0.4.3\") {\n        exclude group: 'com.android.support'//, module: 'support-v4'\n    }\n    compile ('com.google.android:flexbox:0.1.2') {\n        exclude group: 'com.android.support'\n    }\n```\n\n附：不想频繁更新不稳定library的方法\n\n```gradle\nrepositories {\n    flatDir { dirs 'libs' }\n}\n\ndependencies {\n    compile fileTree(include: ['*.jar'], dir: 'libs')\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.3.0'\n    // compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'\n    // compile 'cn.ieclipse.af:af-library:1.0.0'\n    compile(name: 'af-library-release', ext: 'aar')\n    compile 'com.android.volley:volley:1.0.0'\n    compile 'com.google.code.gson:gson:2.3'\n}\n```\n缺点就是library的依赖库，必须手动在app模块中配置","tags":["Android","Gradle"],"categories":["Android"]},{"title":"Fragment加载WebView","url":"/2016/11/26/Android/fragment-h5/","content":"\n做Android 5年多了，第一次在Fragment中使用WebView，先将Activity中的代码复制过来改改，没有想到，竟然无法正常显示，而是打开手机浏览器渲染WebView，返回后，Fragment一片空白。这还能忍受？Google一把，说是要继承WebViewFragment，但是一旦继承，就破坏了我的框架结构。然后看了下WebViewFragment的源码，并不复杂。所以就将相关的源码合并到现有的fragment中，本以为可以妥妥地解决问题，结果还是那样。最后在stackoverflow上解决了终极解决办法，那就是需要设置特殊的WebViewClient。\n\n```java\n    private class H5WebViewClient extends WebViewClient {\n        @Override\n        public boolean shouldOverrideUrlLoading(WebView webView, String s) {\n            webView.loadUrl(s);\n            //  一定要return true，不然就会使用浏览器打开\n            return true;\n        }\n    }\n```\n\n<!-- more -->\n","tags":["Android"],"categories":["Android"]},{"title":"Android ADB连接海马玩模拟器","url":"/2016/09/19/other/haimawan-adb/","content":"\n使用海马玩模拟器来调试Android还是挺方便的。最近因为真机连接不稳定，又想到了海马玩，不知道怎么回事，竟然运行不了模拟器了，只好下载了一个新版本，然后重新安装。安装完毕之后，竟然找不到devices。我记得，以前可是好好的呢。搜索了一下。说是要手动连接\n\n```bash\nadb connect 127.0.0.1:53001\n```\n可是，出现了`unable to connect错误`。后来在官方论坛里找到了原因。原来是自从0.8.5版本之后，海马玩的adb端口不是固定的。我下载的是新版本（0.10.5），当然连接不上了。官方论坛帖子中有说明需要下载修改器修改。存放在网盘上的文件，下载还要注册。懒得搞。因为海马玩经常在待机时无响应，所以对它的进程还是蛮熟悉的（VBoxHeadless.exe），于是自己动手查找它的端口号。再使用adb connect指令连接，果然又成功地连接上了。\n\n步骤如下：\n1. 查找海马玩的进程ID，可以通过任务管理器查看（查看->选择列->把PID（进程标识符）勾上），也可以通过命令查看\n```bash\ntasklist | findstr VBox*\nC:\\Users\\Jamling>tasklist | findstr VBox*\nVBoxSVC.exe                   6536 Console                    1     13,332 K\nVBoxHeadless.exe              6616 Console                    1    106,572 K\n```\n注意大小写，6616就是PID了。\n2. 通过netstat指令来查看端口号\n```bash\nC:\\Users\\Jamling>netstat -o | findstr 6616\n  TCP    127.0.0.1:26941        lijiaming-PC:54961     ESTABLISHED     6616\n  TCP    127.0.0.1:26941        lijiaming-PC:56864     ESTABLISHED     6616\n  TCP    127.0.0.1:26942        lijiaming-PC:56905     ESTABLISHED     6616\n  TCP    127.0.0.1:26943        lijiaming-PC:56920     ESTABLISHED     6616\n  TCP    127.0.0.1:26944        lijiaming-PC:56934     ESTABLISHED     6616\n  TCP    127.0.0.1:26945        lijiaming-PC:56980     ESTABLISHED     6616\n  TCP    127.0.0.1:26946        lijiaming-PC:54962     ESTABLISHED     6616\n  TCP    127.0.0.1:26947        lijiaming-PC:54963     ESTABLISHED     6616\n  TCP    127.0.0.1:26948        lijiaming-PC:54610     ESTABLISHED     6616\n  TCP    192.168.133.15:55467   103.28.9.11:http       ESTABLISHED     6616\n  TCP    192.168.133.15:57223   115.239.210.246:5287   ESTABLISHED     6616\n  TCP    192.168.133.15:60100   183.131.26.108:http    CLOSE_WAIT      6616\n  TCP    192.168.133.15:60298   ti-in-f100:https       SYN_SENT        6616\n```\n看第2列就是VBoxHeadless本机的TCP地址与端口号。（其实，一开始只有26941, 26946, 26947, 26948这4个），但是`adb connect 127.0.0.1:26941`之后，提示成功，但设备状态却是offline，然后，从26941开始到26945试了个遍。没想到真正的端口是26944。\n```bash\nC:\\Users\\Jamling>adb devices\nList of devices attached\n127.0.0.1:26945 offline\n127.0.0.1:26944 device\n127.0.0.1:26943 offline\n127.0.0.1:26942 offline\n127.0.0.1:26941 offline\n```\n\n\n","tags":["Android"],"categories":["奇淫巧技"]},{"title":"将hexo博客部署到coding.net","url":"/2016/09/08/Web/hexo-coding-pages/","content":"\n[Hexo博客双线部署]的姐妹篇。详细详述如何将hexo博客部署到coding.net\n\n## 注册coding.net\n如果你原来有gitcafe账号，那么根据官方的向导，将数据从gitcafe迁移到coding。如果没有，那么就注册一个吧。\n\n## 创建项目\n登录成功后，可以创建项目，在[Hexo博客双线部署]中，我介绍的是用户pages，在这里，我介绍项目pages，所以创建的是一个普通项目。创建过程如下所示：\n\n{% asset_img create_project.png %}\n简单填下项目名称和简介就行。\n\n***注意：那个使用README.md文件初始化项目不要勾选***\n\n## 开启Coding Pages服务\n\n{% asset_img open_pages.png %}\n\n在项目管理台，点击`Pages服务`选项卡，再点击`开启服务`按钮来开启服务。服务开启之后，可以绑定域名。\n\n{% asset_img pages_bind.png %}\n\n建议绑定域名，比如，我已经有一个用户pages服务了，访问项目pages，好像相当于访问用户pages下的子目录。有许多资源出现404，导致页面显示不正常。\n\n注：公开的项目Pages使用http协议\n\n## DNS解析\n\n先绑定域名再说，因为域名解析不是马上就生效的。登录你的域名控制台，添加域名dns解析规则，如下图所示：\n\n{% asset_img dns.png %}\n\n添加一条CNAME的记录解析到pages.coding.me就可以了。\n\n\n## 创建项目 Pages\n参考[Coding Pages 帮助]，创建项目Pages。我使用master分支来存放hexo的源文件，站点生成之后，部署到coding-pages分支。简要的步骤如下：\n\n- 使用`git clone`命令将项目克隆到本地\n- 使用`git checkout --orphan coding-pages`生成一个新的空分支\n- 使用`git rm -rf .`命令删除coding-pages中已有的文件（如果没有用README.md初始化项目，可以跳过此步骤，不过建议执行一下此命令）\n- 新建一个测试的`index.html`文件，符合html标准，内容随意，我是使用`vim index.html`编辑的，不熟悉vim的，可以直接使用记事本等工具来生成\n- 使用`git push -u origin coding-pages`来推送到coding-pages分支\n\n下面是我的详细操作过程\n\n```bash\nJamling@lijiaming-PC MINGW64 /e/hexo\n$ git clone git@git.coding.net:Jamling/life.git\nCloning into 'life'...\nremote: Counting objects: 3, done.\nremote: Total 3 (delta 0), reused 0 (delta 0)\nReceiving objects: 100% (3/3), done.\nChecking connectivity... done.\n\nJamling@lijiaming-PC MINGW64 /e/hexo\n$ cd life/\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ git checkout --orphan coding-pages\nSwitched to a new branch 'coding-pages'\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (coding-pages)\n$ ls\nREADME.md\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (coding-pages)\n$ git rm -rf .\nrm 'README.md'\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (coding-pages)\n$ vim index.html\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (coding-pages)\n$ git status\nOn branch coding-pages\n\nInitial commit\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n        index.html\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (coding-pages)\n$ git add .\nwarning: LF will be replaced by CRLF in index.html.\nThe file will have its original line endings in your working directory.\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (coding-pages)\n$ git commit -m \"init commit\"\n[coding-pages (root-commit) be74fbf] init commit\nwarning: LF will be replaced by CRLF in index.html.\nThe file will have its original line endings in your working directory.\n 1 file changed, 4 insertions(+)\n create mode 100644 index.html\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (coding-pages)\n$ git push -u origin coding-pages\nCounting objects: 3, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 286 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo git@git.coding.net:Jamling/life.git\n * [new branch]      coding-pages -> coding-pages\nBranch coding-pages set up to track remote branch coding-pages from origin.\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (coding-pages)\n$\n```\n\n## 部署验证\n\n上面的步骤做完，dns缓存应该也更新好了。使用浏览器访问一下，看一下coding-pages是否正确部署了。\n{% asset_img url1.png %}\n{% asset_img url2.png %}\n\n## 安装hexo\n- 使用`git checkout master`将分支切到master分支\n- 使用`hexo init`来初始化博客，注意，执行过程中，会将.git仓库删除掉，后面需要重新初始化git\n- 使用`git init`重新初始化git仓库\n- 使用`git remote add`重新设置git仓库远程路径\n- 使用`git pull`将远程内容与本地内容合并\n\n具体的操作步骤如下：\n\n```bash\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ hexo init\nINFO  Cloning hexo-starter to E:\\hexo\\life\nfatal: destination path 'E:\\hexo\\life' already exists and is not an empty directory.\nWARN  git clone failed. Copying data instead\nINFO  Install dependencies\n// 此处忽略hexo的安装输出日志\nINFO  Start blogging with Hexo!\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life\n$ git status\nfatal: Not a git repository (or any of the parent directories): .git #.git被hexo干掉了 :(\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life\n$ rm README.md #一定要删除，不然下面的git pull会执行不了\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life\n$ git remote add origin git@git.coding.net:Jamling/life.git\nfatal: Not a git repository (or any of the parent directories): .git\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life\n$ git init\nInitialized empty Git repository in E:/hexo/life/.git/ #木有事，我重新初始化git仓库\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ git remote add origin git@git.coding.net:Jamling/life.git #我再重新设置远程仓库路径\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ git pull origin master\nremote: Counting objects: 3, done.\nremote: Total 3 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (3/3), done.\nFrom git.coding.net:Jamling/life\n * branch            master     -> FETCH_HEAD\n * [new branch]      master     -> origin/master\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ git status\nOn branch master\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n        .npmignore\n        _config.yml\n        node_modules/\n        package.json\n        scaffolds/\n        source/\n        themes/\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ vim .gitignore\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ git status\nOn branch master\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n        .gitignore\n        .npmignore\n        _config.yml\n        package.json\n        scaffolds/\n        source/\n        themes/\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$\n```\n\n是否先初始化hexo博客，再checkout coding项目，是不是会简单一些呢？我没有试过，试过的请告诉我一下哈。\n\n建议将themes目录也加入.gitignore文件。\n\n\n## Hexo设置\n\n先安装hexo-deployer-git插件，然后配置\n\n```yaml _config.yml\ndeploy:\n  type: git\n  repo: \n    coding: git@git.coding.net:Jamling/life,coding-pages\n```\n\nrepo可以写多个，格式为git仓库地址+英文逗号+分支名称，以实现多线部署。\n\n## 编写博客\n这就不多说了，装插件，装主题，写内容，这些属于hexo的基本操作。不懂的百度。本地测试通过之后，可以使用`hexo g -d`部署到coding。\n\n## 提交hexo源文件\n博客测试完毕之后，就可以将博客源文件提交到master分支了，这样就算换了电脑，可以从远程仓库获取源代码，又可以愉快地写博客了。\n\n```bash\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ git add .\n// 此处省略文件列表\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ git commit -m \"add sources\"\n\n//此处省略文件列表\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ git push origin master\nCounting objects: 73, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (70/70), done.\nWriting objects: 100% (73/73), 95.92 KiB | 0 bytes/s, done.\nTotal 73 (delta 0), reused 0 (delta 0)\nTo git@git.coding.net:Jamling/life.git\n   e40018e..0efa99d  master -> master\n\nJamling@lijiaming-PC MINGW64 /e/hexo/life (master)\n$ \n\n```\n\n## 参考\nCoding Pages 帮助: https://coding.net/help/doc/pages/index.html\nHexo博客双线部署: /2016/08/29/Web/Hexo-deploy-lines/\n\n[Hexo]: https://hexo.io\n[Nova]: http://github.com/Jamling/hexo-theme-nova\n[Coding Pages 帮助]: https://coding.net/help/doc/pages/index.html\n[Hexo博客双线部署]: /2016/08/29/Web/Hexo-deploy-lines/","tags":["Hexo","git"],"categories":["Web"]},{"title":"使用Travis-CI构建Android应用","url":"/2016/09/06/Android/travis-ci-android/","content":"\n## 简介\n注册Travis-CI都N长时间了，但是一直没有使用它来构建。今天先使用它构建了两个小的node.js项目，还算顺序，然后使用它来构建[QuickAF]，没有想到竟然是一条如此艰辛的路！特地将构建过程记录如下。\n\n<!-- more -->\n\n## 配置\n参考官方文档[https://docs.travis-ci.com/user/languages/android/]的配置，稍做改动就提交构建了。还以为能像node.js那样顺风顺水，没有想到竟然是一次又一次的失败。\n\n## gradle版本\n\n```\nFAILURE: Build failed with an exception.\n\n* Where:\n\nBuild file '/home/travis/build/Jamling/QuickAF/library/build.gradle' line: 12\n\n* What went wrong:\n\nA problem occurred evaluating project ':af-library'.\n\n> Failed to apply plugin [id 'com.android.library']\n\n   > Minimum supported Gradle version is 2.14.1.  Current version is 2.2.1. If using the gradle wrapper, try editing the distributionUrl in /home/travis/build/Jamling/QuickAF/gradle/wrapper/gradle-wrapper.properties to gradle-2.14.1-all.zip\n\n* Try:\n\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nBUILD FAILED\n\nTotal time: 42.348 secs\n```\n根据以上日志，travis-ci上默认的gradle版本比较旧，所以需要自己下载gradle，并配置环境。\n\n```yaml\nbefore_install:\n  # Gradle\n  - wget http://services.gradle.org/distributions/gradle-2.14.1-bin.zip\n  - unzip -n gradle-2.14.1-bin.zip\n  - export GRADLE_HOME=$PWD/gradle-2.14.1\n  - export PATH=$GRADLE_HOME/bin:$PATH\n```\n\n***我有gradle/wrapper/gradle-wrapper.properties文件，而且里面的版本就是2.14.1，为毛不起作用啊！！！***\n***unzip 要使用-n参数，不然，目录存在，会一直卡死在unzip***\n\n如果不想每次下载gradle，可以在root project的build.gradle中手动设置gradle版本\n```gradle\ntask wrapper(type: Wrapper) {\n    gradleVersion = '3.3'\n}\n```\n然后执行的命令使用`./gradle app:assembleRelease`\n\n但接着又发现`./gradlew: Permission denied` gradlew因为权限问题而导致执行失败。\n\n解决办法如下：参考http://stackoverflow.com/questions/33820638/travis-yml-gradlew-permission-denied\n```bash\ngit update-index --chmod=+x gradlew\ngit commit -m \"permission access for travis\"\ngit ls-tree HEAD\n```\n如果gradlew权限为100755表示成功给它加上了执行权限\n\n## SDK设置\nsdk的配置一定要对应好。不然编译会失败\n\n## jdk设置\n好像build tool 24以上的版本需要使用jdk8\n\n## 总结\n遇到各种错误，编译了21次，终于通过了。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\nhttps://docs.travis-ci.com/user/languages/android/\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n[https://docs.travis-ci.com/user/languages/android/]: https://docs.travis-ci.com/user/languages/android/\n\n","tags":["Android","CI"],"categories":["Android"]},{"title":"使用git打包修改的文件","url":"/2016/09/01/other/git-archive-diff/","content":"\n使用git archive可以将传入的文件列表打包为一个zip档案。对于一些大系统，如果只是修复bug，可以做到热替换的话（比如php，js等解释型语言），可以使用此命令将修改的文件添加到zip档案，以提交局方升级。\n\n<!-- more -->\n将整个仓库打包\n\n```\ngit archive -o repo.zip HEAD\n```\n\n查看自前一次提交修改的文件\n```\ngit diff --name-only HEAD^\n```\n\n如果想查看前n次提交的修改，可以将HEAD^改为HEAD~n即可。\n\n综合运用\n\n```bash\ngit archive -o update.zip HEAD $(git diff --name-only HEAD^)\n```\n\n注：git diff显示的文件需提交到仓库才可以。比如新增加了一个文件，要先commit到仓库，不然会出现错误（git diff 加--cached是否可以解决此错误呢？）。\n\n\n","tags":["git"],"categories":["奇淫巧技"]},{"title":"Hexo页面加载性能优化","url":"/2016/08/30/Web/Hexo-blog-performance/","content":"\n## 引言\n\n影响网页打开速度的原因有许多种，本文主要对部署在github上的hexo博客页面的加载速度做一个分析。然后给出几点相关的优化建议。\n\n<!-- more -->\n\n## 加载速度对比\n先看下面几个站点的加载速度\n- www.ieclipse.cn\n这是我自己的站点，使用了双线部署，国内节点为coding.net。\n{% asset_img ieclipse.cn.png %}\n请求非常多，52个请求，页面加载用时427ms，加上其它的异步请求，总用时1.54s。相当于页面秒开。加载相对较慢的有nova.css和那个自动隐藏导航栏的js脚本。其它的像jq和bootstrap都使用了cdn，加载还是相当快的。\n\n- csdoker.com\n{% asset_img csdoker.com.png %}\n请求虽然少，只有14个，但是加载速度非常慢，主要是博客部署在github上，国内访问较慢，页面呈现用时5s，全部加载总用时11.74s。相对加载速度较慢的主要是背景，头像和字体文件。总体来说加载慢。\n\n- fatdoge.cn\n{% asset_img fatdoge.cn.png %}\n请求也少，只有12个，但是加载速度却是相当地慢，光域名解析建立连接就将近5s，剩下的大家看图。到我截完图，它还在加载其它的一些资源。\n\n- login926.github.io\n{% asset_img login926.github.io.png %}\n请求较多，影响页面呈现的只有前5个请求，在1.4s内加载完成。因为脚本和css少。呈现非常快。页面总加载耗时3.95s。如果考虑数据量的话，此网站的加载速度是最快的。\n\n\n## 优化建议\n- 使用多线部署，因为国内访问github比较慢，建议博客可以放在国内的站点。具体教程可以参考本站另一文章：[Hexo博客双线部署]\n- 使用cdn，对于字体，js，css等静态资源，如果有cdn加速，建议使用cdn。比如我的博客，jquery, bootstrap使用的都是cdn。\n- 尽量使用简洁的主题，比如Next，像上面的csdoker.com和fatdoge.cn使用的主题，加载就慢多了。\n- js脚本尽量后置，如果不影响功能，建议放在&lt;/body&gt;之前，并且能异步加载的，尽量异步加载。比如本站的nova主题，许多脚本都是后置并且异步的。\n\n[Hexo博客双线部署]: /2016/08/29/Web/Hexo-deploy-lines/\n[hexo]: https://hexo.io\n[hexo-generator-index2]: http://github.com/Jamling/hexo-generator-index2\n[hexo-generator-github]: http://github.com/Jamling/hexo-generator-github\n[hexo-generator-i18n]: http://github.com/Jamling/hexo-generator-i18n\n","tags":["Hexo"],"categories":["Web"]},{"title":"Git删除受管控的文件","url":"/2016/08/30/other/git-rm/","content":"\n在提交代码时，有许多的初学者甚至是老程序员也会犯一个错误，那就是把一些不应该提交到源代码仓库的文件也提交到仓库，比如编译后的输出bin/目录，本地工程的一些设置文件如.idea，.settings。如果一旦提交到远程仓库，那么还将影响到团队中的其他成员。每次更新的时候，都会将别人的设置更新下来，可能会导致编译不通过等诸多问题。一旦这些文件受git管控，那么想删掉它就麻烦了。如果本地删除，再commit和push，那么其他成员更新代码的时候，他本地的也会被删除。对于编译输出的文件还好，再编译一次就可以。如果是环境设置类的文件，那么对方就惨了。会导致许多莫名的错误。\n\n<!-- more -->\n\n所以平时提交代码的时候，一定要细心，可以使用`git status`查看状态。不要一味的`git add .`添加所有的修改。`git add`之后，也可以再次`git status`确认哪些要commit。\n\n但是如果确实不小心commit并push了不必要的文件，那也没关系。git提供了`git rm`指令来删除文件。删除方式有两种\n1. 彻底删除文件，从git仓库中和文件系统中都删除。这是默认的方式。对于已经提交远程仓库的eclipse工程的 .bin目录，Android Studio的build目录，可以这么操作。\n```bash\ngit rm -r bin/\n```\n2. 只从git仓库中删除，文件系统中不删除。推荐此种方式。\n```bash\ngit rm -r --cached bin/\n```\n\n删除之后，记得在.gitignore文件中添加忽略。\n\n以下是一个示例，svn转git时，竟然将.svn也提交到git仓库。导致git仓库变得非常大。所以需要递归删除掉.svn目录。\n\n```bash\nfind -name '.svn' |xargs git rm -rf [--cache]\n```\n\n","tags":["git"],"categories":["奇淫巧技"]},{"title":"Hexo博客双线部署","url":"/2016/08/29/Web/Hexo-deploy-lines/","content":"\n## 引言\n\n鉴于github.io在国内访问速度较慢，而且github.io不会被百度收录，所以在将[Hexo]博客站点部署到国内的站点是一个不错的选择。之前，国内有一家与github类似的gitcafe公司，不过在今年的时候，gitcafe已经停止服务，用户数据全部迁移到[coding.net]了。而且[coding.net]也提供与github pages一样的pages服务，所以我选择[coding.net]作为国内的博客部署平台。\n\n## 开启Coding Pages服务\n\n在开启Coding Pages服务之前，你必须得有一个[coding.net]账户，然后创建一个（私有并且项目名称与您的用户名称一致的）项目。并开启（用户）Pages服务。\n\n{% asset_img coding.net-console.png %}\n\n如果未开启服务，则界面上有一个开启服务的按钮，点击开启服务。服务开启之后，可以绑定域名。Coding Pages默认使用https协议。如果不绑定域名，[coding.net]提供了一个默认的<var>yourname</var>.coding.me域名。\n\n官方有详细文档，请点击[Coding Pages 帮助]查看\n\n至于github pages服务，则不描述了，网上一搜一大把。\n\n## DNS解析\n\n双线部署的核心，其实是域名DNS的解析。我的域名是从万网购买的。它提供多路线解析。不知道其它的域名提供商是否提供此功能。\n\n首先上我的域名解析规则\n\n{% asset_img net.cn-console.png %}\n\nwww的CNAME有两条解析路线，默认（国内）路线指向<var>username</var>.coding.me；海外指向<var>username</var>.github.io。也即，在国内访问，其实是访问coding.net上的博客。而海外，则是访问github.io上的博客。那么如何验证访问的是海外还是国内路线呢？先不急，后面有介绍。\n\nPS：\n- 我的顶级域名解析到一个IP地址，其实是ping jamling.coding.me的IP地址，jamling.coding.me的IP地址是变动的。所以有时使用http://ieclipse.cn 访问的话，可能会出现无法连接到服务器而导致无法访问。解决的办法是将A记录指向<var>username</var>.coding.me。不过，DNS默认提供了@A记录解析，需要先删除掉才能添加成功（我的另一个域名把系统提供默认@记录解析删除掉了以实现http://domain.com 与http://www.domain.com 相同的访问效果）。\n- 我的博客在github和coding.net，都是属于用户Pages，如果是项目Pages，请看我的dl.ieclipse.cn解析规则，CNAME国内解析到pages.coding.net。CNAME海外解析到<var>username</var>.github.io。\n\n## 验证测试\n验证测试的办法就是github.io上的内容与[coding.me]上的内容不一致，然后通过使用海外代理或翻墙的方式来访问相同的域名，看是否解析正常。浏览器不使用代理，VPN，访问的域名，就是coding.me。使用翻墙软件访问的就是github.io。然后看比较内容，看是否正常解析。还有一种方式就是注意看浏览器左下角的状态。比如输入域名后回车，状态栏有正在连接github.io，则说明访问的是海外路线。\n\n## Hexo设置\n\ngithub.io与coding.me都可以通过git来部署。\n\n``` yaml\ndeploy:\n  type: git\n  repo: \n    coding: git@git.coding.net:Jamling/Jamling,coding-pages\n    github: git@github.com:Jamling/jamling.github.com.git,master\n```\n\nrepo可以写多个，格式为git仓库地址+英文逗号+分支名称。在国内，有时部署到github.io会失败，此时，[coding.me]上的博客是最新的，而github.io上的博客还是原来的，此时，正是验证你双线部署是否成功的绝佳时刻。\n\n## 致谢\n- **感谢[github.com]!**\n- **感谢[coding.net]!** \n\n[github.com]和[coding.net]为大家免费提供的pages服务，希望大家不要滥用，更不要做违反相关法律法规的事，不然，哪一天迫于政府压力终止服务或被墙的时候，到哪里去找这么优质的免费空间呢？\n\n## 参考\nCoding Pages 帮助: https://coding.net/help/doc/pages/index.html\ngithub pages自定义域名: https://help.github.com/articles/setting-up-a-custom-subdomain/\n[github.com]: https://github.com\n[coding.net]: https://coding.net\n[Hexo]: https://hexo.io\n[Nova]: http://github.com/Jamling/hexo-theme-nova\n[Coding Pages 帮助]: https://coding.net/help/doc/pages/index.html\n","tags":["Hexo"],"categories":["Web"]},{"title":"PHP + Ajax示例","url":"/2016/08/26/PHP/php-ajax/","content":"\nPHP是非常流行的Web服务端语言，Ajax是Web前端异步加载的技术。刚刚学习PHP，发现PHP真是强大，对Ajax或RESTFul的支持非常好，代码写起来也非常简单。今天分享一个个人学习的测试示例，前端使用Ajax向服务端发送请求，服务端使用PHP处理请求，并返回响应信息。接口规范遵循RESTFul。\n\n## 前端\n为简化Ajax操作，引入JQuery来发送Ajax请求。请求包含查询字符串，HTTP头及表单数据。\n\n```html test.html\n<!doctype html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"Generator\" content=\"EditPlus®\">\n  <title>Document</title>\n<script src=\"//cdn.bootcss.com/jquery/2.2.0/jquery.min.js\"></script>\n<link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap-theme.min.css\">\n<script src=\"//cdn.bootcss.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n\n<script>\nfunction my_post() {\n  var div = $('#result');\n  $.ajax({\n          url : 'test.php?urlvar1=var1&urlvar2=var2',\n          dataType : \"json\",\n          type : 'post',\n          headers: {\n            hvar : 'hvar'\n          },\n          data : {\n            foo : 'bar',\n            postvar: [{var1: 'var1', var2: 'var2'}, {var1: 'var10', var2: 'var20'}]\n          },\n          success : function(data) {\n            if (data.code==0) {\n              div.html(JSON.stringify(data));\n            }\n          },\n          error: function (xhr, msg, e) {console.log(e);\n            div.html('加载失败');\n          }\n        });\n}\n\n</script>\n </head>\n <body>\n  <div class=\"container\">\n    <br>\n    <a class=\"btn btn-primary\" role=\"button\" href=\"javascript:my_post();\">发射</a> <br>\n    <textarea id=\"result\" class=\"col-xs-12\"></textarea>\n  </div>\n </body>\n</html>\n\n```\n\n请求数据如下图所示：\n\n{% asset_img request.png %}\n\n其实请求还包含一个hvar的HTTP请求头，HTTP头通常用于设置授权，加密等接口参数。业务参数一般放在url或表单数据中。如果请求方式为get，那么表单数据会作为查询字符串追加到url中。\n\n\n## 后端\n\n提交请求后，由后端的test.php来处理请求。只简单地将收到的请求Headers，GET参数及POST参数封装成json并返回。\n\n```php test.php\n<?php\n\n$data = $_POST['postvar'];\n$headers = getallheaders();\nforeach ($headers as $key => $value) {\n  //echo $key . \"=\" . $value;\n}\n\nheader('content-type:application/json;charset=utf8');\n\n$ret = array(\n  'code' => 0,\n  'headers' => $headers,\n  'gets' => $_GET,\n  'posts' => $_POST\n);\nexit(json_encode($ret));\n?>\n```\n\n接口传过来的json对象，直接会被PHP解析为关联数据。比如<var>$data</var>就是一个array。\n\n响应结果如下图所示：\n\n{% asset_img response.png %}\n\n其中headers包含一个hvar的参数。PHP转json由内置函数`json_encode()`来完成。\n\n## 运行结果\n\n{% asset_img result.png %}\n\n## 总结\n\nPHP真是强大，关联数据与json在结构上非常相似，处理json也非常的方便。如果是Java，后端代码写起来就复杂许多了，json处理还得引入第三方库。\n\n[hexo api]: https://hexo.io/zh-cn/api/\n[hexo]: https://hexo.io\n[hexo-generator-index2]: http://github.com/Jamling/hexo-generator-index2\n[hexo-generator-github]: http://github.com/Jamling/hexo-generator-github\n[hexo-generator-i18n]: http://github.com/Jamling/hexo-generator-i18n\n","tags":["PHP","Ajax"],"categories":["Web"]},{"title":"PHP + MySQL批量插入测试","url":"/2016/08/25/PHP/php-mysql-mb-insert/","content":"\n使用PHP + MySQL来测试插入百万条数据，看看到底要多久。\n\n<!-- more -->\n\n## 测试代码\n使用MySQL批处理即 insert table (field1, filed2...) values (value1, value2...), ... (value n1, value n2) 来插入数据。\n\n```php\n<?php\n\ninclude('init.php');\n\nif(empty($db)) $db=DBConnect();\n\nset_time_limit(0); // 执行时间超过30秒，wamp会中断执行。此方法不起作用。\n\n// 先清空表\n$db->execute(\"truncate table oc_project_content2\");\n// sql 插入语句\n$sql = \"insert into oc_project_content2 (gid, gname, fid, fname) values \";\n// 分m次执行，一条n条\n$m = 1000; $n = 1000;\n$t1 = time(); // 开始计时\nfor($i=0; $i<$m; $i++){\n  $arr = array();\n  for($j=0; $j<$n; $j++) {\n    $gid = ($i * $m + $j);\n    $fid = 100;//rand(0, $m*$n)\n    $arr[$j] = '('. $gid . ',\"' . randStr(6) . '\",' . $fid . ',\"' . randStr(12) . '\")';\n  }//var_dump($arr);\n  $tmp = join(',', $arr);\n  $batch = $sql . $tmp;\n  // var_dump($batch);\n  $db->execute($batch);\n}\n\n$t2 = time();\necho $t2 - $t1 . ' s escaped ' . PHP_EOL; // 查看时间，单位秒\n\n$count = $db->FirstRow(\"SELECT count(*) FROM `oc_project_content2`\");\nforeach ($count as $key => $value) {\n  echo $key . '=>' . $value;\n};\n\n// 生成随机字符串\nfunction randStr($m = 6) {\n  $new_str = '';\n  $str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwsyz0123456789';\n  $max=strlen($str)-1;\n  for ($i = 1; $i <= $m; ++$i) {\n    $new_str .=$str[mt_rand(0, $max)];\n  }\n  return $new_str;\n}\n\n?>\n\n```\n\n## 测试结果\n\n以下是4次测试结果， 前3次是100x1000条数据，第4次是1000x1000条数据。\n```shell\nC:\\wamp\\www\\test>..\\..\\bin\\php\\php5.3.10\\php.exe api.php\n11 s escaped\ncount(*)=>1000000\nC:\\wamp\\www\\test>..\\..\\bin\\php\\php5.3.10\\php.exe api.php\n12 s escaped\ncount( * )=>100000\nC:\\wamp\\www\\test>..\\..\\bin\\php\\php5.3.10\\php.exe api.php\n123 s escaped\ncount(*)=>1000000\nC:\\wamp\\www\\test>\n```\n\n** 1000x1000条数据，for循环组装sql的时间大约需要24s **\n\n## 总结\nMySQL果然强大哈，在我的工作机中，大约1秒能执行10000条插入操作。我的工作机配置不高，2.4G主频，而且开了一堆的软件包括相当吃内存的Android Studio, Eclipse等。\n\n## 遇到的问题\n\n- Maximum execution time of 30 seconds exceeded\n执行时间超过30秒，php会报错并中断执行。需要改php.ini设置并重启生效或者在命令行下执行。\n\n\n[hexo api]: https://hexo.io/zh-cn/api/\n[hexo]: https://hexo.io\n[hexo-generator-index2]: http://github.com/Jamling/hexo-generator-index2\n[hexo-generator-github]: http://github.com/Jamling/hexo-generator-github\n[hexo-generator-i18n]: http://github.com/Jamling/hexo-generator-i18n\n","tags":["PHP","MySQL"],"categories":["Web"]},{"title":"Scratch源代码编译小记","url":"/2016/08/18/other/scratch-compile/","content":"\n这几天搞Scratch源代码的编译，遇到不少坑，特此记录一下。\n\n<!-- more -->\n\n## 准备工具\n官方提供了两种编译方式：Ant和Gradle，我是使用Gradle编译的，需要准备的工具如下：\n- Java JDK，用于执行gradle\n- Gradle，用于编译\n- Git，用于下载源代码，同时gradle脚本中也会用到git命令（可注释掉不用）\n\n## 下载源代码\n请访问https://github.com/LLK/scratch-flash 下载Scratch源代码，下载到本地后之后，在我大天朝，先不要急着编译，首先得修改一下编译脚本，不然编译时有些依赖包无法下载。\n\n- 下载apache-flex-sdk\n参考`scratch.gradle`中ivy仓库配置\n```gradle\nrepositories {\n    ivy {\n        name 'Apache Flex'\n        // artifactPattern 'http://archive.apache.org/dist/flex/[revision]/binaries/[module]-[revision]-bin.[ext]'\n    artifactPattern 'http://127.0.0.1/flex/[module]-[revision]-bin.[ext]'\n    }\n    ivy {\n        name 'Player Globals'\n        artifactPattern 'http://fpdownload.macromedia.com/get/flashplayer/installers/archive/[module]/[module][revision].[ext]'\n    }\n}\n```\n先下载apache-flex-sdk，版本必须高于4.10.0，这个sdk比较大，有70多M，建议使用其它工具下载好，放到本地。我下载的是4.15.0，具体的下载路径地址为：http://archive.apache.org/dist/flex/4.15.0/binaries/apache-flex-sdk-4.15.0-bin.zip\n\n- 下载swfobject\n下载好swfobject\\_2\\_2.zip。同样放入本地服务器上\n\n- 下载OSMF\n下载好OSMF\\_1.0.zip，同样放入本地服务器上\n\n修改apache-flex-sdk中的`frameworks/downloads.xml`内容，将swfobject和osmf的下载地址改为本地地址。\n\n```xml\n    <target name=\"download-osmf-zip\" unless=\"osmf.zip.exists\">\n        <mkdir dir=\"${download.dir}\"/>\n        <get src=\"http://127.0.0.1/flex/OSMF_1.0.zip\" \n            dest=\"${download.dir}/OSMF_1.0.zip\" \n            verbose=\"false\"/>\n    </target>\n    \n    <!-- swfobject.js (Version 2.2) -->\n    <!-- Because this requires a network connection it downloads SWFObject only if it doesn't already exist. -->\n    <target name=\"swfobject-check\" description=\"Checks if SWFObject has been downloaded.\">\n        <available file=\"${basedir}/../templates/swfobject/swfobject.js\" property=\"swfobject.js.present\"/>\n    </target>\n\n    <target name=\"swfobject-download\" depends=\"swfobject-check\" unless=\"swfobject.js.present\" \n        description=\"Copies SWFObject from code.google.com\">\n        \n        <mkdir dir=\"${download.dir}\"/>\n        <get src=\"http://127.0.0.1/flex/swfobject_2_2.zip\" \n            dest=\"${download.dir}/swfobject_2_2.zip\" \n            verbose=\"false\"/>\n        ...\n    </target>\n```\n\n如此这般，编译时，依赖包应该能够全部下载好，如果有不能下载的依赖包，可以查看gradle日志输出，参考上面的方法修改gradle编译脚本或apache-flex-sdk的依赖脚本以保证依赖包能够正确下载。\n\n## 编译\n参考官方文档，打开git终端，键入编译命令\n```bash\n$ ./gradlew build -Ptarget=11.6\nDefining custom 'build' task when using the standard Gradle lifecycle plugins has been deprecated and is scheduled to be removed in Gradle 3.0\nTarget is: 11.6\nCommit ID for scratch-flash is: latest\n:copyresources\n:compileFlex\nWARNING: The -library-path option is being used internally by GradleFx. Alternative: specify the library as a 'merged' Gradle dependendency\n:copytestresources\n:test\nSkipping tests since no tests exist\n:build\n\nBUILD SUCCESSFUL\n\nTotal time: 15.691 secs\n\n```\n\n以上是我最终编译通过的输出。编译后输出的Scratch2.swf在`build/11.6/`目录下。\n\n## 源代码修改\n\n具体的源代码修改，请参考我github上fork的scratch-flash项目。地址为https://github.com/ieclipsecn/scratch-flash/\n代码提交在jamling分支下。大致讲下修改的地方\n\n- ifOffline 设置为true，默认是false，然后编译的swf不能好好工作。用离线即可。\n- 默认语言为zh_CN，但是不起作用，猜测应该要写zh-cn值。\n- 跨域crossdomain.xml路径修改为http://cdn.assets.scratch.mit.edu ，这个地址允许所有的域访问\n- 加载媒体库和缩略图片库地址，都改为本地地址，且为相对路径。不然会出现跨域问题，导致编译之后的swf无法加载背景库或角色库。\n\n修改完毕之后，重新编译，如果有错误，根据日志提示，修正错误后再次编译就好了。编译成功之后，会输出Scratch.swf。我修改的代码，输出为Scratch2.swf。\n\n \n## 测试\n可以直接从官网将官网的网页另存为->保存全部，得到一个基本的html再编辑修改。修改好了。再通过本地服务器测试。此时，你会发现还有许多问题。主要是一大堆的404。可以自行写个爬虫脚本，将官网的一些资源抓到本地。其它的问题，自己再根据具体的错误修复即可。\n \n最后放上最终的演示地址：http://ot.ieclipse.cn/flex/Scratch.html\n\n[branch]: https://github.com/ieclipsecn/scratch-flash/commit/0e1a43680b4ded359e8ec0fd1b67ffba739994ed\n","tags":["Gradle"],"categories":["其它"]},{"title":"QuickAF解析REST API综合示例","url":"/2016/08/12/Android/quickaf-controller-sample/","content":"\n{% asset_img weather.png %}\n\n在[QuickAF]中使用基于Volley的网络数据连接框架。能够方便地执行REST API网络请求，并与界面进行交互。在本文中通过一个天气查询的综合示例来讲解[QuickAF]中如何进行网络请求。\n\n<!-- more -->\n\n## 框架设置\n在使用网络数据框架之前，须先配置，一般在Application.onCreate()中配置，当然，也可以使用前配置，比如Activity.onCreate()\n\n```java\n// typically, you just config volley in Application.onCreate\nVolleyConfig config = new VolleyConfig.Builder()\n    .setBaseResponseClass(WeatherBaseResponse.class)\n    .build();\nVolleyManager.init(getApplicationContext(), config);\n```\n如果有喜欢使用OkHttp的同学，还可配置网络连接使用OkHttp。\n\n### 接口响应对象\n`WeatherBaseResponse.class`为接口返回对象class，一般一套接口标准中只有唯一的一个。接口返回的对象一般包含状态码(status)，提示信息(message)及业务对象（data）。对于业务模块，只需要关心业务对象(data)即可，框架中还可以定义拦截器，如果接口请求成功，业务操作不成功，则不会进入业务逻辑层。\n\n## 接口API\n在这里，使用的是[百度api store中的天气api](http://apistore.baidu.com/apiworks/servicedetail/112.html)，其中了其中的两个API\n1. 查询城市可用列表，通过输入的城市名称，查询该城市下的城市（或区）列表。\n2. 查询指定城市（或区）的天气详情\n\n### 模型\n根据接口API，先把模型定义出来\n\n- 查询城市列表请求模型`BaseRequest`\n非常简单，只有一个cityname的请求参数\n```java\npublic class BaseRequest implements Serializable {\n    public String cityname;\n}\n```\n- 查询城市列表响应 `List<CityInfo>`\n```java\npublic class CityInfo implements Serializable {\n    public String province_cn;\n    public String district_cn;\n    public String name_cn;\n    public String name_en;\n    public String area_id;\n}\n```\n- 查询城市天气详情请求 `CityInfo`，与查询城市列表响应返回的列表项一样\n- 查询城市天气详情响应 `WeatherInfo`\n```java\npublic class WeatherInfo implements Serializable {\n    public String city;\n    public String pinyin;\n    public String citycode;\n    public String date;\n    public String time;\n    public String postCode;\n    public double longitude;\n    public double latitude;\n    public String altitude;\n    public String weather;\n    public String temp;\n    public String l_tmp;\n    public String h_tmp;\n    public String WD;\n    public String WS;\n    public String sunrise;\n    public String sunset;\n}\n```\n\n## Controller\n[QuickAF]中通过Controller来执行API请求，一般来说，一个界面对应一个Controller，在Controller中提供了页面操作需要调用的接口API。在Controller内部，每个网络请求都是一个Task。所有的Controller须继承自`cn.ieclipse.af.volley.Controller`。通常，一个App只有一套接口API，所以，可以定义一个`AppController`继承自`cn.ieclipse.af.volley.Controller`。然后各业务模块的Controller继承`AppController`并向外提供一个回调Listener。\n\n### Task\nTask是Controller中的内部类，用于执行网络请求。可以`AppController`中定义一个`AppTask`并继承自父Controller中的`RequestObjectTask`，来执行一些常用的操作，比如API调用错误处理，给接口API统一添加appKey等http头等。这样子各个业务模块只需专注模块业务即可。\nTask的调用有两种方式\n- `load(Input input, Class<Output> clazz, boolean needCache)`，接口返回为对象，如果模型不匹配，编译时将会报错。\n- `load2List(Input input, Class<?> itemClass, boolean needCache)`，接口返回为数组，此种方式，需要指定List集合中的模型Class，如果错了，将导致json无法解析为正确的模型，在运行时会报错\n\n### Listener\n回调Listener必须在Controller中定义，通常回调Listener需提供两个抽象方法\n\n- onXXXSuccess(response model)\n当接口API调用成功时的回调，接口API的响应在参数中\n- onXXXFailure(error object)\n当接口API调用失败时的回调，参数为错误对象，比如网络错误等。\n\n***注：回调接口中的方法可以在UI线程中调用***\n\n### 缓存\n在Task中可以设置是否允许缓存，相应地，在接口回调中，会标识此次接口调用是来自于缓存还是实时的接口响应。在[QuickAF]中，有自己的API缓存，与Volley不太一样，主要是在国内我们的大后端，一般不会在HTTP中控制缓存（反正我工作快10年了，没有见过一个后端这么做）。\n\n### 实例\n下面来看看`WeatherController`。\n```java\npublic class WeatherController extends AppController<WeatherController.WeatherListener> {\n\n    public WeatherController(WeatherListener l) {\n        super(l);\n    }\n\n    public void loadCityList(BaseRequest req, boolean needCache) {\n        CityListTask task = new CityListTask();\n        task.load2List(req, CityInfo.class, needCache);\n    }\n\n    public void loadWeather(BaseRequest req) {\n        CityWeatherTask task = new CityWeatherTask();\n        task.load(req, WeatherInfo.class, false);\n    }\n\n    private class CityListTask extends AppBaseTask<BaseRequest, List<CityInfo>> {\n\n        @Override\n        public IUrl getUrl() {\n            return new URLConst.AbsoluteUrl(\"http://apis.baidu.com/apistore/weatherservice/citylist\").get();\n        }\n\n        @Override\n        public void onSuccess(List<CityInfo> out, boolean fromCache) {\n            mListener.onLoadCityListSuccess(out, fromCache);\n        }\n\n        @Override\n        public void onError(RestError error) {\n            mListener.onLoadCityListFailure(error);\n        }\n\n        @Override\n        public boolean onInterceptor(IBaseResponse response) throws Exception {\n            if (response instanceof WeatherBaseResponse) {\n                WeatherBaseResponse resp = (WeatherBaseResponse) response;\n                if (resp.errNum != 0) {\n                    throw new LogicError(null, String.valueOf(resp.errNum), resp.errMsg);\n                }\n            }\n            return false;\n        }\n\n        @Override\n        protected GsonRequest buildRequest(IUrl url, String body) {\n            GsonRequest request = super.buildRequest(url, body);\n            request.addHeader(\"apikey\", \"e8c043231152d9cbcf30a648382ca4c5\");\n            return  request;\n        }\n    }\n\n    private class CityWeatherTask extends AppBaseTask<BaseRequest, WeatherInfo> {\n\n        @Override\n        public IUrl getUrl() {\n            return new URLConst.AbsoluteUrl(\"http://apis.baidu.com/apistore/weatherservice/cityname\").get();\n        }\n\n        @Override\n        public void onSuccess(WeatherInfo out, boolean fromCache) {\n            mListener.onLoadWeatherSuccess(out, fromCache);\n        }\n\n        @Override\n        public void onError(RestError error) {\n            mListener.onLoadWeatherError(error);\n        }\n\n        @Override\n        public boolean onInterceptor(IBaseResponse response) throws Exception {\n            if (response instanceof WeatherBaseResponse) {\n                WeatherBaseResponse resp = (WeatherBaseResponse) response;\n                if (resp.errNum != 0) {\n                    throw new LogicError(null, String.valueOf(resp.errNum), resp.errMsg);\n                }\n            }\n            return false;\n        }\n\n        @Override\n        protected GsonRequest buildRequest(IUrl url, String body) {\n            GsonRequest request = super.buildRequest(url, body);\n            request.addHeader(\"apikey\", \"e8c043231152d9cbcf30a648382ca4c5\");\n            return  request;\n        }\n    }\n\n    public interface WeatherListener {\n        void onLoadCityListSuccess(List<CityInfo> out, boolean fromCache);\n\n        void onLoadCityListFailure(RestError error);\n\n        void onLoadWeatherSuccess(WeatherInfo out, boolean fromCache);\n\n        void onLoadWeatherError(RestError error);\n    }\n```\n\n## 界面\n终于到界面了，先看看`WeatherActivity`的代码\n```java\npublic class WeatherActivity extends BaseActivity implements WeatherController.WeatherListener {\n\n    TextView tv;\n    EditText et;\n    Spinner spn;\n    CityAdapter adapter;\n    WeatherController controller;\n\n    @Override\n    protected int getContentLayout() {\n        return R.layout.sample_activity_volley_weather;\n    }\n\n    @Override\n    protected void initHeaderView() {\n        super.initHeaderView();\n        setTitle(\"Weather Sample\");\n    }\n\n    @Override\n    protected void initContentView(View view) {\n        super.initContentView(view);\n        // typically, you just config volley in Application.onCreate\n        VolleyConfig config = new VolleyConfig.Builder().setBaseResponseClass(WeatherBaseResponse.class).build();\n        VolleyManager.init(getApplicationContext(), config);\n        spn = (Spinner) findViewById(R.id.spn1);\n        adapter = new CityAdapter();\n        spn.setAdapter(adapter);\n        et = (EditText) findViewById(R.id.et_text);\n        tv = (TextView) findViewById(R.id.tv);\n    }\n\n    @Override\n    protected void initData() {\n        super.initData();\n        controller = new WeatherController(this);\n        String name = et.getText().toString();\n        if (TextUtils.isEmpty(name)) {\n            name = et.getHint().toString();\n        }\n        loadCityList(name, true);\n    }\n```\n\n`WeatherActivity`实现了`WeatherController.WeatherListener`回调接口，在初始化时，调用了`loadCityList`来获取城市列表。\n\n下面再看4个跟接口API相关的方法。\n\n```java\n    /**\n     * 获取城市列表\n     * @param name\n     * @param needCache\n     */\n    public void loadCityList(String name, boolean needCache) {\n        BaseRequest req = new BaseRequest();\n        req.cityname = name;\n        controller.loadCityList(req, needCache);\n    }\n\n    /**\n     * 获取城市天气详情\n     */\n    public void loadWeather() {\n        BaseRequest req = new BaseRequest();\n        CityInfo city = (CityInfo)spn.getSelectedItem();\n        if (city != null) {\n            req.cityname = city.name_cn;\n            controller.loadWeather(req);\n        }\n    }\n\n    @Override\n    public void onLoadCityListSuccess(List<CityInfo> out, boolean fromCache) {\n        adapter.setDataList(out);\n        adapter.notifyDataSetChanged();\n    }\n\n    @Override\n    public void onLoadCityListFailure(RestError error) {\n        VolleyUtils.showError(tv, error);\n    }\n\n    @Override\n    public void onLoadWeatherSuccess(WeatherInfo out, boolean fromCache) {\n        String msg = String.format(\"city:%s\\ntemp:%sC (%s - %s)\\nwind:%s(%s)\", out.city, out.temp, out.l_tmp, out.h_tmp,\n            out.WD, out.WS);\n        tv.setText(msg);\n    }\n\n    @Override\n    public void onLoadWeatherError(RestError error) {\n        VolleyUtils.showError(tv, error);\n    }\n```\n\n在回调onXXXSuccess方法中，将模型设置到界面控件中以显示在UI中。\n\n## 总结\n使用[QuickAF]请求REST API非常的方便，开发相当快，重点步骤如下\n\n1. 设置，设置好接口返回大对象IBaseResponse, AppController，这个一般在工程初始化中做。\n2. 根据接口API生成模型，可以通过GsonFormat之类的工具来生成\n3. 编写Controller，根据模块业务编写对应的Controller，一个API对应一个Task。\n4. 界面中实现Controller，在适当的地方比如点击按钮调用Controller中的方法，在回调方法中处理业务逻辑。\n\n本示例中的所有代码，可以访问：https://github.com/Jamling/QuickAF/tree/master/sample/src/main/java/cn/ieclipse/af/demo/sample/volley/weather 查看。\n\n## 关于\n\n[QuickAF]是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"QuickAF Preference介绍","url":"/2016/08/12/Android/quickaf-preference/","content":"\n## 简介\n\n首先上个图\n\n{% asset_img preference.png %}\n\nPreference控件的目的在于替换Android自带的Preference，在[QuickAF]中，Preference被设计为控件，可以在layout/Activity中随意使用，不必像自带的Preference，需要配合res/xml/xxx_preference、PreferenceFragment/PreferenceActivity使用。\n\n<!-- more -->\n\n## 配置\n先来看看控件属性\n``` xml\n    <declare-styleable name=\"Preference\">\n        <attr name=\"android:key\"/>\n        <attr name=\"android:title\"/>\n        <attr name=\"android:summary\"/>\n        <attr name=\"android:persistent\"/>\n        <attr name=\"android:layout\"/>\n        <attr name=\"android:icon\"/>\n        <attr name=\"android:drawableRight\"/>\n        <attr name=\"android:gravity\"/>\n        <attr name=\"android:background\"/>\n    </declare-styleable>\n\n```\n\n各属性含义如下：\n\n- `android:key`：持久化时，写入shared preference中的key名称\n- `android:title`：主标题，一般是左侧的文字\n- `android:summary`：副标题，一般是右则的文字或主标题下方的文字\n- `android:persistent`：是否持久化，如果为true，则会将checkbox的值写入shared preference\n*目前仅支持checkbox写入*\n- `android:layout`：允许添加一个自定义的layout到当前控件中。\n- `android:icon`：设置主标题左侧的图标\n- `android:drawableRight`：设置副标题右侧的图标，比如一个〉右箭头\n- `android:gravity`：设置主标题的对齐方式\n- `android:background`：设置背景，比如list_selector。\n\n## 使用示例\n\n### 布局\n\n```xml sample_activity_preference.xml https://github.com/Jamling/QuickAF/blob/master/sample/src/main/res/layout/sample_activity_preference.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:divider=\"@drawable/divider_linear\"\n    android:orientation=\"vertical\"\n    android:showDividers=\"middle|end\" >\n\n    <cn.ieclipse.af.view.Preference\n        android:id=\"@+id/s01\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout=\"@layout/preference_item\"\n        android:summary=\"\"\n        android:title=\"普通的\"/>\n\n    <cn.ieclipse.af.view.Preference\n        android:id=\"@+id/s02\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:icon=\"@android:drawable/ic_menu_help\"\n        android:layout=\"@layout/preference_item\"\n        android:summary=\"\"\n        android:title=\"带图标的\" />\n\n    <cn.ieclipse.af.view.Preference\n        android:id=\"@+id/s03\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:icon=\"@android:drawable/ic_menu_edit\"\n        android:layout=\"@layout/preference_item\"\n        android:summary=\"有描述的\"\n        android:title=\"带图标的\" />\n\n    <cn.ieclipse.af.view.Preference\n        android:id=\"@+id/s04\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:drawableRight=\"@drawable/preference_arrow\"\n        android:icon=\"@android:drawable/ic_menu_share\"\n        android:layout=\"@layout/preference_item\"\n        android:summary=\"有描述的\"\n        android:title=\"带图标, 带箭头的\" />\n\n    <cn.ieclipse.af.view.Preference\n        android:id=\"@+id/s05\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:drawableRight=\"@drawable/preference_arrow\"\n        android:icon=\"@android:drawable/ic_menu_view\"\n        android:layout=\"@layout/preference_chk_item\"\n        android:persistent=\"true\"\n        android:summary=\"有描述的\"\n        android:title=\"带图标，带Checkbox的\" />\n</LinearLayout>\n```\n\n### Java代码\n\n```java\nPreference p = view.findViewById(R.id.s01);\np.setOnClickListener(new View.OnClickListener() {\n    public void onClick(View v) {\n        // TODO something.\n    }\n});\n```\n\n## 关于\n\n[QuickAF]是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"Android 无法接收推送的问题","url":"/2016/08/12/Android/Android-Push-Restart/","content":"\nAndroid 无法接收推送的问题总的来说，分为两大类：\n\n1. 代码问题\n2. 系统问题\n\n代码问题通常开发者自己查阅相关的集成文档都能解决。比如联网权限是否加了，推送接收器的AppID和AppKey是否设置正确，这类问题好解决，开发者自己逐步排查基本都能自行解决。\n\n而系统问题主要是第三方ROM的问题，有些初学者经常会困惑，我常常被样问：我的App在XX手机上收不到推送，该如何解决？\n\n<!-- more -->\n\n其实，这类问题根本的原因是App被杀死了，才导致推送接收不到，那怎么让App被杀死后，能够自动重启呢？不好意思，我的回答是：不能，除非用户允许该应用自启动！\n\n大部分国产手机比如小米，华为往往在安装App的时候，该App的自启动是禁止的。一般来说Android App的Service都是可以重新启动的，不过被系统禁止了自启动，那么就导致服务被杀死后无法重新启动，服务（推送服务）是未启动状态，当然无法接收接送了。\n\n那么微信被杀死怎么还可以接收到消息呢？我估计微信可能被第三方ROM列入白名单了吧，默认是允许自启动的。不信，在手机的**授权管理**中把微信的自启动关闭掉，再最近程序列表中把微信强行杀死，你看还能不能收到消息！\n\n如何判定程序有没有启动呢？这很简单，进入**设置**在**应用程序管理**中，找到该应用，如果那个**强行停止**是灰化的，表示没有启动，如果是可以点击的，则表示该应用存在后台的Receiver或Service，这也是为什么你没有桌面上点开应用程序，而应用程序仍然接收消息的原因。\n\n所以，这类问题还真不好解决。不过仍然存在一些蹊径。一般推送SDK会有一个守护服务。如果该服务在App内被开启的话，意味着该App允许被其它使用相同推送SDK的App拉起。举个例子，App A和App B都使用了极光推送，两个App都开启了守护服务，那么A和B都停止的状态下，如果用户手动点开了A，那么B的推送就会被A拉起来。\n\n以极光推送为例，守护服务的配置如下：\n\n```xml\n        <!-- since 1.8.0 option 可选项。用于同一设备中不同应用的JPush服务相互拉起的功能。 -->\n        <!-- 若不启用该功能可删除该组件，将不拉起其他应用也不能被其他应用拉起 -->\n        <service\n            android:name=\"cn.jpush.android.service.DaemonService\"\n            android:enabled=\"true\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"cn.jpush.android.intent.DaemonService\"/>\n                <category android:name=\"com.yourcorp.package\"/>\n            </intent-filter>\n        </service>\n```\n","tags":["Android"],"categories":["Android"]},{"title":"Hexo静态代码高亮插件","url":"/2016/08/10/Web/hexo-filter-highlight/","content":"\n之前本站介绍了《[Highlight.js 添加代码行号](/2016/08/10/Web/highlight-js-numbering/)》和《[Hexo高级教程之代码高亮](/2016/07/18/Web/Hexo-dev-highlight/)》算是对Hexo的代码高亮有比较深的了解了。所以萌生出了写一个\nHexo的静态代码高亮插件的想法。在原来代码高亮的基础上，允许添加代码提示及相关元数据，比如代码链接，代码标题。\n\n注：阅读本文需要一定的前端基础知识。\n\n## Hexo自带高亮\nHexo中插入代码有两种写法。一种叫[Code Block](https://hexo.io/docs/tag-plugins.html#Code-Block)\n``` plain\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n还有一种是[Backtick Code Block](https://hexo.io/docs/tag-plugins.html#Backtick-Code-Block)\n\n{% raw %}``` [language] [title] [url] [link text] code snippet ```{% endraw %}\n\n## Markdown代码高亮\nMarkdown中插入代码，是通过添加三个反引号（`）或三个波浪号（~）来实现的。如下示例\n\n{% raw %}``` [language] code here <br>```{% endraw %}\n\n像大多数的markdown如github的markdown都是这种写法。这种写法在`[language]`后面不能加其它参数，否则会输出不正常。\n\n## 对比分析\n如果使用静态的代码高亮，则必须关闭hexo自带高亮，关闭之后，如果以前的.md源文件使用的是hexo第二种插入代码的方式，则会导致hexo-renderer-marked渲染异常。而且我觉得hexo的第二种插入代码也挺不错的，尤其是链接参数。可以方便地链接到源代码。所以，针对现状，我写了hexo-filter-highlight插件，将代码块的一些元数据与代码内容分开。元数据主要由前端js来控制。而代码内容则由highlight.js来进行高亮，用于替代hexo自带高亮关闭后的代码高亮。\n\n\n## 插件配置\n\n```yaml _config.yml\nhljs:\n  enable: true #true to enable the plugin\n  line_number: frontend # add line_number in frontend or backend\n  trim_indent: backend # trim the indent of code block to prettify output. backend or front-end (recommend)\n  copy_code: true # show copy code in caption.\n  label:\n    left: Code\n    right: ':'\n    copy: Copy Code\n```\n\n`enable`：用于打开或关闭本插件功能。\n`line_number`：设定是由前端还是后端（本插件）添加行号（暂时只时在前端添加）\n`trim_indent`：是否删除列前面的缩进空白，前端与后端均可。推荐在后端\n`label`：用于初始化代码块标题（caption）显示文本。\n\n注：本插件开启后，会在3个反引号前面添加一个`<div class=\"code-caption\">`的div用于显示代码块caption。相应的设置均以`data-`添加在div的data域中。\n\n一开始本插件设定了两种caption的插入位置\n\n － `outer`方式，在三个反引号前插入，此种方式代码块的解析完全交由markdown，能很好控制caption的显示。比如复制代码右浮动。但是此种方式，代码行`ul`无法在`<pre>`内插入。\n  － `inner`方式，由插件解析三个反引号内的内容为`<pre><code>`，并且在`<code>`标签前面插入caption，后面插入行号`ul`，但是此种方式，caption内的元素无法浮动。所以目前只支持`outer`方式，如果有人能够完美解决上面的问题。请在github上提交pull-request。\n\n除了hexo配置，还需在主题在前端脚本上加入代码高亮脚本，如此，才会对代码块高亮。\n\n```js hljs.js https://github.com/Jamling/hexo-theme-nova/blob/master/source/js/hljs.js\n  $('.article pre code').each(function(i, block) {\n    var ds = $(this).parent().prev(code_caption_selector).data();\n    var texts = $(this).text().split('\\n');\n    if (ds.trim_indent === 'frontend') {\n      console.log(\"trim indent in front-end\");\n      var tab = texts[0].match(/^\\s{0,}/);\n      if (tab) {\n        var arr = [];\n        texts.forEach(function(temp) {\n          arr.push(temp.replace(tab, ''));\n        });\n        $(this).text(arr.join('\\n'));\n      }\n    }\n\n    if (ds.line_number === 'frontend') {\n      console.log(\"show line number in front-end\");\n      var lines = texts.length - 1;\n      var $numbering = $('<ul/>').addClass('pre-numbering');\n      $(this).addClass('has-numbering').parent().append($numbering);\n      for (i = 1; i <= lines; i++) {\n        $numbering.append($('<li/>').text(i));\n      }\n    }\n\n    hljs.highlightBlock(block);\n});\n```\n\n设置前端显示样式\n``` css\n.code-caption {\n  clear: both;\n  position: relative;\n  top: 0; /*empty p height*/\n}\n\n.code-caption .code-caption-label {\n  font-style: italic;\n  font-weight: bold;\n }\n \n.code-caption .code-caption-copy {\n  float: right;\n  @include user-select-none();\n}\n```\n***注：其它样式请参考[Highlight.js 添加代码行号]***\n\n## 使用\n语法规则如下：\n{% raw %}``` [language] [title] [link] show:off|false <br>code here <br>```{% endraw %}\n\n参数选项如下：\n\n- `language` 代码语言，如html, java, js\n- `title` 代码标题，一般使用文件名，如hljs.js\n- `link` 代码链接，一般链接到一个文件\n- `show` 可以设置off或false来隐藏caption的显示\n\n## 国际化\n本插件支持国际化，只不过需要在前端来完成。在加载`hljs.js`之前的位置在主题模板中插入以下脚本\n```html\n    <script type=\"text/javascript\">\n    var hljs_labels = {\n        left: \"{{__('hljs.left')}}\",\n        right: \"{{__('hljs.right')}}\",\n        copy: \"{{__('hljs.copy')}}\"\n    }\n    </script>\n```\n\n## 参考\nsyntax-highlighting-with-highlightjs: http://idodev.co.uk/2013/03/syntax-highlighting-with-highlightjs/\njquery.zeroclipboard: https://github.com/zeroclipboard/jquery.zeroclipboard\nHexo高级教程之代码高亮: http://www.ieclipse.cn/2016/07/18/Web/Hexo-dev-highlight/\nhexo-filter-highlight: https://github.com/Jamling/hexo-filter-highlight/\n\n[highlight.js]: https://highlightjs.org/\n[hexo]: https://hexo.io\n[Nova]: http://github.com/Jamling/hexo-theme-nova\n[Excel VBA基础实例教程]: http://www.ieclipse.cn/2016/05/13/tech-vba-guide/\n[syntax-highlighting-with-highlightjs]: http://idodev.co.uk/2013/03/syntax-highlighting-with-highlightjs/\n","tags":["Hexo","Node.js"],"categories":["Web"]},{"title":"Highlight.js 添加代码行号","url":"/2016/08/10/Web/highlight-js-numbering/","content":"\n[highlight.js]是一款功能强大的代码高亮Javascript工具，支持162程序语言，自带74种高亮样式，支持自动侦测语言类型，几乎所有的markdown都支持[highlight.js]。Hexo在[syntax-highlighting-with-highlightjs]的基础上成功实现对代码行号的添加，并且做了一些优化和改进。\n\n注：阅读本文需要一定的前端基础知识。\n\n## 加载highlight.js\n使用[highlight.js]非常简单，只需引入[highlight.js]的css及js（推荐在主题模板中作为全局css和js引入，引入的位置在`<head></head>`之间）。\n\n``` html\n<link rel=\"stylesheet\" href=\"//cdn.bootcss.com/highlight.js/9.2.0/styles/github.min.css\">\n<script src=\"//cdn.bootcss.com/highlight.js/9.2.0/highlight.min.js\"></script>\n```\n[highlight.js]有许多代码风格，我在这里使用的是github风格。\n\n然后，在文档加载完毕之后初始化（推荐在`</body>`之前的`<script></script>`中引入）\n\n``` js hljs.js https://github.com/Jamling/hexo-theme-nova/blob/master/source/js/hljs.js#L3:L4\n  // highlight\n  hljs.initHighlightingOnLoad(); \n```\n\n如此，便可以测试及查看代码高亮结果了。\n\n## 添加行号\n添加行号的大致过程是先将代码部分按行切割，得到代码行数。然后生成一个动态的行号列表ul插入到`<code>`标签之后\n\n```js hljs.js https://github.com/Jamling/hexo-theme-nova/blob/master/source/js/hljs.js#L51:L59\n    if (ds.line_number === 'frontend') {\n      console.log(\"show line number in front-end\");\n      var lines = texts.length - 1;\n      var $numbering = $('<ul/>').addClass('pre-numbering');\n      $(this).addClass('has-numbering').parent().append($numbering);\n      for (i = 1; i <= lines; i++) {\n        $numbering.append($('<li/>').text(i));\n      }\n    }\n```\n\n对于有行号的`<code>`标签，多了一个`has-numbering`的样式，行号列表`ul`的样式为`pre-numbering`。通过定义`has-numbering`和`pre-numbering`css规则来控制行号与代码块的显示及对齐。\n\n```css nova.scss https://github.com/Jamling/hexo-theme-nova/tree/master/source/css/bs/nova.scss\ncode.has-numbering {\n  margin-left: 1.7em !important; /*因为显示行号，所以离左边有一定的距离*/\n  word-wrap: normal; \n  word-break: keep-all;\n  white-space: pre;\n}\n\n.pre-numbering {\n  position: absolute; /*绝对定位*/\n  top: 0;\n  left: 0;\n  width: 2.2em; /*行号的宽度*/\n  height: 100%;\n  padding: 0.5em 0.2em 0.5em 0; /*上下padding保持与<code>一致，不然出现错位*/\n  border-right: 1px solid #C3CCD0;\n  border-radius: 3px 0 0 3px;\n  background-color: #EEE;\n  text-align: right;\n  font-size: 1.0em; /*字体大小与<code>一致*/\n  color: #AAA;\n  list-style: none;\n}\n```\n\n比较重要的规则在上面的css中均有注释说明。完整CSS请参考Nova中的样式。\n\n***注，具体的样式需根据当前主题做出适当的修改***\n\n## 处理滚动\n\n添加了行号，为使行号与代码行不错乱，所以要求代码块在横向允许滚动，一般来说显示行号的`<code>`标签，还需加上以下css规则。\n```css\ncode {\n    overflow-x: auto;\n    overflow-y: auto;\n    word-break: keep-all;\n    white-space: pre;\n}\n```  \n\n## 支持响应式\n由于在小屏幕上，尤其是手机浏览器，横向滚动并不好操作，所以，在移动设备上通过媒体查询来设置行号`ul`不显示，并且覆盖`<code>`的样式规则为允许断行。\n\n```css\n@media (max-width: 767px) {\n  .pre-numbering {\n    display: none;\n  }\n  code.has-numbering {\n    margin-left: -0.5px !important;\n    word-wrap: break-world !important;\n    white-space: pre-wrap !important;\n  }\n}\n```\n\n## 支持更多的代码语言\n\n[highlight.js]默认支持大部分主流程序语言的高亮，但是也有小部分语言是不支持的，比如[Excel VBA基础实例教程]中贴了不少VB代码，需要额外加载[highlight.js]的VBScript.js才能高亮，则需要引入额外的高亮脚本`vbscript.js`即可。如下所示：\n\n```html\n<script src=\"http://cdn.bootcss.com/highlight.js/9.1.0/languages/vbscript.min.js\" ></script>\n\n```\n\n## 代码复制\n对于复制这块，比较好的解决方案是引入jquery的zclip插件（https://github.com/zeroclipboard/jquery.zeroclipboard）。如果用户选择的不仅仅是代码部分，则需要加入css规则来控制行号不被选择。\n\n``` css\n.pre-numbering {\n  -webkit-user-select: none; /* Chrome all / Safari all */\n  -moz-user-select: none; /* Firefox all */\n  -ms-user-select: none; /* IE 10+ */\n  user-select: none;  /* Likely future */ \n}\n```\n\n## 参考\nsyntax-highlighting-with-highlightjs: http://idodev.co.uk/2013/03/syntax-highlighting-with-highlightjs/\njquery.zeroclipboard: https://github.com/zeroclipboard/jquery.zeroclipboard\nHexo高级教程之代码高亮: http://www.ieclipse.cn/2016/07/18/Web/Hexo-dev-highlight/\n\n[highlight.js]: https://highlightjs.org/\n[hexo]: https://hexo.io\n[Nova]: http://github.com/Jamling/hexo-theme-nova\n[Excel VBA基础实例教程]: http://www.ieclipse.cn/2016/05/13/tech-vba-guide/\n[syntax-highlighting-with-highlightjs]: http://idodev.co.uk/2013/03/syntax-highlighting-with-highlightjs/\n","tags":["js"],"categories":["Web"]},{"title":"QuickAF标题栏介绍","url":"/2016/08/03/Android/quickaf-titlebar/","content":"\n## 简介\n在[QuickAF]框架中，标题栏不使用Android自带的ActionBar或ToolBar，而是使用一个IOS风格的TitleBar来实现。TitleBar的使用非常灵活，主要分为三块区域：\n- 左侧区域，一般放置一个返回按钮，父类AfActivity已经默认点击为finish操作\n- 中间区域，一般显示页面的标题，如“订单详情”\n- 右侧区域，一般放置本页面的相关操作图标或文本按钮\n\n<!-- more -->\n\n## 初始化\n一般来说，一个App的页面风格应该是统一的，所以一般在BaseActivity/BaseFragment中对TitleBar进行初始化。初始化方法一般是放在`initHeaderView()`中，如下所示：\n\n```java\nprotected void initHeaderView() {\n    mTitleLeftView = (TextView) View.inflate(this, R.layout.title_left_tv, null);\n    mTitleTextView = (TextView) View.inflate(this, R.layout.title_middle_tv, null);\n\n    mTitleBar.setLeft(mTitleLeftView);\n    mTitleBar.setMiddle(mTitleTextView);\n\n    int padding = AppUtils.dp2px(this, 8);\n    mTitleBar.setPadding(padding, 0, padding, 0);\n    if(!isOverlay()){\n        mTitleBar.setBackgroundColor(getStatusBarColor());\n        mTitleBar.setBottomDrawable(AppUtils.getColor(this, R.color.divider));\n    }\n    setOnClickListener(mTitleLeftView);\n}\n```\n\n通常，BaseActivity/BaseFragment中已经对TitleBar初始化过了，所以子页面的初始化主要的就是控制TitleBar的右侧区域以及设置标题文字。设置标题文字调用`setTitle(\"titleName\")`就可以了，下面主要描述对TitleBar右侧区域的初始化。\n\nTitleBar提供了一个`addRightView()`的API来添加右侧菜单项。参数类型可以是layout resource或View对象。如此，用户可以自由控制菜单项的属性，比如设置图片，设置文字，添加onClick事件等。\n\n- 右侧button为图片：\n``` java\nmTitleTextView.setText(R.string.house_title);\nmMap = (ImageView) mTitleBar.addRightView(R.layout.layout_title_icon);\nmMap.setImageResource(R.drawable.title_map);\nmSearch = (ImageView) mTitleBar.addRightView(R.layout.layout_title_icon);\nmSearch.setImageResource(R.drawable.title_search);\nsetOnClickListener(mMap, mSearch);\n```\n\n- 右侧button为文字：\n```java\nmManageTv = (TextView) mTitleBar.addRightView(R.layout.layout_title_text);\nmManageTv.setText(isMyList() ? R.string.note_my_book_title_manage : R.string.note_other_book_title_change);\n```\n\n- 右侧button为图片加文字(比较少)\n```java\nmSubmit = (TextView) mTitleBar.addRightView(R.layout.layout_title_post_submit);\n```\n\n## 设置\n\n### 对齐方式\nTitleBar在垂直方向默认是居中对齐的，在水平方向，提供两种对齐方式：左对齐与居中对齐（默认）。可以通过`TitleBar#setGravity(int gravity)`方法设置TitleBar的对齐方式，一般来说只需要设置水平对齐即可\n\n- `Gravity.CENTER_HORIZONTAL`，水平居中对齐（默认） ，TitleBar中间区域（标题）会居中显示\n- `Gravity.LEFT`，水平左对齐，TitleBar中间区域（标题）会在左侧区域后面显示\n\n不同的水平对齐方式，中间区域的显示空间是不一样子，如果不能满足需求，还可以通过`TitleBar.setConfig()`来设置TitleBar参数。\n\n### 隐藏标题栏\nTitleBar可以通过`View.setVisibility()`来控制显示或隐藏，如果是页面不需要标题栏，建议是在`initWindowFeature()`方法中通过`setShowTitleBar(false)`来设置。\n\n### 悬浮标题栏\nTitleBar支持设置其是否悬浮在页面上（不随页面滚动），可以在`initWindowFeature()`方法中通过`setOverlay(false)`来设置。\n\n## PopupMenu\nTitleBar内部未实现popup menu，如果需要使用下拉菜单，可以在特定的页面中结合PopupWindowUtils或自己实现一个下拉菜单\n\n## 关于\n\n[QuickAF]是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"Android倒计时控件","url":"/2016/08/02/Android/Android-coutdown-button/","content":"\nAndroid倒计时控件，通常在发送验证码时用得最多。其实Android系统提供了一个倒计时控件叫做CountDownTimer，不过这个控件没有与界面控件绑定，在这里，我要讲述的是如何自己写一个倒计时的控件。\n\n## 源码\n首先放上CountDownButton的源码\n\n```java\n/**\n * CountDownButton used for send phone verify code etc.\n *\n * @author Jamling\n */\npublic class CountDownButton extends RoundButton {\n    private long totalTime = 60 * 1000;// 默认60秒\n    private String label = \"秒后重发\";\n    private long time;\n    private long step = 1000;\n    private int interval = 1000;\n\n    private Handler mHandler = new Handler() {\n        public void handleMessage(android.os.Message msg) {\n            time -= step;\n            if (time <= 0) {\n                reset();\n            }\n            else {\n                refreshText();\n                mHandler.sendEmptyMessageDelayed(0, step);\n            }\n        }\n    };\n    \n    public CountDownButton(Context context) {\n        this(context, null);\n    }\n    \n    public CountDownButton(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init(context, attrs);\n    }\n\n    private void init(Context context, AttributeSet attrs) {\n        setHintTextColor(getTextColors());\n    }\n    \n    public void start() {\n        this.setEnabled(false);\n        this.time = totalTime;\n        refreshText();\n        mHandler.sendEmptyMessageDelayed(0, step);\n    }\n\n    private void refreshText() {\n        long t = (time / interval);\n        if (t > 0) {\n            this.setText(t + label);\n        }\n    }\n    \n    public void reset() {\n        setText(null);\n        setEnabled(true);\n    }\n    \n    /**\n     * Set count down total time\n     * <p>\n     * <code> setTotalTime(30000);// 30s</code>\n     * </p>\n     *\n     * @param totalTime\n     *\n     * @return CountDownButton self\n     */\n    public CountDownButton setTotalTime(long totalTime) {\n        this.totalTime = totalTime;\n        return this;\n    }\n\n    /**\n     * Set count down step\n     * <p>\n     * <code> setStep(1000);// 1s</code>\n     * </p>\n     *\n     * @param step count down step, micro seconds\n     *\n     * @return CountDownButton self\n     */\n    public CountDownButton setStep(long step) {\n        if (step > 0) {\n            this.step = step;\n        }\n        return this;\n    }\n\n    /**\n     * Set count down text refresh interval.\n     * <p>\n     * <code> setInterval(1000);//1s, text display: (getRemainingTime() / interval) + label</code>\n     * </p>\n     *\n     * @param interval count down text refresh interval, micro seconds\n     *\n     * @return CountDownButton self\n     */\n    public CountDownButton setInterval(int interval) {\n        if (interval > 0) {\n            this.interval = interval;\n        }\n        return this;\n    }\n\n    public long getRemainingTime() {\n        return time;\n    }\n\n    public long getStep() {\n        return step;\n    }\n}\n```\n\n实现相对简单，通过Handler的sendEmptyMessageDelayed来定时发送消息，实现计时并更新界面，当然，也可以通过Timer来实现，不过因为Android UI线程的限制，不如使用Handler来得简洁。CountDownButton向外暴露设置step 步长，totalTime总计时等方法。\n\n## 布局\n\n``` xml\n<cn.ieclipse.af.view.CountDownButton\n    android:id=\"@+id/btn2\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/black_333333\"\n    android:hint=\"点击发送验证码\"\n    android:padding=\"8dp\"\n    android:radius=\"8dp\"\n    android:textColor=\"@color/white\"\n    android:textSize=\"14sp\"\n    app:borderColor=\"@color/black_alpha_60\"\n    app:borderWidth=\"0dp\"\n    android:layout_marginTop=\"20dp\" />\n```\n\n## Activity中使用\n\n``` java\nmyBtn2 = (CountDownButton) btn2;\n// btn2 text: enable: white; normal: gray\nColorStateList csl2 = new ColorStateList(new int[][]{{android.R.attr.state_enabled}, {}},\n    new int[]{0xffffffff, 0xffcccccc});\nmyBtn2.setTextColor(csl2);\nmyBtn2.setTotalTime(10000);\n// btn2 bg\nint r = AppUtils.dp2px(this, 4);\nRoundedColorDrawable normal = new RoundedColorDrawable(r, AppUtils.getColor(this, R.color.black_333333));\nnormal.addStateColor(new int[]{android.R.attr.state_enabled, android.R.attr.state_window_focused}, AppUtils\n    .getColor(this, R.color.colorPrimary)).applyTo(myBtn2);\n```\n\n当CountDownButton开时计时时，它将进入disable状态（不可点击），button的外观也随之变化，当计时结束后，button恢复原来的状态。\n示例代码中的button样式与状态，都是通过代码控制的。详细可以查看本站另一篇文章：[Android使用代码来实现StateListDrawable]\n\n计时开始代码：\n\n```java\n    @Override\n    public void onClick(View v) {\n        if (v == myBtn2) {\n            myBtn2.start();\n            return;\n        }\n        super.onClick(v);\n    }\n```\n\n\n## 关于\n\n[QuickAF] 是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n\n## 参考\nAndroid使用代码来实现StateListDrawable: http://www.ieclipse.cn/2016/08/02/Android/Android-code-states/\nQuickAF: https://github.com/Jamling/QuickAF\n\n[Android使用代码来实现StateListDrawable]: http://www.ieclipse.cn/2016/08/02/Android/Android-code-states/\n[QuickAF]: https://github.com/Jamling/QuickAF\n\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"Android使用代码来实现StateListDrawable","url":"/2016/08/02/Android/Android-code-states/","content":"\n相信大家在做Android开发的时候，一定遇到以下问题：\n\n- 界面A上有一个按钮B1，点击时，需要变换背景颜色\n- 界面B的按钮B2与界面A的按钮B1外观一样，只是颜色不同\n\n通常我们的解决办法是向UI要按钮的背景图，不同的状态是一张图片。以上为例，我们需要向美工索取4张图片。\n按钮B1（常态与点击态），按钮B2（常态与点击态），然后再定义selector drawable xml，如果美工给的不是9.png，我们还要使用nine-patch工具将其转为9.png图片。\n大家可以想象一下，如果状态更多，而页面上的按钮又各不相同的话，天啊！那该有多少图片，多少个selector啊，得花多少时间啊！有没有快捷的解决办法呢？答案当然是有！\n\n<!-- more -->\n\n-  在Android的5.0之后，Android提供了一个Tint着色功能，允许你修改背景图片的颜色来达到复用功能。不过只能在Android5.0以上的系统中使用。\n- 使用[QuickAF]的RoundedColorDrawable和RoundButton来实现\n\n## RoundedColorDrawable\n\nRoundedColorDrawable继承自Drawable，不仅可以设置Drawable的背景和圆角，还可以设置边框。\n\n### 构造函数\n常用的构造函数如下：\n\n```java\n    /**\n     * Creates a new instance of RoundedColorDrawable.\n     *\n     * @param radius\n     *            of the corners in pixels\n     * @param color\n     *            of the drawable\n     */\n    public RoundedColorDrawable(float radius, int color) {\n        this(color);\n        setRadius(radius);\n    }\n```\n\n构造时传入圆角半径和默认的背景颜色。\n\n### 设置边框\n如果需要设置边框，需要单独调用setBorder来实现。\n\n```java\n    /**\n     * Sets the border\n     * \n     * @param color\n     *            of the border\n     * @param width\n     *            of the border\n     */\n    public void setBorder(int color, float width) {\n        if (mBorderColor != color) {\n            mBorderColor = color;\n            invalidateSelf();\n        }\n        \n        if (mBorderWidth != width) {\n            mBorderWidth = width;\n            updatePath();\n            invalidateSelf();\n        }\n    }\n```\n\n`setBorder()`方法可以对RoundedColorDrawable设置框架厚度和颜色。\n\n### 设置状态\n\n核心的设置状态及其对应的颜色代码如下：\n\n```java\n    private StateListDrawable sld;\n    public RoundedColorDrawable setStateColor(int[][] stateSets, int[] colors){\n        if (stateSets != null && colors != null) {\n            int len = Math.min(stateSets.length, colors.length);\n            for (int i = 0; i < len; i++) {\n                RoundedColorDrawable self = new RoundedColorDrawable(mRadii, colors[i]);\n                self.setBorder(mBorderColor, mBorderWidth);\n                sld.addState(stateSets[i], self);\n            }\n        }\n        return this;\n    }\n\n    public RoundedColorDrawable addStateColor(int[] stateSet, int color, int borderColor){\n        if (sld == null) {\n            sld = new StateListDrawable();\n        }\n        RoundedColorDrawable self = new RoundedColorDrawable(mRadii, color);\n        self.setBorder(borderColor > 0 ? borderColor : mBorderColor, mBorderWidth);\n        sld.addState(stateSet, self);\n        return this;\n    }\n\n    public RoundedColorDrawable addStateColor(int[] stateSet, int color){\n        return addStateColor(stateSet, color, 0);\n    }\n\n    public RoundedColorDrawable addStateColor(int state, int color){\n        return addStateColor(new int[]{state}, color);\n    }\n```\n\n通过上面的代码可以知道，给RoundedColorDrawable添加状态集对应的drawable，其实都是调用StateListDrawable的addState()方法。而我们定义的selector drawable xml，其实也是生成一个StateListDrawable。RoundedColorDrawable不过是提供类似的方法罢了。\n\n### 示例代码\n\n回到本文开篇的例子，按钮B1定义如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:drawable=\"@drawable/b1_pressed\" android:state_selected=\"true\"/>\n    <item android:drawable=\"@drawable/b1_pressed\" android:state_pressed=\"true\"/>\n    <item android:drawable=\"@drawable/b1_normal\"/>\n</selector>\n```\n`b1_pressed.9.png`为点击时或选中时的背景，颜色假设为`#ffff0000`(红色)，`b1_nromal.9.png`为默认的背景，颜色假设为`#ff00ff00`(绿色)。如果使用RoundedColorDrawable，那么代码如下：\n\n```java\n Button btn2 = (RoundButton)view.findViewById(R.id.btn2);\n // btn2 bg\nint r = AppUtils.dp2px(this, 4); // 圆角半径\nRoundedColorDrawable normal = new RoundedColorDrawable(r, 0xffff0000); // 默认背景\nnormal.addStateColor(new int[]{ android.R.attr.state_pressed}, 0xff00ff00); // pressed时的背景\nnormal.addStateColor(new int[]{ android.R.attr.state_selected}, 0xff00ff00); // selected时的背景\n\nnormal.applyTo(btn2); // 将背景应用到btn2上\n```\n\n注意顺序，如果Android判断当前的状态符合，则不会继续向下查找状态。在selector xml中，顺序要按状态的范围从小到大写。而java代码中则相反，顺序按状态的范围从大到小add。\n\n## RoundButton\n\nRoundButton是Button+RoundedColorDrawable的综合体，它的内部有一个类型为RoundedColorDrawable的mRoundBg对象作为背景。像半径和圆角可以在xml中配置，如下：\n\n```xml\n<cn.ieclipse.af.view.RoundButton\n    android:id=\"@+id/btn3\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:background=\"@color/colorPrimary\"\n    android:text=\"Normal button\"\n    android:padding=\"8dp\"\n    android:radius=\"8dp\"\n    android:textColor=\"@color/white\"\n    android:textSize=\"14sp\"\n    app:borderColor=\"@color/black_alpha_60\"\n    app:borderWidth=\"1dp\"\n    android:layout_marginTop=\"20dp\" />\n```\n其中`android:radius`、`app:borderColor`和`app:borderWidth`分别指定的Button的圆角半径，边框颜色和边框厚度。\n\nRoundButton对于状态的操作更为简单。如下：\n\n```java\nRoundButton btn3 = (RoundButton)view.findViewById(R.id.btn3);\nbtn3.setPressedBgColor(0xff3F51B5);\nbtn3.setSelectedBgColor(0xff333333);\nbtn3.apply();\n```\n\n## 关于\n\n[QuickAF] 是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n## 参考\nQuickAF: https://github.com/Jamling/QuickAF\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"Android底部栏添加消息提醒小红点功能","url":"/2016/08/02/Android/Android-radio-badge/","content":"\n目前许多Android App都带有一个底部栏，通过底部栏可以切换Tab，比如微信，QQ都是这种风格。对于像小红点之类的醒目提醒，用得最多的就是BadgeView了，不过，如果底部栏是RadioGroup的话，那么不好意思BadgeView可不支持哦（如果使用BadgeView，RadioGroup就不能愉快地工作了）。那么如何即保留使用RadioGroup又能添加BadgeView的功能呢？请接着阅读本文。\n\n本文阐述的是使用[QuickAF]的RadioBadgeView来解决RadioButton与BadgeView的冲突。在RadioButton上显示Badge消息提醒，需要将原来的RadioButton替换成RadioBadgeView。\n\n## RadioBadgeView\n\nRadioBadgeView继承自RadioButton，可以视为RadioButton的加强版。与RadioButton不同的时，它在初始化时会生成一个BadgeView2对象（BadgeView2用于展现小红点，后文有详细介绍）。在onDraw时，调用BadegView2的draw方法将小红点画到界面上。\n\n```java\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        drawBadge(canvas);\n    }\n    \n    private void drawBadge(Canvas canvas) {\n        Point p = getBadgePosition();\n        canvas.save();\n        canvas.translate(p.x, p.y);\n        badgeView.draw(canvas);\n        canvas.restore();\n    }\n\n    /**\n     * Calculate the badge view position, default is the top-right of the radio\n     * button with a top drawable.\n     *\n     * \n     * @return the position of badge view relative to target\n     */\n    protected Point getBadgePosition() {\n        int offw = getMeasuredWidth() >> 1;\n        int offh = getMeasuredHeight() >> 1;\n        // 注意这里不考虑复杂的布局\n        Drawable d = getCompoundDrawables()[1]; // top drawable;\n        if (d != null) {\n            offw += d.getIntrinsicWidth() >> 1;\n            offh -= (getCompoundDrawablePadding() + d.getIntrinsicHeight()\n                    + (getPaint().descent() - getPaint().ascent())) / 2;\n            offh -= badgeView.getMeasureHeight() / 2;\n            if (offh < 0) {\n                offh = 0;\n            }\n        }\n        return new Point(offw, offh);\n    }\n```\n\n从上面的代码可以看到，`drawBadge`用来画BadgeView, `getBadgePosition()`用于获取BadgeView的位置。注意了，这个位置坐标位于top drawable的右上角，如果你的页面要求小红点位于其它地方，比如右下角，那么需要参考本类的实现，重写`getBadgePosition()`方法。\n\n如何控制显示的数目呢？\n\n请看以下代码：\n\n```java\n    public BadgeView2 getBadgeView() {\n        return badgeView;\n    }\n    \n    public int getBadgeCount() {\n        return badgeView.getBadgeCount();\n    }\n    \n    public void setBadgeCount(int count) {\n        badgeView.setBadgeCount(count);\n    }\n    \n    public void incrementBadgeCount(int increment) {\n        int count = getBadgeCount();\n        setBadgeCount(increment + count);\n    }\n    \n    public void decrementBadgeCount(int decrement) {\n        incrementBadgeCount(-decrement);\n    }\n```\n\n像常用的对BadgeView数目的操作，都委托<var>badgeView</var>去执行了。更多的操作，需要通过`getBadgeView()`返回<var>badgeView</var>来执行。\n\n那么可以认为RadioBadgeView相当于一个Decorator。真正的玄机还在BadgeView2类中。\n\n## BadgeView2\n\nBadgeView2与BadgeView很像，熟悉BadgeView的同学阅读BadgeView2的代码应该很容易，由于BadgeView2的代码较长，这里只讲部分重点功能。\n\n### 设置显示Style\nBadgeView2提供三种显示风格\n\n- 显示背景，背景一般都是一个小圆点\n- 显示数字，比如QQ的消息数目，有最大值限制，可以自定义\n- 都显示（显示背景+显示数字）\n\n代码如下：\n\n```java\n    /**\n     * Set badge view display style\n     * \n     * @param badgeStyle combined value of {@link #STYLE_BACKGROUND}, {@link #STYLE_TEXT}\n     * @see BadgeView2#STYLE_BOTH\n     * @see BadgeView2#STYLE_BACKGROUND\n     * @see BadgeView2#STYLE_TEXT\n     *      \n     */\n    public void setBadgeStyle(int badgeStyle) {\n        if (this.badgeStyle != badgeStyle) {\n            this.badgeStyle = badgeStyle;\n            requestLayout();\n        }\n    }\n```\n\n### 设置背景\n提供两个API来设置背景\n\n- 通过指定背景半径(radius)和背景色(bgColor)来设置（背景为ShapeDrawable）\n- 通过设置背景图片（png或9.png）\n\n详细代码如下：\n\n```java\n    /**\n     * <p>\n     * Set shape drawable as background. If set\n     * {@link BadgeView2#STYLE_BACKGROUND} style the background will displayed\n     * as circle with assigned radius.\n     * \n     * </p>\n     * <p>\n     * <b><em>Note </em></b>\n     * If badge count less than 10 or {@link #badgeStyle} set to\n     * {@link #STYLE_BACKGROUND} the background will display as circle\n     * </p>\n     * If radius assigned, set a default horizontal padding of radius also.\n     * \n     * @param radius\n     *            the radius of circle background under\n     *            {@link BadgeView2#STYLE_BACKGROUND} style, px unit\n     * @param bgColor\n     *            background color, ARGB format\n     */\n    public void setBadgeBackground(int radius, int bgColor) {\n        float[] radiusArray = new float[] { radius, radius, radius, radius,\n                radius, radius, radius, radius };\n        padding = new Rect(radius, 0, radius, 0);\n        RoundRectShape roundRect = new RoundRectShape(radiusArray, null, null);\n        ShapeDrawable bgDrawable = new ShapeDrawable(roundRect);\n        bgDrawable.getPaint().setColor(bgColor);\n        bgDrawable.setPadding(padding);\n        this.badgeBackground = bgDrawable;\n        requestLayout();\n    }\n\n    /**\n     * Set badge background, may be a .9.png, to get well display effect, you\n     * may call {@link BadgeView2#setBadgePadding(int, int, int, int)} to set\n     * paddings\n     * \n     * \n     * @param d\n     *            background drawable\n     * @see BadgeView2#setBadgePadding(int, int, int, int)\n     */\n    public void setBadgeBackground(Drawable d) {\n        if (this.badgeBackground != d) {\n            badgeBackground = d;\n            requestLayout();\n        }\n    }    \n```\n\n其它的API就不详细介绍了，有兴趣可以查看[QuickAF]源代码。\n\n### 使用方法\n在[QuickAF]的sample app中，底部的导航栏使用的就是RadioBageView，另外，在示例中还包含RadioBadgeView的三种使用方式\n\n```java\n   int r = AppUtils.dp2px(view.getContext(), 4);\n   int ts = AppUtils.sp2px(view.getContext(), 12);\n   \n   rb1 = (RadioBadgeView) findViewById(R.id.radio_badge1);\n   rb2 = (RadioBadgeView) findViewById(R.id.radio_badge2);\n   rb3 = (RadioBadgeView) findViewById(R.id.radio_badge3);\n   \n   rb1.getBadgeView().setBadgeBackground(ts >> 1, 0xffff0000);\n   rb1.getBadgeView().setTextSize(ts);\n   rb1.getBadgeView().setMax(10, null);\n   \n   rb2.getBadgeView().setBadgeBackground(\n           getResources().getDrawable(android.R.drawable.btn_radio));\n   rb2.getBadgeView().setTextColor(0xff00ff00);\n   rb2.getBadgeView().setTextSize(ts * 3 / 2);\n   rb2.getBadgeView().setBadgePadding(r, 0, r, 0);\n   \n   rb3.getBadgeView().setBadgeBackground(\n           getResources().getDrawable(R.mipmap.logo));\n   rb3.getBadgeView().setTextColor(0xff0000ff);\n   rb3.getBadgeView().setTextSize(ts * 2 / 3);\n```\n\nlayout中有三个RadioBadgeView，分别为rb1, rb2和rb3。\n\n- **rb1**：使用ShapeDrawable作背景，最大数目显示10\n- **rb2**：使用9.png作背景\n- **rb3**：使用png图片作背景\n\n布局Layout如下：\n\n```xml\n<RadioGroup\n    android:id=\"@+id/radioGroup2\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"20dp\"\n    android:background=\"#ffeeeeaa\"\n    android:gravity=\"center_vertical\"\n    android:minHeight=\"55dp\"\n    android:orientation=\"horizontal\" >\n\n    <cn.ieclipse.af.view.RadioBadgeView\n        android:id=\"@+id/radio_badge1\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:button=\"@null\"\n        android:drawableTop=\"@android:drawable/ic_menu_camera\"\n        android:gravity=\"center\"\n        android:padding=\"8dp\"\n        android:text=\"Shape bg\" />\n\n    <cn.ieclipse.af.view.RadioBadgeView\n        android:id=\"@+id/radio_badge2\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:button=\"@null\"\n        android:drawableTop=\"@android:drawable/ic_menu_save\"\n        android:gravity=\"center\"\n        android:padding=\"8dp\"\n        android:text=\"9png bg\" />\n\n    <cn.ieclipse.af.view.RadioBadgeView\n        android:id=\"@+id/radio_badge3\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:button=\"@null\"\n        android:drawableTop=\"@android:drawable/ic_menu_manage\"\n        android:gravity=\"center\"\n        android:padding=\"8dp\"\n        android:text=\"png bg\" />\n</RadioGroup>\n```\n\n大家可以在[QuickAF]的sample app中修改显示风格，设置padding，增加或减少数目来查看效果。\n\n## 关于\n\n[QuickAF] 是一个Android平台上的app快速开发框架，欢迎读者在github star或fork。本人写作水平有限，欢迎广大读者指正，如有问题，可与我直接联系或在我的官方博客中给出评论。\n\n\n## 参考\nBadgeView: https://github.com/stefanjauker/BadgeView\nQuickAF: https://github.com/Jamling/QuickAF\n\n[QuickAF]: https://github.com/Jamling/QuickAF\n\n","tags":["Android","QuickAF"],"categories":["Android"]},{"title":"Hexo高级教程之文章阅读计数","url":"/2016/07/28/Web/Hexo-dev-post-views/","content":"\n## 引言\n\nHexo的NexT主题非常流行，之前看过某博友的博客，使用的就是NexT主题，在文章列表页面，竟然还显示了文章的阅读次数！Hexo是静态博客，像阅读次数的实现必须借助第三方工具。早期[Nova]主题使用的是友言评论，不像多说评论开放了许多API，所以，从版本0.1.0开始，本站使用的[Nova]主题就换成了多说。在多说的[获取文章评论、转发数API](http://dev.duoshuo.com/docs/50615732a834c63c56004257)中，`views`即为文章阅读数，不过好像多说对非官方的网站不开放此字段，`views`返回的一直为0。昨天阅读了一下博友的[为NexT主题添加文章阅读量统计功能](https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud)这篇文章，原来NextT的阅读数是借助云API来实现了。所以，立即动手，也为本站的[Nova]主题添加阅读计数功能。\n\n如果有使用非NexT主题，也想实现文章阅读计数的博主们，不妨跟我一起折腾，一起来修改主题吧！再次声明，本系列需要一定的前端基础知识。\n\n## LeanClound配置\n\n### 注册验证\n如果还没有[LeanClound]账号，先去[LeanClound]上注册账号，并通过邮箱验证。\n\n### 创建应用\n\n{% asset_img lc_console.png %}\n\n登录后，在控制台创建一个应用，比如ieclipse.cn，然后在应用->设置->应用Key->下将App ID和App Key配置到主题`_config.yml`配置文件中。\n\n```yaml\nlc:\n  enable: true # true|false\n  class: Counter # leanclound上的class名称\n  app_id: rYUER9KxmGUXSpfEtu7wCFMo-gzGzoHsz\n  app_key: k7hzTkcS0blxgry4VT9rJjYj\n```\n\n### 应用安全\n在控制台应用->设置->安全中心->Web 安全域名项，将网站的安全域名写全，每行一个域名，换行分隔，协议、域名和端口号都需严格一致（3 分钟后生效）。注，如开发调试阶段，可以将本地的Hexo地址(http://127.0.0.1:4000)写上，但开发调试完毕之后记得删除。\n```\nhttp://ieclipse.cn\nhttp://www.ieclipse.cn\nhttp://jamling.github.io\nhttp://jamling.github.com\nhttp://jamling.coding.me\n```\n配置完毕之后点击保存。\n\n### 创建Class\n我们要使用[LeanClound]的数据保存功能，将文章的阅读次数及相关信息保存到[LeanClound]\n\n在控制台应用->存储选项，创建一个Class（Class相当于数据库中的表），注意创建Class时，弹出的对话框中**设置数据条目的默认 ACL 权限 **要勾选**无限制**（所有人可读可写）。因为，每个访客点击文章，均需要更新数据库，请阅读自增1。\n\n{% asset_img lc_storage.png %}\n\n如果不想修改主题配置，则创建的Class名称须为**Counter**，如果名字不为主题默认的**Counter**，记得在主题配置中修改。\n\nCounter表创建成功之后，无需添加数据库字段。点击博客文章进去之后，会自动将博客文章的信息写入此Class。除了`views`字段，还有\n\n- `pageId` 用于标识文章唯一ID，使用[Nova]主题，可以使用`page_uid()`方法来生成。如果访问的文章`pageId`相同，那么`views`则加1。\n- `url` 文章页面的url，主题中可以使用`page.permalink`来写入\n- `title` 文章页面的标题，如`page.title`\n\n关于更多信息，可以参考[为NexT主题添加文章阅读量统计功能]\n\n### 创建索引\n待成功生成第一条数据之后，需要对`Counter` Class生成唯一索引，以防止出现对同一文章出现多次统计的错误。如下图所示：\n\n{% asset_image lc_index.png %}\n\n点击“其它”->“索引”，在弹出的对话框中选择`pageId`，再点击“创建”按钮，如果Class中的数据`pageId`唯一的话，那么将会成功创建索引。否则，需要手动删除重复数据再创建索引。\n\n## 功能实现\n上面的准备工作做完之后，就可以在主题中实现文章阅读计数功能了。\n\n### 阅读计数\n我的思想是，当hexo页面加载的时候，使用AJAX向[LeanClound]查询当前页面信息，如果不存在，则创建一条新记录；存在则对计数器加1后再更新到数据库。[LeanClound]有javascript sdk，使用官方SDK来执行相关操作。代码（`layout/partial/lc.swig`）如下：\n\n\n```js\n{%- if theme.lc %}\n<!-- LeanClound官方Javascript SDK -->\n<script src=\"https://cdn1.lncld.net/static/js/av-min-1.2.1.js\"></script>\n<script>\n  AV.init({\n    appId : '{{theme.lc.app_id}}',\n    appKey : '{{theme.lc.app_key}}'\n  });\n\n  var lc_config = {\n    pageId : '{{page_uid()}}',\n    url : '{{page.permalink}}',\n    title : '{{page_title()}}'\n  };\n  \n  var lc_table = '{{theme.lc.class}}' || 'Counter';\n\n  (function() {\n\n    var query = new AV.Query(lc_table);\n    query.select(['-ACL']);\n    query.equalTo('pageId', lc_config.pageId);\n    query.first().then(function(data) {\n      if (!data) {\n        insert(data);\n        return;\n      }\n      update(data);\n    });\n\n    function insert(data) {\n      if (!data) {\n        console.log('data is null new object');\n        var M = AV.Object.extend(lc_table);\n        data = new M();\n        data.set('views', 1);\n      }\n      for ( var key in lc_config) {\n        data.set(key, lc_config[key]);\n      }\n      data.save().then(function(data) {\n        console.log('created objectId is ' + data.id);\n      }, function(error) {\n        console.log(\"create object failed\");\n        console.log(error);\n      });\n    }\n\n    function update(data) {\n      data.increment('views', 1);\n      data.save().then(function(data) {\n        console.log(\"update to \" + data.get('views'));\n      }, function(error) {\n        console.log(\"update object failed\");\n        console.log(error);\n      });\n    }\n  })();\n</script>\n{%- endif %}\n```\n\n以上代码，`lc_config`和`lc_table`如果使用的不是[Nova]主题，请根据当前主题做出相应的修改。\n\n### 获取计数\n\n在文章首页，需要获取计数。代码（`layout/post/index_script_lc.swig`）如下：\n\n``` js\n{%- if theme.lc.enable %}\n<script>\n  $(document).ready(function() {\n    // load views count from leanclound\n    // make sure you are created Counter table on leanclound\n    function lc_load_views(selector, options) {\n      var o = options || {};\n      var tkeys = [];\n      $(selector).each(function(i) {\n        var tkey = $(this).data('tkey');\n        tkeys.push(tkey);\n      });\n\n      var query = new AV.Query(lc_table);\n      query.select([ '-ACL', '-createdAt', '-updatedAt', '-url' ]);\n      query.containedIn('pageId', tkeys);\n      query.find().then(function(results) {\n        $(selector).each(function(i) {\n          var tkey = $(this).data('tkey');\n          for (var i = 0; i < results.length; i++) {\n            var t = results[i];\n            if (t.get('pageId') === tkey) {\n              var c = t.get('views') + '';\n              $(this).find(o.p.views).html(c);\n            }\n          }\n        });\n      }, function(error) {\n      });\n    }\n\n    lc_load_views('.card-action', {\n      style : 'hidden-xs',\n      p : {\n        views : '.nova-eye .count'\n      }\n    });\n  });\n</script>\n{%- endif %}\n\n```\n\n以上代码需要在文章列表项底部div中添加`data-tkey`属性，值为`pageId`，非[Nova]主题，需要修改`lc_load_views()`方法的选项或自定义。\n\n## 参考\nJavaScript 数据存储开发指南: https://leancloud.cn/docs/leanstorage_guide-js.html\nLeanClound REST API详解: https://leancloud.cn/docs/rest_api.html\n\n## 文档历史\n\n- 2016-07-29 添加[创建索引](#创建索引)一节 \n\n[Hexo]: https://hexo.io\n[Nova]: http://github.com/Jamling/hexo-theme-nova\n[LeanClound]: http://www.leanclound.cn\n[为NexT主题添加文章阅读量统计功能]: https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud\n","tags":["Hexo","js"],"categories":["Web"]},{"title":"Hexo高级教程之多说评论","url":"/2016/07/28/Web/Hexo-dev-duoshuo/","content":"\n## 引言\n\nHexo的评论系统在国内一般选用多说或友言，在我的博客主题中，早期使用的是友言，在0.1.0版本之后，我在主题中将其替换成了多说。为什么要替换呢？因为友言对于评论数，转发数等支持不好，而且也不开放API。\n\n## 多说配置\n\n### 登录\n直接访问http://duoshuo.com 登录，多说支持QQ，微博等多种方式登录。\n\n### 创建二级域名\n\n登录多说后，先创建一个xxx.duoshuo.com的二级域名，比如我创建的ieclipse.duosuo.com，然后在管理台中做相应的配置。因为都是中文，就不详细说了。特别提一下的是以下几点：\n\n- 域名白名单，在设置中，在域名白名单中添加本地地址，如127.0.0.1，不然有可能本地测试时，发现评论框不显示。\n- 审核规则，最好选择游客发布的评论，不然会有许多非法的评论，比如色情广告。\n- 在个人设置中心，修改主页，如果你出现在别人博客的最近访问中，别人可以点击你的头像进入你的主页。可以提高访问量。\n\n### 获取代码\n在管理台->工具中，可以获取评论，热评文章等代码。按官方的文档来配置即可。注意的是data-thread-key的配置，在你的文章页面中，data-thread-key必须唯一。在列表页，可以设置相同的data-thread-key，以合并评论。\n\n## 多说组件\n\n### 获取评论数\n在首页，获取文章的评论数等信息。通过AJAX调用多说API来实现。注意，这里有个坑，就是ajax的跨域问题。使用jsonp，必须指定callback。代码（`layout/post/index_script_ds.swig`）如下：\n\n```\n  // load comments/likes count \n  function ds_load_comments(selector, options) {\n    var o = options || {};\n\n    var tkeys;\n    $(selector).each(function(i) {\n      var tkey = $(this).data('tkey');\n      if (tkeys) {\n        tkeys += ',' + tkey;\n      }\n      else {\n        tkeys = tkey;\n      }\n    });\n    var url = \"http://api.duoshuo.com/threads/counts.jsonp\";\n    var label = {\n\n    };\n    $.ajax({\n      url : url,\n      dataType : \"jsonp\",\n      type : 'get',\n      data : {\n        short_name : ds_short_name,\n        threads : tkeys\n      },\n      jsonp : 'callback',\n      success : function(data) {\n        var r = data.response;\n        $(selector).each(function(i) {\n          var tkey = $(this).data('tkey');\n          $(this).data(\"tid\", r[tkey].thread_id);\n          if (o.p) {\n            for ( var key in o.p) {\n              var c = '' + r[tkey][key] + '';\n              $(this).find(o.p[key]).html(c);\n            }\n          }\n        });\n      }\n    });//end ajax;\n  }\n```\n\n通过在主题中给文章html标签添加data-tkey属性，然后通过ajax请求多说API，将指定thread-key的文章信息返回。当请求成功之后，再将likes, comments等数目更新到相应的html中。\n\n### 获取最近访客\n\n官方有示例，稍做修改即可使用，代码（`layout/post/widget_ds_recent_visitors.swig`）如下：\n```\n    <div class=\"panel panel-primary\">\n      <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">{{ __('widget.recent_visitors') }}</h3>\n      </div>\n      <ul class=\"ds-recent-visitors\" data-num-items=\"12\"><li class=\"text-center\">{{__('ajax.loading')}}</li></ul>\n    </div>\n```\n\n我的博客稍微修改了一下css，点击头像时，可以360旋转头像。\n\n### 获取热评文章\n前面的组件，在多说官网文档中心都可以找到示例。本着爱学习，爱折腾，爱装逼的精神，我当然不会仅限于使用别人开发好的组件，怎么也得自己亲自动手，通过多说API来实现一个组件吧。\n\nhtml代码（`layout/post/widget_ds_hot.swig`）如下：\n``` htmlbars\n    <div class=\"panel panel-primary\">\n      <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">{{ _p('widget.hot', 2) }}</h3>\n      </div>\n      <div  class=\"list-group\" id=\"top-threads\" data-range=\"weekly\" data-num-items=\"5\">\n        <div class=\"text-center\">{{__('ajax.loading')}}</div>\n      </div>\n    </div>\n```\n跟官方的差不多，只不过，class不是`ds-top-threads`，如果使用官方的`ds-top-threads`class那么官方的js脚本会运行，然后生成热评文章列表。由于官方生成的html不好修改样式。所以，我使用自己的脚本来生成html，js代码（`layout/post/widget_ds_hot.swig`）如下：\n\n```js\n      var ds_top_url = 'http://api.duoshuo.com/sites/listTopThreads.jsonp';\n      var ds_top_dom = $('#top-threads');\n      var ds_top_param = ds_top_dom.data();\n      ds_top_param.short_name = '{{theme.comments.ds.short_name}}';\n      $.ajax({\n        url : ds_top_url,\n        dataType : \"jsonp\",\n        type : 'get',\n        data : ds_top_param,\n        jsonp : 'callback',\n        success : function(data) {\n          if (data.code==0) {\n            var arr = data.response;\n            if (arr.length == 0) {\n              ds_top_dom.html('{{_p(\"widget.hot\", 0)}}');  \n            } else {\n              ds_top_dom.html('');  \n              for(var i =0; i<arr.length;i++){\n                var a = $('<a></a>').text(arr[i].title).attr('href', arr[i].url).addClass('list-group-item');\n                ds_top_dom.append(a);\n              }\n            }\n          }\n        },\n        error: function (xhr, msg, e) {\n          ds_top_dom.html('<div class=\"text-center\">{{__(\"ajax.error\")}}</div>');\n        }\n      });\n```\n组件初始化时，显示*加载中...*，接口调用成功之后，生成热评文件列表html，接口调用失败，则显示*加载失败*。\n\n\n## 参考\n多说评论: http://duoshuo.com\nNova主题: http://github.com/Jamling/hexo-theme-nova\n\n[Hexo]: https://hexo.io\n[Nova]: http://github.com/Jamling/hexo-theme-nova\n[LeanClound]: http://www.leanclound.cn\n","tags":["Hexo","js"],"categories":["Web"]},{"title":"Hexo带过滤功能的首页插件","url":"/2016/07/21/Web/hexo-generator-index2/","content":"## 简介\n\n带过滤功能的[Hexo]首页生成器插件。在官方的首页生成器基础上添加了过滤指定分类/标签的功能。比如，在首页只显示指定分类下面的文章列表。\n\n[English](https://github.com/Jamling/hexo-generator-index2/blob/master/README.md)\n\n## 安装\n\n``` bash\n$ npm install hexo-generator-index2 --save\n$ npm uninstall hexo-generator-index --save\n```\n\n## 配置\n\n``` yaml\nindex_generator:\n  per_page: 10\n  order_by: -date\n  include:\n    - category Web # 只包含Web分类下的文章\n  exclude:\n    - tag Hexo # 不包含标签为Hexo的文章\n\n```\n\n- **per_page**: Posts displayed per page. (0 = disable pagination)\n- **order_by**: Posts order. (Order by date descending by default)\n- **include**: Posts filter include option\n- **exclude**: Posts filter exclude option\n\n除了include和exclude，其它如<var>per_page</var>和<var>order_by</var>都是原有的官方首页生成器选项，不必更改。\n\nInclude/exclude 选项格式为`属性 值`（注意，属性与值中间有个英文的空格），可选的属性有：\n\n- category: 文章分类\n- tag: 文章标签\n- path: 文章源路径\n\n\n## 传送门\n\nhttps://github.com/Jamling/hexo-generator-index2\n\n[Hexo]: http://hexo.io/\n","tags":["Hexo","Node.js"],"categories":["Web"]},{"title":"Hexo github页面生成插件","url":"/2016/07/21/Web/hexo-generator-github/","content":"\n## 痛点\n从2013年开始，本人开始活跃于github，以前托管于sourceforge、svn spot和oschina的开源项目，陆续迁移到了github。此前，我一直使用的是wiki系统来维护相关开源项目的文档及下载等。那时，Markdown还没有现在这么流行，在sourceforge等网站，我几乎不放文档。但迁移到github后，将之前的wiki页面渐渐转成了Markdown页面。在迁移到github之后，我比较重视文档，源代码的修改，有可能需要更新文档。此前wiki网站因为访问太慢，空间也不是特别稳定，在今年终于决定放弃维护，转而使用github pages功能来托管这些项目文档。\n\ngithub pages是一个静态空间，不支持php等动态语言。虽然如此，不过也有逼格高的玩法。当初曾想过使用jekyll来建站，不过因为工作太忙，没有时间学习。后来无意之中接触了hexo，hexo可以完全兼容github markdown，觉得hexo更适合我一些。于是试用了若干plugin和theme，对其blog功能还是非常满意，但是如果要展现项目文档，还是显得捉襟见肘。我不可能每次更新github后，都手动复制一份相关的文档再更新到博客站点。如何自动抓取github相关的页面等内容成了一个非常大的痛点。\n\n<!-- more -->\n\n## 需求\n这其实是一个hexo页面与github页面同步的问题。我期望的是，在github项目变更之后，比如README变更了，releases添加了，那么对应的hexo页面可以自动更新，而无需人工同步。\n\n## 尝试\n\n在尝试若干主题+插件都无法满足我的需求之后，我决定自己开发一个符合我需求的主题。主题的开发还是蛮曲折的，对于项目页这块，我尝试了不少的方案\n\n- 前端JS实现，在html页面使用ajax请求github api，然后填充内容。本来github访问就慢，多个ajax请求就更慢了，而且github还有limit访问限制，未加token的访问，一天也就60次。访问60次之后，就无法再访问了。这肯定不行。\n\n- 同步实现，在生成或访问时，使用同步请求将github内容同步输出为html，node.js是异步的，所以特地找了几个同步网络请求请求库，比如ajax同步请求，urllib-sync等。最后，使用urllib-sync终于实现了同步请求，但是它仍然有缺点，一是生成时，仍然会消耗github api limit，二是生成速度太慢，三是不稳定，经常timeout。四是如果生成过程中，有一次同步请求失败，必须重新全部生成。后面我添加了项目页面越来越多，根本就用不下去了。\n\n## 终级方案\n在尝试过多个方案并失败之后，终于痛定思痛，还是要写一个插件，然后仔细研究了hexo源码，发现生成器插件比较适合。它在`hexo server`和`hexo generate`时，生成器都会被调用，那么我只需写一个生成器，用于抓取github api，然后缓存起来，渲染时，直接从缓存中取github response渲染。\n\n说干就干，在生成器中首先对站点的所有文章查找其是否带`gh` front-matter，如果存在，则属于项目页，判断缓存是否存在，存在则跳过生成\n```js\n  pages.forEach(function(item) {\n    if (item.gh) {\n      var path = pathFn.join(cacheDir, item.path);\n      if (!replace && fs.existsSync(path)) {\n        if (github.debug) _self.log.debug(path + \" exists skip generate\");\n        return;\n      }\n      _self.log.info(\"generating github \" + path);\n      var dir = pathFn.dirname(path);\n      mkdirsSync(dir);\n```\n\n生成具体规则如下：\n```js\n      var gh = gh_opt.call(_self, item);\n      if (gh.type === 'get_contents') {\n        github.repos.getContent({\n          user : gh.user,\n          repo : gh.repo,\n          ref : gh.ref ? gh.ref : 'master',\n          path : gh.path ? gh.path : 'README.md'\n        }, function(err, res) {\n          // var url = util.format('repos/%s/%s/contents/%s', user, name, path);\n          if (res && res.content) {\n            var md = new Buffer(res.content, res.encoding).toString();\n            // var md_func = hs['markdown']; // Why generator can't call helper\n            // function?\n            fs.writeFileSync(path, md);\n          }\n          else {\n            _self.log.w(\"generate github \" + path + \" failed\");\n          }\n        });\n      }\n      else if (gh.type === 'get_releases') {\n      ...\n      }\n      ...\n```\n\n根据不同的`gh.type`来调用不同的github api，在这里，使用了node.js github第三方库来简化github操作。比如获取内容，将github上的markdown文件的内容写入到缓存中。所以此种方式，只要缓存存在，则不用重复请求github，不必担心github api limit限制，而且缓存是github原始数据，怎么展示，完全取决于主题。不像某些插件，生成的结果包含html，不好修改。\n\n在主题模板中，使用辅助函数来操作github。比如下面的`gh_contents`，将缓存中的markdown内容转化为html。\n\n```js\nfunction gh_contents(options) {\n  var o = options || {}\n  var user = o.hasOwnProperty('user') ? o.user : this.config.github.user;\n  var name = o.hasOwnProperty('repo') ? o.repo : null;\n  var path = o.hasOwnProperty('path') ? o.path : 'README.md';\n  var ref = o.hasOwnProperty('ref') ? o.ref : 'master';\n\n  if (name === undefined) {\n    return '';\n  }\n\n  var cache = (this.gh_read_cache(this.page));\n  if (cache) {\n    return this.markdown(cache.toString());\n  }\n```\n转化后的html可以做为page.content，直接显示。\n\n```htmlbars\n  {%- if gh.type === 'get_contents' %} \n    {% set page.content = gh_contents(gh) %}\n    {{ partial('project/contents', {} )}}\n```\n```htmlbars\n<div class=\"container-fluid\">\n<div class=\"row\">\n  <div class=\"{{theme.layout.p.sidebar}}\" role=\"navigation\">\n    {{ partial('sidebar', {}) }}\n  </div>\n  <div class=\"{{theme.layout.p.main}}\">\n    {{ partial('../page/article') }}\n  </div>\n  <!-- aside -->\n  <div class=\"{{theme.layout.p.toc}}\">\n  {%- if page_toc() %}\n  {{ partial('../partial/toc', {style: 'col m4 l3'}) }}\n  {%- endif %}\n  </div>\n</div>\n</div>\n```\n\n如上所示，将github上的文件内容直接输出到hexo页面。\n\n## 优化\n为保证新建一个github相关的页面而不用重新启动hexo server，仍然需要保留github同步请求，当缓存不存在时，则执行同步请求api，并且将结果保存到缓存中。\n```js\n  var url = util.format('repos/%s/%s/contents/%s', user, name, path);\n  console.log(\"no cache, and try load from : \" + url);\n  var repo = gh.reqSync(url, {\n    data : {\n      'ref' : ref\n    }\n  });\n  if (repo && repo.content) {\n    var md = new Buffer(repo.content, repo.encoding).toString();\n    var content = this.markdown(md);\n    this.gh_write_cache(this.gh_cache_dir(this.page, md));\n    return content;\n  }\n```\n\n为加快生成速度，本插件还提供了控制台命令方式来生成。\n```bash\n$ hexo github [-r --replace]\n```\n\n## 总结\n使用[hexo-generator-github]可以将github的内容抓取到本地，配合主题来渲染输出。这样就不必手动修改hexo的页面了。比较方便。但是也有不足的地方，比如，为保证github上的markdown在hexo站点正常显示，要求markdown中的链接和图片等外部资源需要使用绝对路径。另外，如果要更新hexo页面，需要将github缓存删除或者通过控制台命令`$ hexo github -r`，这样才会重新生成hexo页面。\n\n\n## 参考\nhexo api: https://hexo.io/zh-cn/api/\nhexo-generator-github: http://github.com/Jamling/hexo-generator-github\n\n[hexo api]: https://hexo.io/zh-cn/api/\n[hexo]: https://hexo.io\n[hexo-generator-index2]: http://github.com/Jamling/hexo-generator-index2\n[hexo-generator-github]: http://github.com/Jamling/hexo-generator-github\n[hexo-generator-i18n]: http://github.com/Jamling/hexo-generator-i18n\n","tags":["Hexo","Node.js"],"categories":["Web"]},{"title":"Hexo高级教程之代码高亮","url":"/2016/07/18/Web/Hexo-dev-highlight/","content":"\n## Hexo高亮\n\nhexo已实现代码高亮，代码封装在hexo-util插件中，使用的是[highlight.js]，通过`include_code`tag标签来使用，功能已经很强大了，而且自带行号显示，可以满足大多数博主的需求了。但是它仍然存在一些局限性，比如在[Nova]主题中，有些语言不支持，无法高亮，而且界面也比较丑，所以个人还是倾向于自由使用[hightlight.js]来高亮代码，使用起来比较灵活，还能扩展一些功能，但是[highlight.js]默认是不带行号的。为此，也是遇到了不少坑。后来在某歪果仁的博客中找到一个行号解决方案，在其基础上，终于实现了一个较为理想的代码高亮方案。\n\n如果想和我一样爱折腾，请继续阅读本文，再次声明，本系列需要一定的前端基础知识。\n\n## 加载highlight.js\n使用[highlight.js]非常简单，只需以下简单的几步。\n首先，在博客站点根目录的<var>_config.yml</var>中，将<var>highlight.enable</var>设置为<code>flase</code>以关闭自带的高亮方案。\n***注：关闭自带高亮方案后，需hexo clean***\n\n其次，引入[highlight.js]的css及js（推荐在主题模板中作为全局css和js引入，引入的位置在`<head></head>`之间）。\n\n``` html\n<link rel=\"stylesheet\" href=\"//cdn.bootcss.com/highlight.js/9.2.0/styles/github.min.css\">\n<script src=\"//cdn.bootcss.com/highlight.js/9.2.0/highlight.min.js\"></script>\n```\n[highlight.js]有许多代码风格，博主可以根据博客站点主题风格，选择合适的代码风格，我使用的是github风格。\n\n然后，在文档加载完毕之后初始化（推荐在`</body>`之前的`<script></script>`中引入）\n\n``` js \n  // highlight\n  hljs.initHighlightingOnLoad();\n```\n\n如此，便可以测试及查看代码高亮结果了。\n\n## 添加行号\n添加行号的大致过程是先将代码部分按行切割，动态生成行号。然后使用相对布局，将行号显示在代码行前。具体代码如下：\n\n```js\n  $('pre code').each(function(i, block) {\n    //hljs.highlightBlock(block);\n    var lines = $(this).text().split('\\n').length - 1;\n    var $numbering = $('<ul/>').addClass('pre-numbering');\n    $(this)\n      .addClass('has-numbering')\n      .parent()\n      .append($numbering);\n    for(i=1;i<=lines;i++){\n      $numbering.append($('<li/>').text(i));\n    }\n  });\n```\n\n这样`<code>`标签多了一个`has-numbering`的样式，在`<pre>`结节下，动态添加了一个class为`pre-numbering`的`ul`列表来显示行号。CSS代码如下：\n\n```css\ncode.has-numbering {\n  margin-left: 10px;\n  word-wrap: normal;\n  word-break: keep-all;\n  white-space: pre;\n}\n\n.pre-numbering {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 20px;\n  height: 100%;\n  padding: .5em 0.2em .5em 0;\n  border-right: 1px solid #C3CCD0;\n  border-radius: 3px 0 0 3px;\n  background-color: #EEE;\n  text-align: right;\n  font-size: 1.0em;\n  color: #AAA;\n  list-style: none;\n}\n```\n\n***注，具体的样式需根据当前主题做出适当的修改***\n\n## 处理滚动\n\n添加了行号，为使行号与代码行不错乱，所以要求代码块在横向允许滚动，在处理滚动前，先了解以下三个文本换行的css属性。\n\n- `white-space` \n \n值 | 描述\n--- | --- \nnormal | 默认。空白会被浏览器忽略。\npre | 空白会被浏览器保留。其行为方式类似 HTML 中的 `pre` 标签。\nnowrap | 文本不会换行，文本会在在同一行上继续，直到遇到 `<br>` 标签为止。\npre-wrap |  保留空白符序列，但是正常地进行换行。\npre-line | 合并空白符序列，但是保留换行符。\ninherit | 规定应该从父元素继承 white-space 属性的值。\n\n- `word-wrap` \n \n值 | 描述\n--- | --- \nnormal | 只在允许的断字点换行（浏览器保持默认处理）。\nbreak-word | 在长单词或 URL 地址内部进行换行。\n\n- `word-break` \n \n值 | 描述\n--- | --- \nnormal | 使用浏览器默认的换行规则。\nbreak-all | 允许在单词内换行。\nkeep-all |  只能在半角空格或连字符处换行。\n\n除了以上三个属性，还有一个text-wrap属性，不过，大部分浏览器都不支持。所以，仅供参考。\n~~text-wrap~~\n\n值 | 描述\n--- | --- \nnormal | 只在允许的换行点进行换行。\nnone | 不换行。元素无法容纳的文本会溢出。\nunrestricted | 在任意两个字符间换行。\nsuppress | 压缩元素中的换行。浏览器只在行中没有其他有效换行点时进行换行。\n\n所以，显示行号的`<code>`标签，还需加上以下css规则。\n```css\noverflow-x: auto;\noverflow-y: auto;\nword-break: keep-all;\nwhite-space: pre;\n```  \n\n## 支持响应式\n由于在小屏幕上，尤其是手机浏览器，横向滚动并不好操作，所以，须优化，让代码允许断行，这样，行号就不能显示了。\n\n```css\n@media (max-width: 767px) {\n  .pre-numbering {\n    display: none;\n  }\n  .has-numbering {\n    margin-left: -10px !important;\n    word-wrap: break-world !important;\n    white-space: pre-wrap !important;\n  }\n}\n```\n\n## 支持更多的代码语言\n\n[highlight.js]默认支持大部分主流程序语言的高亮，但是也有小部分语言是不支持的，比如[Excel VBA基础实例教程]中贴了不少VB代码，需要额外加载[highlight.js]的VBScript.js才能高亮，只需在md源文件内容最前方引入vbscript.js即可。如下所示：\n\n```html\n<script src=\"http://cdn.bootcss.com/highlight.js/9.1.0/languages/vbscript.min.js\" ></script>\n\n# VBA简介\n## VBA\n```\n\n## html高亮优化\n使用[highlight.js]对html代码高亮，有时发现竟然无法高亮，直接输出了html，尤其是贴hexo主题模板代码时，还会导致页面无法被hexo解析。如果遇到这种问题，需要使用`htmlbars`来标识代码语言，然后代码中的模板控制语句，需要优化，比如swig模板，原来的\n{% raw %}\n``` htmlbars\n{% if ... %}\n```\n{% endraw %}\n\n要改为\n{% raw %}\n```\n{%- if ... %}\n```\n{% endraw %}\n\n[highlight.js]: https://highlightjs.org/\n[hexo]: https://hexo.io\n[Nova]: http://github.com/Jamling/hexo-theme-nova\n[Excel VBA基础实例教程]: http://www.ieclipse.cn/2016/05/13/tech-vba-guide/\n","tags":["Hexo","js"],"categories":["Web"]},{"title":"Hexo高级教程之插件开发","url":"/2016/07/18/Web/Hexo-dev-plugin/","content":"\n## 引言\n\n{% blockquote hexo.io https://hexo.io/zh-cn/docs/plugins.html 插件  %}\n\nHexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：\n\n脚本（Scripts）\n如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 scripts 文件夹，在启动时就会自动载入。\n\n插件（Packages）\n如果您的代码较复杂，或是您想要发布到 NPM 上，建议您编写插件。首先，在 node_modules 文件夹中建立文件夹，文件夹名称开头必须为 hexo-，如此一来 Hexo 才会在启动时载入否则 Hexo 将会忽略它。\n\n{% endblockquote %}\n\n<!-- more -->\n\n以上引用来自hexo官方文档。所以，辅助函数也是hexo插件中的一种。除了辅助函数，还有以下类型的插件：\n\n- 控制台 (Console)\n- 部署器 (Deployer)\n- 过滤器 (Filter)\n- 生成器 (Generator)\n- 迁移器 (Migrator)\n- 处理器 (Processor)\n- 渲染引擎 (Renderer)\n- 标签 (Tag)\n\n## Hexo插件加载流程\n首先上代码（hexo/lib/index.js）：\n```js\nHexo.prototype.init = function() {\n  var self = this;\n\n  this.log.debug('Hexo version: %s', chalk.magenta(this.version));\n  this.log.debug('Working directory: %s', chalk.magenta(tildify(this.base_dir)));\n\n  // Load internal plugins\n  require('../plugins/console')(this);\n  require('../plugins/filter')(this);\n  require('../plugins/generator')(this);\n  require('../plugins/helper')(this);\n  require('../plugins/processor')(this);\n  require('../plugins/renderer')(this);\n  require('../plugins/tag')(this);\n\n  // Load config\n  return Promise.each([\n    'update_package', // Update package.json\n    'load_config', // Load config\n    'load_plugins' // Load external plugins & scripts\n  ], function(name) {\n    return require('./' + name)(self);\n  }).then(function() {\n    return self.execFilter('after_init', null, {context: self});\n  }).then(function() {\n    // Ready to go!\n    self.emit('ready');\n  });\n};\n```\n从上面的代码可知，在hexo初始化时会加载插件，加载插件写在`load_plugins.js`中。它有两个主要函数\n\n- loadModules，会去加载第三方的插件，包括hexo自带的插件\n- loadScripts，会去加载脚本类的插件，包括主题`scripts`下的脚本\n\n无论加载哪种插件，最后都是通过`index.js`中的`loadPlugin`函数来加载。\n\n有些插件（生成器，处理器，过滤器，渲染引擎）如果存在编译错误，会导致hexo无法启动并且输出错误日志。插件加载完成之后，则根据插件类型，分别放到对应的store中（可以视为数组）。\n\n## 插件类型选择\n根据功能，选择合适的插件类型，比如[hexo-generator-github]插件，主要是生成一些与github相关的页面，比如README.md。笔者曾经不懂hexo插件开发，尝试过使用前端js，tag插件，helper插件等实现方式。但均不理想，存在各方面的问题。后来静下心里，耐心学习hexo源码之后，选择了做为generator插件，在hexo生成时，将github api缓存起来。然后再渲染。\n\n不同的类型的插件，在使用上是不一样的。如辅助函数插件，可以在主题模板中使用；标签插件，则是在源文件中使用，在渲染时，再实时转化为html输出。\n\n## 最简单的插件\n下面，我们通过实例来写一个最简单的Hello Plugin插件。在`scripts`目录下新建一个hello.js文件，然后键入以下内容：\n```js\nhexo.extend.helper.register('hello_plugin', function(page){\n    this.log(\"Hello Plugin\");\n    return \"hello plugin\";\n});\n```\n\n重启后，调用此辅助函数，则会在命令窗口显示Hello Plugin，并且在前台界面上显示hello plugin。\n\n如果插件功能较为简单，则不妨将其写为script插件。一个文件，可以写多个不同类型的插件。[hexo-generator-i18n]国际化插件早期也是写在script中的，后来为了更多的人能够使用，将其发布到NPM，才写为了package插件。\n\n## Package插件\n### npm init\n使用`npm init`来新建本地包。然后根据提示，依次输入name, version, description等信息，新建完成后会生成一个`package.json`文件。\n```yaml\n{\n  \"name\": \"test-plugin\",\n  \"version\": \"0.0.1\",\n  \"description\": \"test\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"keywords\": []\n}\n```\n\n当然也可以手动新建`package.json`文件，并编辑，其中name和version字段是必须的。详细请参考npm文档https://docs.npmjs.com/getting-started/using-a-package.json。\n\n### 编写插件逻辑\n确定好插件要实现的功能，再根据[hexo api]编写相应的逻辑代码。下面以[hexo-generator-index2]为例。\n\n之前，有人在群里问，如何在hexo博客首页，显示指定分类下文章。要实现这个功能，可以修改官方的hexo-generator-index插件。\n```js\nmodule.exports = function(locals) {\n  var config = this.config;\n  var posts = locals.posts.sort(config.index_generator.order_by);\n  var paginationDir = config.pagination_dir || 'page';\n\n  return pagination('', posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n```\n在对posts分页之前，将指定分类之外的文章过滤掉即可。如下所示：\n```js\n  posts = posts.filter(function(post){\n    var ret = false;\n    post.categories.forEach(function(item, i){\n      if (item.name == '软件技术'){\n        ret = true;\n      }\n    });\n    return ret;\n  });\n```\n但这种修改，只在当前的机器上有效。在此基础上，对此插件稍做修改，指定的分类，可以通过配置来指定。\n```js\nvar funcs = [];\nfuncs['category'] = function(post, value){\n    var ret = false;\n    post.categories.forEach(function(item, i){\n      if (item.name == value){\n        ret = true;return;\n      }\n    });\n    return ret;\n};\n```\n除了category过滤，[hexo-generator-index2]还有tag和path过滤。\n\n注：hexo启动时，会调用所有的generaotr插件。\n\n### 插件发布\n在发布到npm之前，先去npmjs.com注册账号并激活，然后在本地`$ npm login`登录。登录成功之后，就可以发布到npm了。\n```bash\n$ npm publish\n```\n\n发布成功之后，就可以将插件提交到hexo plugins列表了。\n\n如果对插件进行了修改，刚可以通过`npm version`来更新版本（注如使用了git做scm，那么，它会自动生成一个新tag并提交）。\n\n## 参考\nhexo api: https://hexo.io/zh-cn/api/\nhexo docs: https://hexo.io/zh-cn/docs/plugins.html\n\n[hexo api]: https://hexo.io/zh-cn/api/\n[hexo]: https://hexo.io\n[hexo-generator-index2]: http://github.com/Jamling/hexo-generator-index2\n[hexo-generator-github]: http://github.com/Jamling/hexo-generator-github\n[hexo-generator-i18n]: http://github.com/Jamling/hexo-generator-i18n\n","tags":["Hexo","Node.js"],"categories":["Web"]},{"title":"Hexo高级教程之主题开发","url":"/2016/07/14/Web/Hexo-dev-theme/","content":"\n## 引言\n\n有感于[hexo]高级教程实在太少，当初本人在开发[Nova]主题时，曾遇到过不少坑，为填这些坑，较为深入地学习了[hexo]源码，又自学了不少[node.js]知识，才总算将这些坑基本填完。本着人人为我，我为人人的分享精神，特开一[hexo]高级教程专题，希望广大[hexo]爱好者拍砖~\n\n本系列的定位为高级教程，所以要求读者具备以下知识或技能：\n\n- 前端技术：前端基础知识不用说了，必须要具备的比如HTML，CSS，Javascript，Node.js。如果知识储备不足，推荐去[W3C School]好好学习。\n- [hexo模板]：[hexo]中的layout模板都是使用某个具体的模板引擎写的，模板引擎有`swig`,`ejs`，`jade`等。layout可以视为MVC模式中的`View`层，用于负责具体页面的展示。\n- [hexo变量]：[hexo]内置了不少常用的变量，例如<var>site.posts</var>是站点所有的博客文章， <var>config</var>为[hexo]博客设置，<var>page</var>为[hexo]页面对象。[hexo变量]可以视为MVC模式中的`Model`层，负责给`View`提供要展示的数据。\n- [辅助函数]：hexo中内置了不少[辅助函数]，这些辅助函数可以在模板中直接使用，用于快速地插入要展现的变量内容。辅助函数与MVC中的Controller有点类似，负责数据`Model`的获取以及如何在`View`中展示。\n- Hexo基础知识：基础知识可以自行度娘或谷歌。PS：个人建议还是看官方文档，有简体中文版本，遗憾的是，官方网站在国内访问有点慢☺。\n\n## 主题修改\n在讲到主题开发之前，不得不讲一下主题修改。目前[hexo]已有许多成熟的主题。但是未必完全符合博主的要求。灵活性好一些的主题，可能通过修改主题配置可以达到博主的目的，有些则需要修改主题模板或CSS甚至是辅助函数。不过与开发全新的主题相比，工作量还是少了许多。个人建议，如无必要，没有必要开发全新的主题。毕竟博客网站重的是内容，而不是外观。大多数主题，都具备了博客该有的功能，就不必像我如此折腾。当然做为极客的人们则另当别论。\n\n### 主题配置修改\n这部分相对简单，因为主题一般有相关的文档来告诉你如何修改。\n\n以主题[Nova]为例，[Nova]主题在菜单配置上，有项导航菜单叫做捐赠墙，捐赠墙是http://www.ieclipse.cn 特有的模块，对于其它博客站点并不适用，那么，只需要将它删除或使用#将其注释即可。这样，它就不会出现在菜单栏中了。\n\n### 主题风格修改\n个人推荐在已有主题样式的基础上，新建一个新的CSS文件，并做为引入样式的最后一个。因为CSS按加载的顺序，如果发现有相同选择器的样式，则后面的CSS规则会合并或覆盖原有的规则。举个例子，原来主题中的链接(a标签)颜色为蓝色（`#00f`），可以重写链接（a标签）的CSS。\n\n原来的css：\n```css \na {\ncolor: #00f;\n}\n```\n追加的css：\n```css\na {\ncolor: #f96;\ntext-decoration: none;\n}\n```\ncolor规则会覆盖原来的color规则，而text-decoration则会作为新规则引入。CSS查看器，基本上浏览器都自带此功能。调试相对来说比较简单。\n\n### 主题模板修改\n在此，还是以[Nova]主题为例，如果站点不考虑国际化，只做单语言站点，则没有必要保留语言选择功能。遗憾的是，想要不显示，则不能通过修改主题配置来实现，需要修改主题的模板文件。[Nova]主题的导航栏菜单位于`layout/partial/header.swig`中，使用记事本之类的编辑打开它，将\n\n```htmlbars\n        <ul class=\"nav navbar-nav navbar-right\">\n          <li class=\"dropdown\">\n            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">{{__('page.language')}} <span class=\"caret\"></span></a>\n            <ul class=\"dropdown-menu\">\n              {%- for lang in get_langs() %}\n              <li><a href=\"{{switch_lang(lang)}}\">{{ lang_name(lang) }}</a></li>\n              {%- endfor %}\n            </ul>\n          </li>\n        </ul>\n```\n这一段html删除或注释即可\n\n### 辅助函数修改\n以官方的辅助函数list_archives为例，虽然此函数可以设置class参数，不过它的内部在生成ul和li时，都使用了动态的class，自动给class加了后缀。如下所示：\n```js\nif (style === 'list') {\n    result += '<ul class=\"' + className + '-list\">';\n\n    for (i = 0, len = data.length; i < len; i++) {\n      item = data[i];\n\n      result += '<li class=\"' + className + '-list-item\">';\n\n      result += '<a class=\"' + className + '-list-link\" href=\"' + link(item) + '\">';\n```\n这样css中必须使用.xxx-list作为ul，.xxx-list-item为作li的样式，本着精减html的原则，修改后的代码为：\n```js\n  if (style === 'list'){\n    result += '<div class=\"' + className + '\">';\n\n    for (i = 0, len = data.length; i < len; i++){\n      item = data[i];\n\n      result += '<a class=\"' + className + '-item\" href=\"' + link(item) + '\">';\n      result += transform ? transform(item.name) : item.name;\n```\n使用div和a来简化布局。\n\n## 主题开发\n有了前面的主题修改经验，相信博主们对hexo主题已经有一定的了解了。在这里，我把主题开发分为两种\n1. 主题迁移，除了hexo之外，还有许多其它的优秀博客系统，比如Wordpress，它们也有自己的主题。其中不乏一些优秀的主题。hexo中有不少主题就是迁移自其它博客系统的优秀主题。此种方式，可以最大方式的利用成熟主题的布局和样式甚至模板。比如，主页博客文章列表，原有的主题可能是将数据库查询结果集遍历输出为html，而迁移之后的主题，则需要对site.posts遍历并输出为html。\n\n2. 全新开发，全新开发是本文介绍的重点，但是个人并不推荐，除非具备一定的设计能力，它需要从零开始对博客进行设计，比如排版，布局，功能等等。本人开发[Nova]主题，主要是因为目前的主题+插件，不能解决我github项目文档页的展示问题，其次，也为能够更好更深入地学习前端技术☺。\n\n### 主题设计\n以[Nova]为例，我将博客站点分为3模块\n\n1. 博客文章\n与其它主题的博客文章一样，博客文章有：首页、标签、分类、归档、分页等基本功能模块。\n在版面上，它是一个2栏布局，主栏显示文章列表或文章详情，侧边栏用于放置窗口小部件或者文章目录。\n\n2. 单页\n普通单页也采用主－侧边栏布局，主栏显示文章详情，侧边栏显示文章目录。 对于特别的单页，则使用单独的layout。\n \n3. 项目\n项目模块作为[Nova]主题一大特色，采用三栏布局方式，左侧边栏显示项目导航，主栏显示项目文档内容，右侧边栏则放置文档目录。为处理项目相关的页面，[Nova]引入一个名为`project`的layout。\n\n### 主题模板\n在使用主题模板之前，先确定一种模板引擎，[Nova]主题使用的是`swig`模板，这也是hexo默认的渲染模板。\n\n所有的主题模板文件须放在主题`layout`目录下，其中index模板与layout模板必不可少。不然运行会报错。在layout模板，可以将html主体结构写入其中。\n```htmlbars\n<!DOCTYPE html>\n<html lang=\"{{ page.lang }}\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>{{ head_title() }}</title>\n  <!--设置浏览器兼容模式 -->\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge,chrome=1\">\n  <!--支持响应式 -->\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <!-- 网站关键字，影响SEO -->\n  <meta name=\"keywords\" content=\"{{ head_keywords() }}\">\n  <!--网站描述，影响SEO -->\n  <meta name=\"description\" content=\"{{ head_description() }}\"> \n  <!-- Canonical links -->\n  <link rel=\"canonical\" href=\"{{ url }}\">\n  <!--加载全局js或css -->\n  {{ head_jscss() }}\n  <!-- RSS -->\n  {{ feed_tag('atom.xml') }}\n</head>\n<!--Html主体 -->\n<body>\n  <!-- header -->\n  {{ partial('partial/header') }}\n  <!-- main -->\n  {{ body }}\n  <!-- footer -->\n  {{ partial('partial/footer') }}\n  <!-- fixed action bar -->\n  {{ partial('partial/fab') }}\n  <!-- after footer, 第三方脚本放在最后，以免影响网页内容加载 -->\n    {{ js('js/script.js')}}\n    {{ partial('partial/baidu_analytics') }}\n    {{ partial('partial/jiathis_share') }}\n</body>\n</html>\n```\n\nindex模板作为博客首页的渲染页，其实也是属于post模板的一种。除了layout模板外，我将其它的模板都做了归类，跟博客文章相关的，都在post子目录中；跟单页相关的放置在page子目录中；跟项目相关的，都放置在project子目录中。详细介绍，请访问[nova layout]\n\n下面详细介绍博客文章中的首页和详情页模板\n\n#### 文章首页\n首页即文章列表页，主栏主要显示文章列表。文章列表项显示标题，日期，分类，标签，文章摘要等信息及分享，评论等操作项，核心代码如下：\n```\n<main> \n{%- for post in page.posts %}\n<div class=\"card hoverable\">\n  <div class=\"card-content\">\n    <h3 class=\"card-title\">\n      <a href=\"{{ url_for_lang(post.path) }}\" class=\"article-title\">{{ post.title }}</a>\n    </h3>\n    <div class=\"divider\"></div>\n    <div class=\"section post-header\">\n      <!-- sub element must be span -->\n      <span class=\"icon nova-calendar\">{{ time_tag(post.date) }}</span>\n      {{ post_cates(post) }} {{ post_tags(post) }}\n    </div>\n    <div class=\"excerpt\">{{ page_excerpt(post) }}</div>\n  </div>\n  <div class=\"divider\"></div>\n  <div class=\"card-action\">\n    <!--  评论，分享，阅读全文等链接 -->\n  </div>\n</div>\n{%- endfor %}\n<nav>{{ nova_paginator({total:page.total, class:'pagination'}) }}</nav>\n</main>\n```\n输出结果预览：\n{% raw %}\n<main>\n          {%- for post in page.posts %}\n          <div class=\"card hoverable\">\n            <div class=\"card-content\">\n              <span class=\"h3 card-title\"><a href=\"{{ url_for_lang(post.path) }}\" class=\"article-title\">{{ post.title }}</a></span>\n              <div class=\"divider\"></div>\n              <div class=\"section post-header\">\n                <!-- sub element must be span -->\n                <span class=\"icon nova-calendar\">{{ time_tag(post.date) }}</span>\n                {{ post_cates(post) }} \n                {{ post_tags(post) }}\n              </div>\n              <div class=\"excerpt\">\n              {{ page_excerpt(post) }}\n              </div>\n            </div>\n            <div class=\"divider\"></div>\n            <div class=\"card-action\">\n              <a class=\"icon nova-share action-item\" href=\"{{page_share_jiathis(post)}}\" data-toggle=\"modal\" data-target=\"#share-modal\" target=\"_blank\">{{__('sns.share')}}</a>\n              <a class=\"icon nova-bubbles action-item\" href=\"{{ url_for_lang(post.path) }}#comment\" id=\"uyan_count_unit\" du=\"{{ page_uid(post) }}\"><span class=\"hidden-xs\">0 {{__('sns.comment')}}</span></a>\n              <a class=\"icon nova-heart2-full action-item\" href=\"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_likeurl\" target=\"_blank\"><span class=\"hidden-xs\">{{__('sns.like')}}</span></a>\n              <a class=\"icon nova-hand-right action-item\" href=\"{{ url_for_lang(post.path) }}\" >{{__('page.more')}}</a>\n            </div>\n          </div>\n        {%- endfor %}\n    <nav> {{ nova_paginator({total:page.total, class:'pagination'}) }} </nav>\n</main>\n{% endraw %}\n侧边栏，侧边栏主要由窗口小部件组成。如文章分类\n\n```\n    <div class=\"panel panel-primary\" id=\"category\">\n      <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">{{ _p('category.name') }}</h3>\n      </div>\n      <!-- use category tree -->\n      {{ nova_list_categories(site.categories, {class:'list-group', depth: 10, children_indicator: 'category'}) }}\n    </div>\n```\n页面预览：\n{% raw %}\n    <div class=\"panel panel-primary\" id=\"category\">\n      <div class=\"panel-heading\">\n        <span class=\"h3 panel-title\">{{ __('category.name') }}</span>\n      </div>\n      <!-- use category tree -->\n      {{ nova_list_categories(site.categories, {class:'list-group', depth: 10, children_indicator: 'category'}) }}\n    </div>\n    \n{% endraw %}\n\n#### 文章详情页\n文章详情页，主栏显示文章内容、评论、上一页和下一页导航。\n```\n<article class=\"article post\" itemscope itemtype=\"http://schema.org/Article\">\n  <header class=\"article-header\">\n    <div class=\"page-path\"><span class=\"post-category\">{{ page_path(post)}}</span></div>\n    <div class=\"divider\"></div>\n      {%- if is_post() %}\n      <h1 class=\"article-title\" itemprop=\"name\">{{ post.title }}</h1>\n      {%- else %}\n      <h1>\n        <a href=\"{{ url_for_lang(post.path) }}\" class=\"article-title\" itemprop=\"name\">{{ post.title }}</a>\n      </h1>\n      {%- endif %}\n    <div class=\"post-header\">\n      <span class=\"icon nova-calendar\"><span class=\"hidden-xs\">{{__('page.written_on')}}</span>{{ time_tag(post.date) }}</span>\n      {{ post_tags(post, {class: 'tag-item-simple'}) }}\n      <span class=\"post-share right\">\n        <a href=\"#share\" class=\"icon nova-share\"><span class=\"hidden-xs\">{{__('sns.share')}}</span></a>\n        <a href=\"#comment\" class=\"icon nova-bubbles\"><span class=\"hidden-xs\">{{__('sns.comment')}}</span></a>\n        <a href=\"#like\" class=\"icon nova-heart2-full\"><span class=\"hidden-xs\">{{__('sns.like')}}</span></a>\n      </span>\n    </div>\n    <div class=\"divider\"></div>\n  </header>\n  <div class=\"article-content\" itemprop=\"articleBody\" id=\"post-content\">\n    {{ post.content }}\n  </div>\n  <footer class=\"article-footer\">\n    <!--<time class=\"article-footer-updated\" datetime=\"{{ date_xml(page.updated) }}\" itemprop=\"dateModified\">{{ __('page.last_updated', date(page.updated)) }}</time>-->\n<!-- JiaThis Button BEGIN -->\n<div class=\"jiathis_style\"><a name=\"share\"></a>\n\t<span class=\"jiathis_txt icon nova-share\">{{__('sns.share')}}：</span>\n\t<a class=\"jiathis_button_tsina\">{{__('sns.weibo')}}</a>\n\t<a class=\"jiathis_button_weixin\">{{__('sns.wechat')}}</a>\n\t<a class=\"jiathis_button_twitter\">{{__('sns.twitter')}}</a>\n\t<a class=\"jiathis_button_copy\">{{__('sns.copy')}}</a>\n\t<a class=\"jiathis_button_ishare\">{{__('sns.one')}}</a>\n\t<a href=\"http://www.jiathis.com/share?uid={{theme.share.jiathis.uid}}\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\">{{__('sns.more')}}</a>\n\t<a class=\"jiathis_counter_style\"></a>\n  <a name=\"like\"></a>\n  <a class=\"jiathis_like_qzone\"></a>\n</div>\n<!-- JiaThis Button END -->\n  </footer>\n</article>\n<div>\n  <nav>{{ nova_paginator2({show_name: true}) }}</nav>\n  {{ partial('../partial/donate') }}\n  {{ partial('../partial/comment') }}\n</div>\n```\n\n#### 其它模板\n\n- 单页，单页与文章详情页类似。不过没有文章详情页复杂。不做详细介绍。\n- 项目文档，项目文档页须借助[hexo-generator-github]插件使用。在此也不做详细介绍。\n\n更多的[nova layout]请点击链接查看。\n\n### 辅助函数\n\n{% raw %}\n在前面的主题模板中，出现了大量的`{{}}`包含的文本，它是swig中调用js的方式。`{{}}`包含的内容可以是[hexo变量]，如`{{post.title}}`即是输出文章的标题。也可以是辅助函数，如`__('sns.share')`即是输出健值为<var>sns.share</var>的国际化文本，其它一些[Nova中]定义的辅助函数有：\n{% endraw %}\n- page_title()：返回页面标题\n- page_excerpt()：返回文章摘要\n- post_cates()：返回指定文章的分类\n- post_tags()：返回指定文章的标签\n\n`page_excerpt()` 辅助函数代码：\n```js \n// get page excerpt\nhexo.extend.helper.register('page_excerpt', function(post){\n  var p = post ? post : this.page;\n  var excerpt = p.excerpt;\n  if (!excerpt) {\n    var pos = p.content.indexOf('</p>');\n    if (pos > 0){\n      excerpt = p.content.substring(0, pos + 4);\n    }\n  }\n  return excerpt;\n});\n```\n`post_cates()`辅助函数代码\n```js\n// insert category of post\nhexo.extend.helper.register('post_cates', function(post, options){\n  var o = options || {};\n  var _class = o.hasOwnProperty('class') ? o.class : 'category-item';\n  var icon = o.hasOwnProperty('icon') ? o.icon : 'glyphicon glyphicon-folder-close';\n  var cats = post.categories;\n  var _self = this;\n  var ret = '';\n  if (cats == null || cats.length == 0) {\n      return ret;\n  }\n  ret += '<span class=\"post-category\">';\n  ret += '<i class=\"' + icon + '\"></i><span class=\"hidden-xs\">' + _self.__('category.label') + '</span>';\n  cats.forEach(function(item, i){\n    ret += '<a class=\"' + _class + '\" href=\"' + _self.url_for_lang(item.path) + '\">' + item.name + '</a>';\n  });\n  ret += '</span>';\n  return ret;\n});\n```\n在`layout/post/index.swig`中使用\n\n```htmlbars\n{{ post_cates(post) }} \n```\n将输出以下结果：\n<pre>\n    <span class=\"post-category\"><i class=\"glyphicon glyphicon-folder-close\"></i><span class=\"hidden-xs\">分类</span><a class=\"category-item\" href=\"/categories/tech/\">软件技术</a><a class=\"category-item\" href=\"/categories/tech/Web/\">Web</a></span>\n</pre>\n\n点击链接查看更多的[Nova辅助函数]\n\n***注：辅助函数放在主题`scripts`目录下***\n\n### 主题资源\n主题当中需要使用到的一些资源有css样式表，js脚本及一些图片资源。资源须放置在主题`source`目录下。在生成时，这些资源会直接复制到`public`根目录下，所以在主题模板中对资源的引用，直接以`/`为前缀+路径加载即可，如下所示：\n```js\n{{ css('css/bs/nova.css') }}\n{{ js('js/script.js')}}\n```\n\n### 第三方插件\n[hexo]是静态博客，所以像评论、分享等功能，须借助第三方插件才能实现。以评论为例，常用的评论系统有多说，友言，disqus（国外）等。如若需要使用这些第三方插件，可以到对应的官方网站上查看使用说明或集成文档。\n\n## 建议 \n- 主题模板中尽量不要写死可能会变的东西，尽量以主题配置项的方式提供配置。比如最近文章显示几条等。\n- 第三方插件脚本尽量放在</body>之前，以免影响页面的显示。\n- 选择一些比较成熟的前端框架，比如bootstrap以获得更好的兼容性。\n- 支持响应式\n\n## 参考\nhexo: https://hexo.io\nNova: http://www.ieclipse.cn/p/hexo-theme-nova\n\n[hexo模板]: https://hexo.io/zh-cn/docs/templates.html\n[hexo变量]: https://hexo.io/zh-cn/docs/variables.html\n[hexo辅助函数]: https://hexo.io/zh-cn/docs/helpers.html\n[W3C School]: http://www.w3school.com.cn/\n[nova layout]: /p/hexo-theme-nova/layouts.html\n[Nova辅助函数]: /p/hexo-theme-nova/helpers.html\n[hexo]: https://hexo.io\n[node.js]: https://nodejs.org/\n[Nova]: /en/p/hexo-theme-nova\n[hexo-generator-github]: http://github.com/Jamling/hexo-generator-github\n[hexo-generator-i18n]: http://github.com/Jamling/hexo-generator-i18n\n","tags":["Hexo"],"categories":["Web"]},{"title":"Eclipse 4.6.0 Neon启动问题","url":"/2016/06/06/Eclipse/Eclipse-neon-stratup/","content":"## 简介\nEclipse 4.6.0 Neon无法启动问题，先占个坑。\n环境如下：\nWindows 7 64位, JDK 1.8\n之前Mars版本安装运行均无问题。\n\n<!-- more -->\n\n## 无法启动\n前几天收到邮件，Eclipse 4.6 Neon版本将于2016/06/22执行新的Marketplace策略，所以去下载了eclipse新版本：Neon。\n\n下载安装都很顺利，但是在运行的时候，竟然直接跳出一个错误：\n\n```apache\n---------------------------\nEclipse\n---------------------------\nAn error has occurred. See the log file C:\\Users\\Jamling\\.p2\\pool\\configuration\\1465180452260.log.\n---------------------------\n确定   \n---------------------------\n```\n\n日志内容如下：\n\n``` apache\n!SESSION 2016-06-06 10:59:03.958 -----------------------------------------------\neclipse.buildId=unknown\njava.version=1.8.0_45\njava.vendor=Oracle Corporation\nBootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=zh_CN\nFramework arguments:  -product org.eclipse.epp.package.android.product\nCommand-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.android.product\n\n!ENTRY org.eclipse.osgi 4 0 2016-06-06 10:59:04.315\n!MESSAGE Application error\n!STACK 1\njava.lang.IllegalStateException: Unable to acquire application service. Ensure that the org.eclipse.core.runtime bundle is resolved and started \n\n(see config.ini).\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:78)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:673)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:610)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1519)\n```\n\n### 解决方案\n参考：http://stackoverflow.com/questions/2493415/unable-to-acquire-application-service-error-while-launching-eclipse\n\n在<var>ecipse.ini</var>或configuration/<var>config.ini</var>中添加`org.eclipse.core.runtime`\n我尝试了一下，发现在<var>eclipse.ini</var>中添加有效。\n```ini\n-Dosgi.bundles=org.eclipse.equinox.simpleconfigurator@1:start,org.eclipse.equinox.common@2:start,org.eclipse.equinox.ds@2:start,org.eclipse.equinox.event@2:start,org.eclipse.update.configurator@3:start,org.eclipse.core.runtime@start\n```\n如此，eclipse终于可以成功运行了。\n\n## 无法创建workspace\n运行eclipse之后，首次创建workspace，没想到又一个错误：\n\n```apache\n---------------------------\nEclipse\n---------------------------\nAn error has occurred. See the log file\nE:\\eclipse\\android-neon\\workspace\\.metadata\\.log.\n---------------------------\n确定   \n---------------------------\n```\n\n日志内容如下：\n\n```apache\n!SESSION 2016-06-06 14:03:47.781 -----------------------------------------------\neclipse.buildId=unknown\njava.version=1.8.0_45\njava.vendor=Oracle Corporation\nBootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=zh_CN\nFramework arguments:  -product org.eclipse.epp.package.android.product\nCommand-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.android.product\n\n!ENTRY org.eclipse.m2e.logback.appender 2 0 2016-06-06 14:04:00.570\n!MESSAGE Could not resolve module: org.eclipse.m2e.logback.appender [385]\n  Unresolved requirement: Fragment-Host: ch.qos.logback.classic\n\n\n!ENTRY org.eclipse.osgi 4 0 2016-06-06 14:04:00.570\n!MESSAGE Application error\n!STACK 1\njava.lang.NullPointerException\n\tat org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.<init>(ModelServiceImpl.java:121)\n\tat org.eclipse.e4.ui.internal.workbench.swt.E4Application.createDefaultContext(E4Application.java:510)\n\tat org.eclipse.e4.ui.internal.workbench.swt.E4Application.createE4Workbench(E4Application.java:203)\n\tat org.eclipse.ui.internal.Workbench$5.run(Workbench.java:626)\n\tat org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:604)\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)\n\tat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:138)\n\tat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:673)\n\tat org.eclipse.equinox.launcher.Main.basicRun(Main.java:610)\n\tat org.eclipse.equinox.launcher.Main.run(Main.java:1519)\n```\n尝试了许多办法，仍然还是个这错误。\n\n已向eclipse提问求助。期待他们能够尽量回复给出解决方案\n\n### 解决方案\n原来是eclipse installer的bug，需下载新版本再安装。\n\n{% blockquote Eclipse https://www.eclipse.org/forums/index.php/m/1734197/#msg_1734197 Forums %}\nSorry, there was a bug in the RC3 installer. I've just created an RC3a\nbuild to fix it. Until they update the link on the website\n\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=495523\n\nyou could get the fixed version from here:\n\nhttps://hudson.eclipse.org/oomph/job/integration/lastSuccessfulBuild/artifact/products/\n\nOr you could switch to Advance mode and use the button at the bottom of\nthe wizard to update your installer to the fixed version.\n{% endblockquote %}\n\n## 配置启动问题汇总\n\n{% blockquote EclipseWiki https://wiki.eclipse.org/Eclipse4/RCP/FAQ#Why_won.27t_my_application_start.3F %}\n\n## Problems on Configuration, Start-Up, and Shutdown\n### Why won't my application start?\nE4AP products require having the following plugins:\n\norg.eclipse.equinox.ds (must be started)\norg.eclipse.equinox.event (must be started)\nNote that org.eclipse.equinox.ds and org.eclipse.equinox.event must be explicitly started. In your product file, you should have a section like the following:\n\n```xml\n  <configurations>\n     <plugin id=\"org.eclipse.core.runtime\" autoStart=\"true\" startLevel=\"2\" />\n     <plugin id=\"org.eclipse.equinox.ds\" autoStart=\"true\" startLevel=\"3\" />\n     <plugin id=\"org.eclipse.equinox.event\" autoStart=\"true\" startLevel=\"3\" />\n  </configurations>\n```\nFailure to set the auto-start levels usually manifest as runtime errors like\n\n```\n  Unable to acquire application service. Ensure that the org.eclipse.core.runtime bundle is resolved and started (see config.ini)\n```\n{% endblockquote %}","tags":["Eclipse"],"categories":["Eclipse 插件"]},{"title":"Hexo多语言站点解决方案","url":"/2016/06/02/Web/tech-hexo-i18n/","content":"Hexo是一个静态博客应用，所以在多语言站点支持上，并不是很好。虽然Hexo支持多语言，但是要生成多语言站点，还是有一些困难的。基于Hexo的一些特性，我给出了几种解决方案\n\n<!-- more -->\n\n## 方案一\n生成的多语言站点单独放入独立的语言目录中，如public/en是英文站点，public/fr是法文站点，而public/则是默认语言站点。然后源文件目录，对于不同的语言的内容，放入对应的语言目录中，如source/en则放置英文站点下的源文件，同理，source/fr放置的是法语站点源目录。\n\n通过修改_config.yml language顺序和public_dir，来生成不同语言。如生成默认语言\n```yaml\nlanguage: [zh, en]\npublic_dir: public\n```\n生成英文站点\n```yaml\nlanguage: [en, zh]\npublic_dir: public/en\n```\n但是有以下问题：\n- 会生成类似public/en/en的多余文件\n- 修改源文件，不好同步，如修改了默认语言下的某个源文件，不能直接copy到en/目录中\n\n## 方案二\n针对方案一的缺点，在方案一的基础上，加入title2 front-matter，来控制冗余与修改同步的问题。比如_post，在不同的语言中，title是不会自动翻译的。引入title2就是为了解决title的多语言支持。但是仍然无法解决生成public/en/en这样的问题。\n\n但是实际应用中发现，这两种方案还存在其它的一些问题，比如语言显示顺序，语言切换后之类的问题。\n\n## 方案三\n利用hexo的i18n_dir作文章，编写generator插件来生成多语言。这便是[hexo-generator-i18n](http://github.com/jamling/hexo-generator-github)的雏形。通过添加路由，对page和post自动生成一个带语言前缀的路由。规则如下：\n- 对于不存在多语言的源文件，添加一个多语言路由，输出的内容同默认语言\n- 如果存在多语言的源文件，则只修改源目录的语言即可\n如源目录下的donate/index.md，默认的page generator会生成donate/index.html，那么通过编写一个page-i18n的generator再生成一个en/donate/index.html。如果源目录中存在en/donate/index.md，那么只修改此页面的语言即可，不用再生成。\n\n通过测试发现，多语言页面都可以正确生成，但是存在以下问题\n- 像首页，归档页这些界面，切换语言时，仍然会出现404\n\n## 方案四\n为解决方案三中的问题，特地研究了hexo的生成器，发现像首页，归档页都是动态生成的。所以，添加国际化的范围，将动态生成的页面，也按方案三的page页面一样，再次动态生成多语言页面。\n\n对于每个生成器，动态注册一个-i18n的生成器，专门用于处理首页，归档页等页面。\n此时，发现所有的页面都支持多语言了。而且在hexo s模式下运行，语言想换就换。真是激动极了！然而在非默认语言下，点击链接的时候，发现仍然跳转到了默认语言！\n\nOMG！难道之前的工作都白费了吗？\n\n## 方案五\n针对链接，特地重写了辅助函数url_for_lang(path)，根据当前路径判断是否带语言，如果带语言，则链接地址也带上语言前缀，插件中使用url_for(path)的地方全部替换为url_for_lang(path)。终于~全部搞定！\n\n","tags":["Hexo"],"categories":["Web"]},{"title":"Git submodule简介","url":"/2016/06/02/other/tech-git-submodule/","content":"## 修改历史\n2016-07-29 修改部分内容\n\n如果项目很大，分为众多模块，并且需要对每个模块单独进行版本控制的时候，引入git submodule是一个非常不错的选择。尤其是对一些sdk+plugin的项目尤为适用。\n\n<!-- more -->\n\n比如本站是使用hexo搭建的博客，其中使用的主题与插件，都是在迁移博客时同步开发的，但是这主题与插件，同样可以应用到其它的博客站点，所以，不能把源文件、主题和插件纳入同一个代码仓库进行版本控制，为方便主题与插件的版本控制，它们在github上都建立了单独的代码仓库。对于博客源文件、主题及插件的修改，只能提交到其对应的git仓库。\n\n为方便理解，将我的博客工程结构列举如下：\n<pre>\nhexo-site #整个工程，对应 hexo-site 仓库\n    source #博客源文件\n    themes # 主题目录，在hexo-site仓库.gitignore中\n        nova  # 主题，对应hexo-theme-nova仓库\n    node_modules # 插件目录，在hexo-site仓库.gitignore中\n        hexo-generator-github #插件1，对应hexo-generator-github仓库\n        hexo-generator-i18n #插件2，对应hexo-generator-i18n仓库\n</pre>\n\n其中hexo-site对应Jamling/hexo-site.git，themes/nova目录对应Jamling/hexo-theme-nova.git，node_modules/下的github和i18n插件对应的也是单独的git仓库。\n\n为了保持博客源文件的干净，在.gitignore文件中，把themes目录和node_modules目录都加入了。所以，主题与插件的修改，都不会影响到hexo-site仓库。\n\n在hexo-site目录下，通过`git submodule add`命令添加主题及插件子模块\n\n```bash\ngit submodule add -f git@github.com:Jamling/hexo-theme-nova themes/nova\ngit submodule add -f git@github.com:Jamling/hexo-generator-github node_modules/hexo-generator-github\ngit submodule add -f git@github.com:Jamling/hexo-generator-i18n node_modules/hexo-generator-i18n\ngit submodule add -f git@github.com:Jamling/hexo-generator-index2 node_modules/hexo-generator-index2\ngit submodule add -f git@github.com:Jamling/hexo-filter-highlight node_modules/hexo-filter-highlight\n```\n\n加-f选项，是因为themes目录和node_modules目录加入了.gitignore，`git submodule add`第一个参数为子模块的git仓库地址，第二个参数为子模块的名字。子模块成功添加之后，会在hexo-site目录下创建一个<var>.gitmodules</var>文件。内容如下：\n\n```\n[submodule \"themes/nova\"]\n\tpath = themes/nova\n\turl = gh:Jamling/hexo-theme-nova\n[submodule \"node_modules/hexo-generator-github\"]\n\tpath = node_modules/hexo-generator-github\n\turl = gh:Jamling/hexo-generator-github\n[submodule \"node_modules/hexo-generator-i18n\"]\n\tpath = node_modules/hexo-generator-i18n\n\turl = gh:Jamling/hexo-generator-i18n\n```\n\n如果对git submodule命令不熟，可以使用`git submodule add --help`查看帮助，也可以通过直接修改<var>.gitmodules</var>文件来添加。\n\n注：将子模块加入<var>.gitignore</var>的好处是主仓库中不会出现子模块需要更新的提示，进一步将主仓库与子模块独立开来，但是缺点就是，如果要更新子模块，须单独cd到子模块目录，手动`git pull`更新。\n\n子模块添加成功之后，主仓库与子模块的操作都是独立的。执行`git status`等操作，只会看到当前仓库的变更，跟其它的仓库（模块）没有任何关系。\n\n\n","tags":["git"],"categories":["其它"]},{"title":"使用ADB连接手机","url":"/2016/05/14/other/tech-adb-mobile/","content":"\n## 简介\n使用ADB连接手机进行调试，开发、文件传输\n\n使用adb文件传输优点：无需卸载或挂载SD卡\n\n<!-- more -->\n\n## 官方指南\n请访问http://developer.android.com/tools/device.html配置你的设备，也可以下载驱动\n\n## 操作实践\n### 在Win7上连接手机。\n\n1. 使用USB线将PC与手机连接起来\n2. 打开cmd，输入adb devices查看设备状态\n  \n {% asset_img image001.jpg %}\n \n 注：adb 命令找不到，将先配置系统环境变量\n \n从上图可以看到，目前adb识别到的设备数为0。为什么呢？因为缺少驱动。需要安装驱动。不信，可以在设备管理器查看一下，如下图所示：\n\n<p>{% asset_img image002.jpg %}</p>\n\n显示黄色！图标的表示我的手机没有相应的驱动，不能被电脑识别。\n \n### 安装驱动\n下载Android SDK，启动SDK Manager，在Extras中勾选Google USB Driver并点击“Install packages…”安装。\n\n<p>{% asset_img image004.jpg %}</p>\n\n如果你不是专业的Android开发人员，请自行百度并下载Google USB驱动。下载好驱动之后，进入驱动所在的目录，如我的电脑存放在：\n`D:\\adt-bundle-windows-x86\\sdk\\extras\\google\\usb_driver`\n在此目录下，有一个<kbd>android_winusb.inf</kbd>文件，使用像记事本等文本编辑器打开它。\n\n<p>{% asset_img image005.jpg %}</p>\n \n文件内容如下图，像Google的亲儿子Nexus系统手机，它都配置好了VID和PID，可以直接安装驱动。但是好多手机，需要我们自己配置，谁叫你买的不是Google的产品呢~\n\n{% asset_img image006.jpg %}\n\n回到设备管理器，右键点击自己手机->属性，点击第三个选项卡：“详细信息”，在属性下拉列表中设备硬件Id，OK，看到了吧，你手机的VID，及PID信息都在这呢。选择这两项，右键copy。\n{% asset_img image007.jpg %}\n回到android_winusb.inf文件，先将硬件PID，VID粘贴到空白处，copy一个原有的配置，再将VID，PID剪切替换一下，如下图所示：\n{% asset_img image009.jpg %}\n最后，别忘了保存。然后在设备管理器中，右键选择没有驱动的手机设备，选择“更新驱动程序”，然后选择本地驱动（点击“从计算机的…”这一项），点击“浏览”选择驱动所在的目录。按下一步继续。\n{% asset_img image011.jpg %}\n如果弹出驱动验证警告，不管它，点击始终安装就是。\n{% asset_img image012.jpg %}\n安装完毕之后，在设备管理器中，会多出一个Android Phone的组，下面有Android ADB Interface 这一项，即表示驱动安装成功，基本上你的电脑就能连上手机了。如果还是不行，建议将跟你手机名字相关的设备按上述方法 （查看VID，PID，写入inf，再更新驱动）\n{% asset_img image013.jpg %}\n\n连接成功之后，我们就可愉快的使用adb来连接手机啦\n\n{% asset_img image014.jpg %}\n\n运行monitor查看手机\n{% asset_img image016.jpg %} \n\n\n \n\n \n\n\n","categories":["奇淫巧技"]},{"title":"Gerrit&Git使用指南","url":"/2016/05/14/other/tech-gerrit-guide/","content":"上篇介绍了Gerrit的安装与配置，本篇介绍的是Gerrit的使用\n\n<!-- more -->\n\n## 生成ssh key\nWindows下，打开gitbash等终端工具输入ssh-keygen生成公钥和私钥\nLinux下直接在终端命令中输入ssh-keygen\n```shell\n$ssh-keygen\n```\n\n{% asset_img image001.png %}\n\n## 登录gerrit\n\n在浏览器中输入gerrit地址：http://192.168.135.48/gerrit/\n然后在弹出的身份验证对话框中输入账号及密码\n**注：注意用户名大小写**\n\n首次登录成功后，进入注册页面，如下所示：\n\n{% asset_img image003.png %}\n\n此界面可以添加ssh（亦可后续添加）\n\n输入Full Name，并点击Register New Email注册邮件地址。Gerrit会向输入的邮箱地址发送一封注册确认邮件。然后登录自己的邮箱，查收文件，点击验证链接，完成验证。验证通过后，将成功注册用户，就可以Review Code / Upload Code啦。\n\n{% asset_img image005.png %}\n \n### 设置full-name和email\n点击Settings -> Contact Information更新姓名及邮箱地址。\n\n{% asset_img image007.png %}\n\n当email 不为空时，才算是正式的注册用户。才具备git 操作权限。\n\n这里的username和preferred email必须和git config配置的完全一致，才能upload代码到gerrit\n\n### 设置ssh public key\n点击settings -> SSH Public Keys链接，将生成的ssh 公钥添加到gerrit\n\n{% asset_img image009.png %}\n\n### 测试ssh连接\n命令格式：`ssh –p port your_user_name@gerrit_host`\n```shell\n$ ssh –p 29418 lijiaming@192.168.135.48\n```\n{% asset_img image011.png %}\n\n连接成功之后，就可以从gerrit上检出代码了\n\n## 从gerrit检出代码\n登录gerrit，点击Projects选项卡，在project list中点击要检出的工程\n进入工程详情界面\n\n{% asset_img image013.png %}\n\n点击ssh选项卡，复制代码检出命令\n回到git bash终端，粘贴或手动输入git clone命令\n\n{% asset_img image015.png %}\n\n**注：这里使用的是ssh协议哦**\n\n## git本地设置\n### 设置用户\n用户名登录gerrit的用户名\nemail地址为gerrit上注册的邮箱地址\n必须完全与gerrit上配置的一致，否则将不能push代码\n\n{% asset_img image017.png %}\n\n### 下载commit模板\n先cd到仓库目录，然后再下载commit-msg\n```shell\n$ scp -p -P 29418 yourname@review.example.com:bin/gerrit-cherry-pick ~/bin/\n\n$ scp -p -P 29418 yourname@host:hooks/commit-msg .git/hooks/\n\n$ scp -p -P 29418 lijiaming@192.168.135.48:hooks/commit-msg .git/hooks/\n```\n{% asset_img image019.png %}\n\n### 设置默认push\n编辑./git/config文件，在[remote \"origin\"]下添加\n`push = +refs/heads/*:refs/for/*`\n也可以通过`git config origin.remote.push= xxx`来设置哦\n\n这样，push代码时，可以直接使用git push origin branch名称将代码提交到gerrit\n\n如果不设置，需要使用git push origin HEAD:refs/for/master来提交到远程master分支\n\n### 邮件提醒\n当gerrit上有事件发生时，会向相关的用户发送邮件，建议使用邮件客户端打开提醒功能，并设置过滤器，如来自gerrit@your_company.com的邮件都存放在特定的文件夹下\n\n### 提交代码\n#### 查看状态\n```shell\n$ git status\n```\n查看状态比如，已经加入git管控的文件（绿色），修改的文件（红色），冲突的文件（both modified 红色），新添加的文件（红色）\n\n#### 添加文件\n```shell\n$ git status add\n```\n添加文件，可以添加目录，文件，也可以使用git add .添加所有文件\n建议在git add 之前先git status一下\n\n#### 提交代码\n```shell\n$ git commit –m “[add|mod|del|…] \n```\n提交日志内容，尽量精准描述本次提交\n\n如果忘了带-m参数，可以进入vim/vi界面，按i进入编辑界面，然后输入commit信息，再按esc退出编辑，输入:wq（vim指令， vi指令自行百度）保存并退出\n\n#### 推送代码\n```bash\n$ git push origin master\n```\n将当前代码push到远程master分支\n如果没有设置默认push，则需使用完整命令\n```bash\n$ git push origin HEAD:refs/for/master\n```\n#### 拉取代码\n```bash\n$ git pull --rebase origin master\n```\n从远程分支master上拉取代码，如果本地有修改，会导致拉取失败，需要先暂存本地修改的代码\n\n此命令相当于svn的svn update\n\n--rebase的作用是精简commit信息，减少不必要的merge\n\n#### 暂存代码\n```bash\n$ git stash\n```\n将本地修改的代码暂存起来\n可以添加-u参数，将添加的文件一并加入暂存区\n#### 从暂存区恢复\n```bash\n$ git stash apply \n```\n将暂时区的代码恢复到当前分支，后面可以跟stash{position}，将第position次的暂存恢复。\n```\n$ git stash pop\n```\n同git stash apply，并且从stash中删除\n```\n$ git stash list\n```\n列出暂时区列表\n\n## Gerrit工作流\n### Upload代码\n请见上一节提交代码\n\n### Review代码\n当upload成功之后，就可以在gerrit上看到提交了\n{% asset_img image021.png %}\n\n### 添加Reviewer\n点击提交日志进去，添加reviewer\n\n{% asset_img image023.png %}\n\n注：输入reviewer的邮箱地址会自动联想，点击点击Add Reviewer确认添加\n\n### 评审代码\n \n点击文件查看修改\n\n{% asset_img image025.png %} \n\n可以双击修改后的代码位置写入评审信息\n\n提交或评审\n\n{% asset_img image027.png %}\n\n点击Review，选择Review结果\n\n{% asset_img image029.png %}\n\n如果评审没有问题，则选择+2或+1，如果代码不正确或存在问题，则选择-1或-2。\n\n最后选择评审动作，是否提交到git\n\n注1：提交到git的前提条件是：review的分数总和必须大于或等于2，并且单次review分数没有-2\n\n注2：如果代码不存在冲突，本次提交则会顺利地merge到git仓库\n\n### 废弃提交\n\n如果代码评审不通过，也可以点击Abandon Change，直接废弃掉本次提交\n\n如果submit存在冲突，也可以先废弃掉提交，让代码提交者解决冲突后，再次提交。\n\n## git 进阶操作\n### 切换协议\n如果clone时，使用的是https，则每次提交都需要输入用户名与密码，推荐使用ssh协议，可以使用以下命令将https转为ssh协议\n```bash\ngit remote set-url origin git@github.com:someaccount/someproject.git\n```\n### 导入仓库\n```bash\ngit init\ngit remote add origin git@github.com:Jamling/test.git\ngit push -u origin master\n```\n\n### 提交代码到多个分支\n如果代码需要提交到多个分支，需要使用git cherry-pick功能。以下是一个示例\n\nPS：master为主干分支，dev为开发版本分支。\n假设，我们当前在主干分支master，则：\n1，master分支上git add , git commit，并且记录下commit id\n2，git pull --rebase origin master // 确保master分支是最新状态\n3，git push origin master\n4，git checkout dev切换到dev分支\n5，git cherry-pick 后面加上master分支下的刚刚提交的commit id\n6，git pull --rebase origin dev // 确保dev分支是最新的\n7，git push origin dev\n\n### 追加修改\n当push代码之后，review不通过或者想继续修改，可以继续编辑源代码，然后再通过git commit –amend来追加修改\n```bash\n$ git add test.txt\n$ git commit –m “add test”\n$ git push origin master\n$ git add test2.txt\n$ git commit --amend\n$ git push origin master\n```\n\n### 版本回退\ngit reset可以实现版本回退\n```bash\ngit reset --soft HEAD~\n```\n添加--soft选项，则本地修改仍然存在，commit信息将回退\nHEAD~：表示将HEAD版本向前退一个版本~~表示两个版本，亦可以用HEAD~2表示\n\n### 提交tag\n```bash\ngit tag -am “commit message” tagname\ngit push origin tagname:refs/heads/tagname\ngit push --tags\n```\n\n## Gerrit 常见问题\n### 本地仓库与远程仓库不一致\n `Your branch is ahead of 'origin/master' by 1 commits.`\n\n 使用git status后，提示Your branch is ahead/behind of 'origin/master' by x commits. 表示本地仓库与远程仓库不同步，本地仓库比远程仓库提交x次提交。\n 出现的原因是有以下两种：\n  1. 本地提交push到gerrit，但是gerrit没有merge到远程仓库。\n  2. gerrit上已经merge过了，但是本地没有拉取最新的远程仓库。\n\n 解决办法：\n \n 先查看gerrit merge状态。然后再通过拉取代码获取最新的分支代码。如果提交的commit是你自己的，可以简单使用git pull，如果不是，强烈推荐`git pull --rebase origin master`来拉取分支。\n\n### Push代码被拒绝 \n - `[remote rejected] HEAD -> refs/for/master (missing Change-Id in commit messag`\n push代码时，出现以下错误：\n \n {% asset_img image033.png %}\n \n 解决办法\n    1.\t先确认是否有从远程下载commit-msg模板，如果没有，参考下载commit模板一节，下载commit-msg模板\n    2.\t使用git status查看状态，发现ahead of 'origin/master'的数目不对。则使用git log查看提交记录，发现提交记录中有Merge branch 'master' of ssh://…，则可以确定是因为pull代码时，出现了分支冲突，git自动合并并提交合并commit。具体的解决办法之一：\n        a)\tgit reset --soft HEAD~将自动merge后的commit全部重置，并且保存到暂存区\n        b)\tgit reset --hard HEAD~将自动merge的commit还原，再pull --rebase拉取最新的分支代码。并解决冲突。\n        c)\t从暂存区恢复代码，并且重新提交即可\n - `warning: push.default is unset`\n 是由版本兼容性导致的，低版本的git push如果不指定分支名，就会全部推送，而新版只会推送当前分支。\n 解决的办法也很简单，我们只需要明确指定应该推送方式即可\n    1. 全部推送\n    git config --global push.default matching\n \n    2. 部分推送\n    git config --global push.default simple\n\n\n","tags":["git"],"categories":["其它"]},{"title":"Gerrit安装与配置","url":"/2016/05/14/other/tech-gerrit-install/","content":"## 简介\nGerrit是一套代码审核服务\n本人尝试了两套linux系统，其中ubuntu系统为虚拟机环境，centos系统为正式环境。\n两套linux环境均为64位操作系统。\n1. ubuntu 14.10 amd-64 server版\n2. CentOS Linux release 7.1.1503 (Core)\n\n<!-- more -->\n\n## 软件环境\n安装gerrit所需的相关软件包\n\n### jdk/jre\n - ubuntu 安装Java（jre） \n \n {% asset_img image001.png %}\n - centos \n `# yum -y list java*`\n 列出可安装的软件包\n `# yum -y install java-1.7.0-openjdk.x86_64`\n 安装jdk 7\n### git\n - ubuntu\n ` $ sudo apt-get install git git-core git-doc`\n {% asset_img image002.png %}\n \n {% asset_img image011.png %}\n\n### apache2\n#### ubuntu\n```bash\n$ sudo apt-get install apache2 apache2.2-common apache2-utils\n```\n其中，使用htpasswd指令需要安装apache2-utils包\n\n{% asset_img image003.png %}\n\n{% asset_img image005.png %}\n\n安装成功后，在/etc/apache2/sites-enable/目录下，新建<kbd>gerrit.conf</kbd>用于配置gerrit服务\nubuntu下，需要手动添加LoadModule proxy_http_module\n添加后 <kbd>/etc/apache2/mods-enabled/proxy.load</kbd>内容如下：\n\n{% asset_img image007.png %}\n\n#### centos\n`# yum install httpd`\n安装成功后，在**/etc/httpd/conf.d/**目录下，新建gerrit.conf用于配置gerrit服务\n\n#### apache配置\n<kbd>gerrit.conf</kbd>内容如下：\n\n```apache\n# NameVirtualHost 已不推荐使用，在ubuntu下，必须存在，centos可以注释掉\nNameVirtualHost *:80\n<VirtualHost *:80>\n\t\t# 服务器的ip地址\n        ServerName 192.168.133.102\n        ProxyRequests Off\n        ProxyVia Off\n        ProxyPreserveHost On\n        <Proxy *>\n                Order deny,allow\n                Allow from all\n        </Proxy>\n        <Location \"/gerrit/login/\">\n                AuthType Basic\n                AuthName \"Gerrit Code Review\"\n                AuthBasicProvider file\n                AuthUserFile /home/gerrit/htpasswd.conf\n        </Location>\n        AllowEncodedSlashes On\n        RedirectMatch ^gerrit$ /gerrit/\n        ProxyPass /gerrit/ http://127.0.0.1:8081/gerrit/\n        ProxyPassReverse /gerrit/ http://127.0.0.1:8081/gerrit/\n</VirtualHost>\n```\n\n注意\n - AllowEncodedSlashes On设置将无法在gerrit上创建parent/child.git结构的project。\n - 在centos上出现过AuthUserFile无法读取的问题。新建gerrit专有账户后，无此问题。\n - gerrit.conf的内容与gerrit/etc/gerrit.config有关联。gerrit的配置请见后文\n\n## Gerrit安装\n### 下载gerrit\n因为国内code.google比较难访问，建议先在windows上先下载gerrit安装包然后上传到服务器\n\ngerrit release包列表：http://gerrit-releases.storage.googleapis.com/index.html\n\n### 安装\n\n1. 创建专有账号（可选）\n 在centos上，创建了专有账号gerrit及gerrit组，并且禁止gerrit账户登录系统。\n ```shell\n[root@Centos ~]# adduser gerrit\n[root@Centos ~]# passwd --delete gerrit\n[root@Centos ~]# sudo su - gerrit\n[gerrit@Centos ~]$ ls\n ```\n 第2行清除用户的密码\n\n2. 安装 \n\n ```bash\n[root@Centos ~]# java -jar gerrit-2.8.6.1.war init -d gerrit\n```\n \n 进入gerrit安装交互过程\n ```apache\n    *** Gerrit Code Review 2.8.6.1\n    ***\n    Create '/root/gerrit'          [Y/n]? y\n    *** Git Repositories\n    ***\n    Location of Git repositories   [git]: ~/git/\n    *** SQL Database\n    ***\n    Database server type           [h2]:\n    *** User Authentication\n    ***\n    Authentication method          [OPENID/?]: HTTP\n    Get username from custom HTTP header [y/N]? n\n    SSO logout URL                 :\n    *** Email Delivery\n    ***\n    // Email \n    *** Container Process\n    ***\n    Run as                         [root]:\n    Java runtime                   [/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.85-2.6.1.2.el7_1.x86_64/jre]:\n    Copy gerrit-2.8.6.1.war to /root/gerrit/bin/gerrit.war [Y/n]? y\n    Copying gerrit-2.8.6.1.war to /root/gerrit/bin/gerrit.war\n    *** SSH Daemon\n    ***\n    Listen on address              [*]:\n    Listen on port                 [29418]:\n    Gerrit Code Review is not shipped with Bouncy Castle Crypto SSL v149\n      If available, Gerrit can take advantage of features\n      in the library, but will also function without it.\n    Download and install it now [Y/n]? y\n    Downloading http://www.bouncycastle.org/download/bcpkix-jdk15on-149.jar ... OK\n    Checksum bcpkix-jdk15on-149.jar OK\n    Gerrit Code Review is not shipped with Bouncy Castle Crypto Provider v149\n    ** This library is required by Bouncy Castle Crypto SSL v149. **\n    Download and install it now [Y/n]? y\n    Downloading http://www.bouncycastle.org/download/bcprov-jdk15on-149.jar ... OK\n    Checksum bcprov-jdk15on-149.jar OK\n    Generating SSH host key ... rsa... dsa... done\n    *** HTTP Daemon\n    ***\n    Behind reverse proxy           [y/N]? y\n    Proxy uses SSL (https://)      [y/N]? n\n    Subdirectory on proxy server   [/]: gerrit\n    Listen on address              [*]:\n    Listen on port                 [8081]:\n    Canonical URL                  [http://null]: http://localhost:8081/gerrit/\n    *** Plugins\n    ***\n    Install plugin download-commands version v2.8.6.1 [y/N]? y\n    Install plugin reviewnotes version v2.8.6.1 [y/N]? y\n    Install plugin replication version v2.8.6.1 [y/N]? y\n    Install plugin commit-message-length-validator version v2.8.6.1 [y/N]? y\n ```\n \n 建议在第二步 Git Repositories选择独立于gerrit安装目录的一个空目录，不然默认使用gerrit/git/作为git仓库目录。\n 然后其它的步骤基本只需默认即可\n\n 不同版本的gerrit，使用的ssh key加密库是不一样的，以下是2.8使用的加密库\n http://www.bouncycastle.org/download/bcprov-jdk16-144.jar\n {% asset_img image013.png %}\n 安装完成：\n {% asset_img image015.png %}\n \n3. 配置\n <kbd>gerrit/etc/gerrit.config</kbd> 配置如下：\n {% asset_img image017.jpg %}\n\n### 添加gitweb支持\n```apache\n[gitweb]\n        cgi = /var/www/git/gitweb.cgi\n\t\turl = http://192.168.133.102/git/\n```\t\n然后修改<kbd>/etc/gitweb.conf</kbd>\n\n设定`$projectroot = /home/gerrit/gitprojects` 指向git仓库路径\n\n重启服务后生效。\n\n - 注1：个人觉得gitweb.url可以设定路径/var/www/git/也是可行的，但未作尝试。\n - 注2：有人说gitweb cgi的owner必须和 $projectroot的ownwer一致。好像不一致也是可以的，因为我没有去更改gitprojects的所有者信息\n\n## FAQ\n\n - centos 上访问gerrit出现http 503\n 输入以下指令，第一个不行，试第二个\n ```bash\n # /usr/sbin/setsebool httpd_can_network_connect 1\n # /usr/sbin/setsebool -P httpd_can_network_connect 1\n ```\n 参考：http://sysadminsjourney.com/content/2010/02/01/apache-modproxy-error-13permission-denied-error-rhel/\n\n - centos 上访问gerrit出现http 500\n 关闭防火墙即可\n ```bash\n # systemctl stop firewalld.service\n ```\n 因apache和gerrit的配置问题导致gerrit不能正常访问，建议多多查看apache和gerrit的log。\n\n\n## 参考\n- Gerrit2安装配置\nhttp://openwares.net/linux/gerrit2_setup.html\n- Gerrit Code Review for Git\nhttps://gerrit-documentation.storage.googleapis.com/Documentation/2.8.1/index.html\n\n \n\n","tags":["git"],"categories":["其它"]},{"title":"Excel VBA基础实例教程","url":"/2016/05/13/other/tech-vba-guide/","content":"\n<script src=\"http://cdn.bootcss.com/highlight.js/9.1.0/languages/vbscript.min.js\" ></script>\n\n# VBA简介\n## VBA\nVBA (Visual Basic for Application)，是一种应用程序自动化语言，所谓的应用程序自动化，就是通过程序或者脚本（VBS）让应用程序（Word, Excel）自动化完成一些工作（自动填充内容，自动计算等）。\n\n<!-- more -->\n\n## 宏与VBA\n宏其实是Excel自动生成的VBA代码。\n可以通过菜单栏工具→宏→录制新宏，然后点击工具栏中字体颜色设置颜色为红色，设置对齐方式为居中对齐，再点击停止宏。\n再选择其它单元格，点击菜单栏工具→宏→选择刚才录制的宏。这样所选择的单元格都变成红色字体，居中对齐了。\n\n所以，通过宏，相信大家对VBA有了更深入的了解了吧？没错就是自动化操作。让原本相对相对复杂的操作通过VBA包装起来，再让电脑自动去完成这些操作。\n\n有人要问了，你刚才讲到的例子，可以用格式刷完成，或者多选单元格之后再一起设置也可以呀。确实可以，不过上面宏示例，只是一个非常简单的例子。再复杂一点的呢？比如一份Excel中有一个Sheet，是比较隐私的，需要输入密码才能查看，或者完成一些Excel公式不支持的复杂运算。这时候VBA的强大之处就体现出来啦。\n\n是不是学好了VBA之后，就不用再使用宏了呢？也不是，通过查看录制的宏，可以看到好多VBA操作Excel的例子，比如使用哪些对象，执行什么操作啦，一目了然。如果对Excel内建对象不是很熟的话，查看宏代码不失为一个学习VBA的好办法。\n\n# 教程目的\n本文档的目的在于让读者对VBA有一个初步的概念，通过练习编写一个个人所得税计算器来一步一步学习VBA。\n\n# 准备工作\n首先，你需要安装Office Excel，然后新建一个新建一个Excel文档，重命名为个人所得税计算器。\n\n**注：本教程使用的Office为Office 2003简体中文精简版。如果遇到与本文档不符合的地方，请自行解决。**\n\n其次，通过基本的Excel操作，将表格设计成个人所得税计算器，如下图所示：\n\n{% asset_img image001.png %}\n\n以上基本的Excel操作，相信是个用电脑工作的人，应该都会的。\n下面，通过学习VBA，来开启Excel的高级应用吧。\n\n# VBA for Excel\n\n## VBA编辑器简介\n\n### 打开VBA编辑器\n\n菜单栏：视图→工具栏→Visual Basic，打开VB工具栏（后面的Visual Basic，一律简称为VB）\n{% asset_img image003.png %}\n\n点击VB编辑器图标，打开VB编辑器\n{% asset_img image005.png %}\n\n打开后的界面如下\n{% asset_img image007.jpg %}\n\n下面简单介绍一下VB编辑器各个部分\n### 工程资源管理器\n管理工程资源，如窗体，模块，类模块，还可以导入，导出窗体，模块等，在这里，重点提一下模块与类模块，个人理解，类模块就是单个类，主要用于面向对象的类的定义，而模块主要用于流程的控制。这仅是个人的理解，不明白的人，可以自行百度VBA类模块等关键词。\n\n### 属性窗口\n显示当前所选对象的属性，比如上图中，我所选的是第一个sheet（2012个人所得税计算器），属性窗口中的Name属性即为2012个人所得税计算器，当然，属性除了给你看之外，你还可以编辑属性值哟，不信，你试试将Name属性值变更为“个体工商经营所得税计算器”试试。\n\n### 代码窗口\n个人理解，这里就是编辑器啦，只不过，可以切换成代码模式（代码窗口）和可视化设计模式（对象窗口）两种模式，你可以在此编辑程序的代码或设计程序窗口。\n\n可视化设计模式只针对窗体有效哦，你可以双击工程资源管理器中的FormCalculator窗体试试，默认打开的就是对象窗口哦，如下图所示：\n{% asset_img image009.png %}\n \n不过因为我们研究的是VBA，所以，我们不需要画应用程序的窗口，直接使用Excel表格就可以完成了，如果你感兴趣的话，可以将工程导出，然后使用VB创建.exe应用程序哦。\n\n### 立即窗口\n如果你学过其它计算机语言的话，可能会很奇怪，为什么叫这个名字，其实它就是调试程序的输出窗口，类似于C++的输出窗口，Java IDE的Console。代码中使用Debug.Print输出的内容都会在此窗口打印出来。\n\n### 本地窗口\n此窗口也跟调试程序有关的，在调试程序的过程中，此窗口显示当前范围的变量的值哦，对调试程序来说，有非常大的帮助呢。\n\n### 调试工具栏\n为什么要调试呢？就算是顶级的程序员，也不可能保证一次写好代码，而且永不出错。调试的目的在于理解程序的运行，分析及找出bug原因，然后再加以修正，来保证代码的准确无误地按照我们的期望来执行。\n所以调试是使用非常频繁的，大家可以通过菜单栏：将视图→工具栏→调试勾选上，将它显示在工具栏上。\n调试可以分单步调试，过程调试等等。具体的操作，请自行体会。\n\n提示：可以通过菜单栏→编译工程，来检查整个工程是否能顺利编译通过。因为VB编辑器没有像其它语言编辑器自动侦错，自动完成，语法检查那样的高级功能（有是有一点，就是功能不够强大），比如你拼错了一个变量，代码编辑器并不会立即告诉你。需要你运行过程中才提示，而且就算是提示，给的错误信息也不准确，我刚开始学习的时候，也因此烦恼了好一阵。刚开始写的时候，及时写，及时编译，还是很有必要的。\n\n## VBA语法\n\n在讲到这一节的时候，我有点纠结，因为一门计算机语言的语法是比较复杂的，所以，限于篇幅，我还是只作简单的介绍，详细的请自行参考某些资料，不过与其它部分（如前面的VBA简介）不同的是，要想学好VBA，其语法肯定是必不可少的重要步骤。就像学习英语一样，如果不熟悉其语法，你就没法表达出英语语境下的意思，别人也无法理解你。对于计算机，它只是一台机器，所以，你必须严格的按照其语法来写代码，计算机才能认识你写的代码，并执行它。\n\n在VB/VBA中，是使用VBScript(VBS)来写代码的，VBScript是一种脚本语言，如果有其它计算机语言基础的话，那么学习VBS，不算一件难事。\n\n*注：关于VBS学习资料，可以在网上搜索并下载《VBSCRIPT 速查手册.chm》*\n\n### 数据类型\nVBScript 只有一种数据类型，称为 Variant。Variant 是一种特殊的数据类型，根据使用的方式，它可以包含不同类别的信息。因为 Variant 是 VBScript 中唯一的数据类型，所以它也是 VBScript 中所有函数的返回值的数据类型。\n\n最简单的 Variant 可以包含数字或字符串信息。Variant 用于数字上下文中时作为数字处理，用于字符串上下文中时作为字符串处理。这就是说，如果使用看起来象是数字的数据，则 VBScript 会假定其为数字并以适用于数字的方式处理。与此类似，如果使用的数据只可能是字符串，则 VBScript 将按字符串处理。当然，也可以将数字包含在英文引号 (\" \") 中使其成为字符串。\n\n#### Variant 子类型\n除简单数字或字符串以外，Variant 可以进一步区分数值信息的特定含义。例如使用数值信息表示日期或时间。此类数据在与其他日期或时间数据一起使用时，结果也总是表示为日期或时间。当然，从 Boolean 值到浮点数，数值信息是多种多样的。Variant 包含的数值信息类型称为子类型。大多数情况下，可将所需的数据放进 Variant 中，而 Variant 也会按照最适用于其包含的数据的方式进行操作。\n\n下表显示 Variant 包含的数据子类型：\n\n子类型 | 描述 \n--- | --- \nEmpty   | 未初始化的 Variant。对于数值变量，值为 0；对于字符串变量，值为零长度字符串 (\"\")。\nNull    | 不包含任何有效数据的 Variant。\nBoolean | 包含 True 或 False。\nByte    | 包含 0 到 255 之间的整数。\nInteger | 包含 -32,768 到 32,767 之间的整数。\nCurrency | -922,337,203,685,477.5808 到 922,337,203,685,477.5807。\nLong    | 包含 -2,147,483,648 到 2,147,483,647 之间的整数。\nSingle  | 包含单精度浮点数，负数范围从 -3.402823E38 到 -1.401298E-45，正数范围从 1.401298E-45 到 3.402823E38。\nDouble  | 包含双精度浮点数，负数范围从 -1.79769313486232E308 到 -4.94065645841247E-324，正数范围从 4.94065645841247E-324 到 1.79769313486232E308。\nDate (Time) | 包含表示日期的数字，日期范围从公元 100 年 1 月 1 日到公元 9999 年 12 月 31 日。\nString  | 包含变长字符串，最大长度可为 20 亿个字符。\nObject  | 包含对象。\nError   | 包含错误号。\n\n您可以使用转换函数来转换数据的子类型。另外，可使用 VarType 函数返回数据的 Variant 子类型。\n\n### 变量定义\n变量是一种使用方便的占位符，用于引用计算机内存地址，该地址可以存储 Script 运行时可更改的程序信息。在 VBScript 中只有一个基本数据类型，即 Variant，因此所有变量的数据类型都是 Variant。\n\n#### 变量声明\n声明变量的一种方式是使用 Dim 语句、Public 语句和 Private 语句在 Script 中显式声明变量。例如：\n```vbscript\nDim a ‘声明一个变量名为a的变量\nDim a As Integer ‘ 声明一个变量名为a的integer类型变量\n```\n声明多个变量时，使用逗号分隔变量。例如：\n`Dim Top, Bottom, Left, Right`\n对于数组的声明，可以通过变更名后面加（）来声明，例如\n`Dim b(2) ‘声明一个长度为3的数组`\n\n#### 变量赋值\n对于常量，可以使用const START = 3500来赋值\n对于变量，可以使用“=”来赋值，如`b(0) = 0 ‘数组下标起始值为0`\n`a = Array(0,1,2)`\n对于对象，需要使用Set来赋值，如\n```vbscript\nDim obj As Collection ‘声明obj是一个集合对象\nSet obj = new Collection ‘创建一个Collection对象并赋值给obj\n```\n### 运算符\nVBScript 有一套完整的运算符，包括算术运算符、比较运算符、连接运算符和逻辑运算符。\n\n当表达式包含多种运算符时，首先计算算术运算符，然后计算比较运算符，最后计算逻辑运算符。所有比较运算符的优先级相同，即按照从左到右的顺序计算比较运算符。算术运算符和逻辑运算符的优先级如下所示：\n\n\n#### 算术运算符              \n描述 | 符号\n--- | ---   \n求幂\t| ^\t\n负号\t| -\t\t\n乘\t    | *\t\n除\t    |   /\t\n整除\t|   \\\t\n求余\t| Mod\n加\t    | +\t\t \t \n减\t    | -\t \t \t \t \n字符串连接\t    | &\t \n\n#### 比较运算符\n描述 | 符号\n--- | --- \n等于 | =\t\n不等于\t| <>\n小于\t| <\t\n大于\t| >\t\n小于等于\t| <=\t\n大于等于\t| >=\t\n对象引用比较\t| Is\n\n#### 逻辑运算符\n描述 | 符号\n--- | --- \n逻辑非         |   Not\n逻辑与         |   And\n逻辑或         |   Or\n逻辑异或        |   Xor\n逻辑等价        |   Eqv\n逻辑隐含        |   Imp\n\n当乘号与除号同时出现在一个表达式中时，按从左到右的顺序计算乘、除运算符。同样当加与减同时出现在一个表达式中时，按从左到右的顺序计算加、减运算符。\n通过运行符，可以实现加，减，除等基本运算及大于，等于等比较操作。\n### 流程控制\n#### 分支流程\n好比遇到分叉路口，需要决定走哪条分支。\n```vbscript\nSub testIf()\n    If (a > 0) Then 'if 流程分支开始\n        Debug.Print (\"a more than 0\")\n    ElseIf (a = 0) Then '可以根据需要，添加0个或多个 ElseIf ... Then\n        Debug.Print (\"a equals 0\")\n    Else '剩下的流程\n        Debug.Print (\"a less than 0\")\n    End If '结束\nEnd Sub\n```\n#### 循环流程\n重复执行某些操作\n```vbscript\nSub testFor()\n    For i = 0 To 5 Step 2 '每循环一次，i自增step，如没有添加step，默认step是1\n        Debug.Print (i) '可以使用 exit for退出for循环\n    Next i\n    Debug.Print (\"last i is : \" & i)\nEnd Sub\n```\n### 过程与函数\n#### Sub 过程\nSub 过程是包含在 Sub 和 End Sub 语句之间的一组 VBScript 语句，执行操作但不返回值。Sub 过程可以使用参数（由调用过程传递的常数、变量或表达式）。如果 Sub 过程无任何参数，则 Sub 语句必须包含空括号 ()。\n```vbscript\nSub testArray()\n    Dim a\n    a = Array(1, 2, 3)\n    Debug.Print (a(0))\n    Dim b(2)\n    b(0) = 0\n    b(1) = 1\n    b(2) = 2\n    Debug.Print (b(2))\nEnd Sub\n```\n#### Function 过程\nFunction 过程是包含在 Function 和 End Function 语句之间的一组 VBScript 语句。Function 过程与 Sub 过程类似，但是 Function 过程可以返回值。Function 过程可以使用参数（由调用过程传递的常数、变量或表达式）。如果 Function 过程无任何参数，则 Function 语句必须包含空括号 ()。Function 过程通过函数名返回一个值，这个值是在过程的语句中赋给函数名的。Function 返回值的数据类型总是 Variant。\n```vbscript\nFunction func_smp() As String\n    func_smp = \"I am a simple function\"\nEnd Function\n\nFunction func_param(ByVal x As Integer, ByRef y As Integer) As Integer\n    func_param = x + y\nEnd Function\n```\n# VBA + Excel综合实例\n相信大家对前面的介绍有点烦了吧，我要学习的是VBA + Excel，干嘛整那么多枯燥乏味的VB呢？唉，其实我也不想的，不过，工欲善其事，必先利其器，先把基础学好了，打扎实了，总不会有错的，在现实生活中，要想学好一门知识，可不像武侠电视剧中，一下子学会九阳真经那么简单。下面就进入我们的实战练习吧。\n\n## 分析及设计\n相当于打腹稿吧，程序不是你想的那样，想写就写，分析的过程就是理解用户的需求，用户需要什么，一定要弄清楚了。设计呢，就是考虑程序该怎么写，好比建一幢楼，需要先设计，并不是想怎么写就怎么写，与其它模块有什么接口啦，应该保护什么数据啦。这些都是需要事先考虑或协商好的。\n\n### 分析\n需求很简单，就是用户输入TA的税前工资，然后可以计算出所扣的税，税后收入是多少，税率等级是多少。不过我在这里，多考虑一件事：税级。个税有两种，一种是含税级，一种是不含税级的，它们之间，除了计税等级不一样，其它的都是一样子滴。\n\n### 设计\n嗯，我想的是这样，我有一个类模块，在类模块初始化（创建）的时候，里面已经包含一些基本的信息了，如税率级，起征点，用户可以选择含税级或不含税级两种计税方式，不过，必须得事先设置好。然后用户输入一个数值，这个类可以计算出应缴纳的税款，税后收入，税率等级，关于计税算法呢，嗯，我就采用百度百科上的示例算法吧（根据对应的税率级按税率扣税，再减去速算扣除数）。然后我想，对应的税级，应缴税款，是根据税前工资决定的，你们可以读它，但是你不可以随意指定它（它必须是经过我计算得出的）。\n\n我再想得长远一点，这个计算器，如果比较受欢迎的话，或者考虑到没有安装Office的人也能够应用。我得将数据，与界面分离，以达到代码的重复利用。嗯，暂时就想这么多吧，下面开始写我们的代码吧。\n\n## VBA实战\n\n### 插入类模块\n右键单击工程资源管理器中的任意地方，插入类模块。\n{% asset_img image019.png %}\n并在属性窗口中将其重命名为：TaxPersonal。并双击此类模块，以打开代码编辑窗口。\n\n### 定义类属性\n定义如起征点等属性。\n```vbscript\nConst START = 3500 '起征点\nConst LEVEL_NUM = 7 '总级数\nPrivate pType As Integer ' 只允许写一次 0:含税级; 1:不含税级\nPrivate pName As String '只读属性\nPrivate array_p1, array_p2, array_p 'range\nPrivate array_rate 'rate\nPrivate array_deduct 'deduct\nPrivate pLevel 'level\nPrivate pTax 'tax\nPrivate pDiff As Single '\nPrivate pSalary ' salary before tax\n```\n这里，使用Private 声明变量，表示变量（属性）是私有的，别的工程不能访问它。\n\n### 添加构建函数\n定义一个构建函数，用来做一些初始化操作，比如税率。\n在代码窗口中，选择上方的第一个下拉列表中选择Class，再在第二个下拉列表中选择Initialize，来生成构建函数。\n{% asset_img image023.png %}\n注意，构建函数的名字是固定的，叫Class_initialize()\n然后我们填入代码，注意到纳税额数组，其长度为级数减1，因为超过80000，我们不好定义一个具体的上限值。纯粹是算法上的考虑。\n\n### 定义计税Sub\n我们定义一个方法来计算所得税\n```vbscript\n' 计算个人所得税\nPublic Sub calc(beforeTax As Single)\n  pSalary = CCur(beforeTax) '转为货币类型\n  If (pSalary <= START) Then '如果低于或等于起征点可以不用计算啦\n    pLevel = -1\n    pTax = 0\n    pDiff = 0\n  Else\n    pDiff = pSalary - START '计税部分\n    If (pType = 0) Then '含税级\n      array_p = array_p1\n    Else '不含税级\n      array_p = array_p2\n    End If\n    \n    For i = 0 To LEVEL_NUM - 2 ' 只算到<或=80000\n      If (pDiff <= CLng(array_p(i))) Then\n        pLevel = i\n        Exit For\n      End If\n    Next i\n    \n    If (i = LEVEL_NUM - 1) Then '超过了最后一级\n      pLevel = LEVEL_NUM - 1\n    End If\n    \n    ' 使用计税公式计算扣税\n    pTax = pDiff * array_rate(pLevel) / 100 - array_deduct(pLevel)\n    \n  End If\n  \nEnd Sub\n```\n定义属性读写方法\n```vbscript\n' 获取税后收入\nPublic Function afterTax() As Single\n  afterTax = pSalary - pTax\nEnd Function\n\n' 获取缴纳的个人所得税\nPublic Property Get tax() As Currency\n  tax = pTax\nEnd Property\n\n' 获取个人所得税级别\nPublic Property Get level() As Integer\n  level = pLevel + 1\nEnd Property\n\n' 获取个人所得税计算公式\nPublic Property Get Expression() As String\n  Expression = \"Level \" & level & \":\" & pSalary & \" - ((\" _\n  & pSalary & \" - \" & START & \") * \" & array_rate(pLevel) & \"% - \" & array_deduct(pLevel) & \")\"\nEnd Property\n\n```\n注意：获取个人所得税公式函数中，因为字符太长，使用 _ 换行写了。\n\n### 调试\n插入一个新模块，名字定义为TaxCalucator，再写一个test Sub来测试及调试我们将才写的类。\n\n在这里，我使用单步调试。\n{% asset_img image029.png %}\n不知道细心的朋友，有没有发现代码中有一处bug呢？\n\n呵呵，通过本地窗口，可以发现我鼠标选中的那一行，读取的level属性是不对滴，因为在未调用calc函数之前，它应该是默认的0才是。我在TaxPersonal类模块中定义的pLevel有效值是-1到6（内部定义，方便计算，因为数组下标是从0开始计算的），但给别人看的属性level是国家法律中规定的1到7。\n\n可以自己想想，在哪里，应该怎么修复此bug。\n\n## 在Excel中调用VBA\n终于到最后一步了：将VBA应用到Excel上去。\n首先在这里，特别讲一个Excel对象，其中ActiveSheet属性表示的是当前所在的WorkSheet。\n\n其中一个WorkSheet又是由单元格所组成，最左上角的单元格，其行数为1，列数为1。可以通过Cells(row,column)来获取单元格对象。通过写Value属性来修改单元格的值。有了这些知识。就可以很快地将TaxPersonal应用到表格上去了。\n\n### 新增AutoCalc Sub\n双击Sheet 1（2012个人所得税计算器）Sheet，添加AutoCalc Sub用来自动计算个税。代码如下：\n```vbscript\n\nPrivate Sub AutoCalc()\n  On Error GoTo ErrorHandle\n  Dim total, deduct, beforeTax, levelText\n  Dim taxObj As New TaxPersonal\n  levelText = Array(\"很抱歉，您还没有纳税资格！\", _\n  \"恭喜您，你已成为了国家纳税人！\", \"恭喜您，您应该是温饱不愁了吧？\", _\n  \"恭喜您，您已经迈入小康了！\", \"恭喜您，好好享受一下小资情调吧！\", \"恭喜您，您的收入已经达到中产阶级水平了\", _\n  \"恭喜您，您已经为成了名符其实的资产阶级\", \"恭喜您，国家会感谢您为国家所做的贡献的！\")\n  \n  total = Me.Cells(2, 2).value\n  deduct = Me.Cells(3, 2).value\n  If (IsNumeric(total)) Then\n    Cells(9, 1).value = \"\"\n    If (IsNumeric(deduct)) Then\n      Cells(9, 1).value = \"\"\n      beforeTax = CSng(total) - CSng(deduct)\n      taxObj.calc (beforeTax)\n      'Me.Cells(5, 2).value = beforeTax - taxObj.tax ' 我用Excel公式了，没使用VBA\n      Me.Cells(6, 2).value = taxObj.level '税级\n      Me.Cells(6, 3).value = taxObj.Expression\n      Me.Cells(7, 2).value = taxObj.tax\n      Me.Cells(7, 3).value = levelText(taxObj.level) '根据税级给出一个个性化的提示\n      Me.Cells(8, 2).value = taxObj.afterTax '税后收入\n      \n    Else\n      Cells(9, 1).value = \"请输入有效的扣除项\"\n    End If\n  Else\n    Cells(9, 1).value = \"请输入有效的税前收入\"\n  End If\n  \n  Exit Sub\nErrorHandle:\n  Cells(9, 1).value = \"哇，恭喜您为我找到一个BUG，错误：\" & Err.Description & \"，类型：\" & Err.Number\n  Err.Clear '最后别忘了清除Error对象\n\nEnd Sub\n\n```\n注意，我在代码中还添加了一个错误处理，当有错误产生时，会在最后一行中给出一些错误信息。如果有人发现了bug，可以将输入信息及错误信息发送到li.jamling@gmail.com\n\n### 调用AutoCalc Sub\n什么时候触发此Sub呢，我想单元格变更的时候吧，这样，当用户输入完税前工资后，就可以立即自动计算了。\n```vbscript\nPrivate Sub Worksheet_SelectionChange(ByVal Target As Range)\n  AutoCalc\nEnd Sub\n```\n选择WorkSheet的SelectionChange Sub，在Sub中调用AutoCalc Sub就可以了。\n\n## VBA工程的签名\n### 签名的好处\n为什么要签名呢？因为Office默认的宏安全级别为高，如果你的VBA工程未签名，那么默认情况下，此宏是被禁用的。\n\n签名之后，在打开有宏的Excel时，会弹出一个警告框，如下图所示：\n{% asset_img image035.png %}\n在勾选“总是相信来自此发布者的宏（A）”复选框时，下边的“启用宏(E)”按钮才可以点击。\n\n数字签名，还可以保护代码不被修改，如果代码修改过了，那么签名校验就不会通过。\n\n### 签名过程\n开始→程序→Microsoft Office→Microsoft Office工具→VBA项目的数字证书。\n{% asset_img image037.png %}\n{% asset_img image039.png %}\n输入您的证书名称后确定。\n在VBA 编辑器中，菜单栏工具→数字签名→选择刚才创建的证书即可。\n\n### VBA宏保护\n通过VBA的工程属性，可以设置一个工程进入密码，可以防止别人查看，修改你的VBA代码\n\n工具→工程属性，点击保护选项卡，输入工程保护密码即可\n{% asset_img image041.png %} \n\n## 练习\n在熟悉VBA之后，使用VBA实现一个《个体工商户的生产经营所得税计算器》。附录工程中包含答案。\n\n## 附录\n完整工程\n个人所得税计算器VBA工程：{% asset_link 个人所得税计算器.xls %}\n \n# 关于作者\nJamling，男，资深宅男，85年生，目前就职于南京一家软件公司，主要从事Java软件设计及研发。在工作之余，喜欢搞一些与软件相关的研究性课题，姑且算是一名技术宅吧。\n\nEmail: li.jamling@gmail.com\n\n注：\n后面我可能会再制作Excel VBA高级教程，面向的读者是已有VBA基础的读者。\n","categories":["其它"]},{"title":"Hexo your blog","url":"/2016/03/04/Web/Hexo-your-blog/","content":"\n# Overview\n\nThis article in an advanced guide to [hexo] your blog, you need to prepare the following knowledges:\n\n- Front-end: You must has certain knowledge of Web tech such as javascript, css, html and node.js template.\n- Layout: The [hexo] layout is the `view` of site, it's usually using a template to render.\n- Variables: The [hexo] variables, such as <var>site.posts</va>, <var>config</var>, <var>page</var>.\n- Helpers: The [hexo] helpers are used in templates to help you insert snippets quickly.\n\n<!-- more -->\n\n{% asset_img Hexo.png %}\n\nIf you has been prepared, I think it's no difficulty for you to make your blog a little change to others.\n\nIndex snippets:\n\n```htmlbars\n<div class=\"article-list\">\n  {%- for post in page.posts %}\n  <!-- output blog to html article tag -->\n  <article class=\"article post\" itemscope itemtype=\"http://schema.org/Article\">\n    <!-- article header: output title and date -->\n    <header class=\"article-header\">\n      <h1>\n        <a href=\"{{ url_for_lang(post.path) }}\" class=\"article-title\" itemprop=\"name\">{{ post.title }}</a>\n      </h1>\n      <a href=\"{{ url_for_lang(post.path) }}\" class=\"article-date\">{{ time_tag(post.date) }}</a>\n    </header>\n    <!-- output body: blog excerpt content -->\n    <section class=\"article-content\" itemprop=\"articleBody\">\n      {% if post.excerpt %}\n      {{ post.excerpt }}\n      {% endif %}\n    </section>\n    <footer class=\"post-item-footer\">\n      <!-- output blog categories and tags -->\n      {{ post_cates(post) }} \n      {{ post_tags(post) }}\n    </footer>\n  </article>\n  <hr>\n  {% endfor %}\n</div>\n\n```\n\nIndex output\n<div style=\"display:none;\">\n```htmlbars\n        <article class=\"article post\" itemscope itemtype=\"http://schema.org/Article\">\n          <header class=\"article-header\">\n              <h1>\n                <a href=\"/2016/05/14/tech-adb-mobile/\" class=\"article-title\" itemprop=\"name\">使用ADB连接手机</a>\n              </h1>\n            <a href=\"/2016/05/14/tech-adb-mobile/\" class=\"article-date\"><time datetime=\"2016-05-14T07:34:08.000Z\">2016-05-14</time></a>\n          </header>\n          <section class=\"article-content\" itemprop=\"articleBody\">\n            <h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>使用ADB连接手机进行调试，开发、文件传输</p>\n<p>使用adb文件传输优点：无需卸载或挂载SD卡</p>\n          </section>\n          <footer class=\"post-item-footer\">\n            <span class=\"glyphicon glyphicon-folder-close\" aria-hidden=\"true\"></span>&nbsp;分类<ol class=\"breadcrumb category\"><li><a class=\"\" href=\"/categories/软件技术/\">软件技术</a></li><li><a class=\"\" href=\"/categories/软件技术/奇淫巧技/\">奇淫巧技</a></li></ol> \n            \n          </footer>\n        </article>\n\t    <hr>\n        \n        <article class=\"article post\" itemscope itemtype=\"http://schema.org/Article\">\n        ...\n        </article>\n```\n</div>\n\n{% asset_img index_post.png %}\n\n# Theme\nIf you used theme published on https://hexo.io, please see the doc/guide of the theme.\n\nBut, sometimes, you want to make some change. You may edit the theme and make a little change. I think it's no difficulty for you.\n\nHowever, the theme may not meet you. I had want to find one theme to set up the site for my github project once, unfortunately, I found none that help me to build site quickly. So, I decided to create my own theme. And the guide based on [Nova].\n\nThe first thing is to design.\n\n## Design\n\nThe content is divided to three modules\n\n 1. Blog article\n It's a little different from other theme, include index, tags, categories, pagination basic function.\n \n It's two-columns layout, the main container is the post list or post detail, the aside container is widgets or toc.\n 2. Project page\n It's a sub layout of page, include project docs nagivator sidebar, project list, toc.\n \n It's three-columns layout, the main container is page content, and the left aside is project nagivator and the right aside is toc suffix\n 3. Other page\n Other fragment page, such as \"About me\".\n \n It's two-columns layout like blog article.\n\n##  Layout\n\nThe layout tree\n\n{% asset_img layout.png %}\n\nPlease see [nova layout](/en/p/hexo-theme-nova/layouts.html) for more information.\n\n# Plugin\nThere are many [plugins](https://hexo.io/plugins) of [hexo], it's easy to write a plugin under [hexo].\nJust write a <var>.js</var> under <var>scripts</var> in your theme.\n\nhere is a sample (<var>scripts</var>/<var>helpers.js</var>) to write a helper plugin to return page title.\n```js\n// return page title.\nhexo.extend.helper.register('page_title', function(page){\n  var p = page ? page : this.page;\n  var ret = '';\n  if (p.title2) {\n    ret = this.i18n(p.title2);\n  }\n  else if (p.title){\n    ret = p.title;\n  }\n  return ret;\n});\n```\n\nAnd another sample of display categories in post:\n```js\n// insert category of post\nhexo.extend.helper.register('post_cates', function(post, options){\n  var o = options || {};\n  var _class = o.hasOwnProperty('class') ? o.class : 'category-item';\n  var icon = o.hasOwnProperty('icon') ? o.icon : 'glyphicon glyphicon-folder-close';\n  var cats = post.categories;\n  var _self = this;\n  var ret = '';\n  if (cats == null || cats.length == 0) {\n      return ret;\n  }\n  ret += '<span class=\"post-category\">';\n  ret += '<i class=\"' + icon + '\"></i><span class=\"hidden-xs\">' + _self.__('category.label') + '</span>';\n  cats.forEach(function(item, i){\n    ret += '<a class=\"' + _class + '\" href=\"' + _self.url_for_lang(item.path) + '\">' + item.name + '</a>';\n  });\n  ret += '</span>';\n  return ret;\n});\n```\nUse in layout/post/index.swig\n\n```htmlbars\n{{ post_cates(post) }} \n```\nWill output:\n<pre>\n    <span class=\"post-category\"><i class=\"glyphicon glyphicon-folder-close\"></i><span class=\"hidden-xs\">分类</span><a class=\"category-item\" href=\"/categories/tech/\">软件技术</a><a class=\"category-item\" href=\"/categories/tech/Web/\">Web</a></span>\n</pre>\n\nThe [Nova] rewrite lost of helpers of [hexo] to simplify the style. Please visit [Helpers](/en/p/hexo-theme-nova/helpers.html) for more informations.\n\n# Front-matter\n\n{% blockquote Docs--- https://hexo.io/docs/front-matter.html %}\nFront-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.\n{% endblockquote %}\n\nSo you can use it to do lots of things.\n\nSee [Nova Front-matter](/en/p/hexo-theme-nova/front-matter.html) for more information.\n\n# Optimize\n\n## I18n\n\n[Nova] use [hexo-generator-i18n] to generate multi-languages site. The default languages is Chinese and <var>root</var>/<var>en</var> is Englisth site.\n\n## Highlight\n\nIt's a little of failure, code highlight style not work well in [Nova].\n```js\n  // highlight\n  hljs.initHighlightingOnLoad();\n  //hljs.configure\n  \n  $('pre code').each(function(i, block) {\n    hljs.highlightBlock(block);\n  });\n```\n\n## Image\n\nFind all images in article and add fancybox style.\n\n```js\n  $('.article').each(function(i){\n    $(this).find('img').each(function(){\n      /*if (!$(this).hasClass('img-responsive')) {\n      $(this).addClass('img-responsive')\n      }*/\n      if ($(this).parent().hasClass('fancybox')) return;\n\n      var alt = this.alt;\n\n      if (alt) $(this).after('<span class=\"funcybox-caption\">' + alt + '</span>');\n\n      $(this).wrap('<a href=\"' + this.src + '\" title=\"' + alt + '\" class=\"fancybox\"></a>');\n    });\n\n    $(this).find('.fancybox').each(function(){\n      $(this).attr('rel', 'article' + i);\n    });\n    \n    $(this).find('table').each(function(){\n      if (!$(this).hasClass('table-bordered')) {\n        $(this).addClass('table');\n        $(this).addClass('table-bordered');\n      }\n    });\n  });\n\n  if ($.fancybox){\n    $('.fancybox').fancybox();\n  }\n```\n\n## SEO\n\n[Nova] has three helper to enhance the SEO.\n\n- head_title: Generate optimized title string in &lt;title&gt;\n- head_keywords: Add tags/categores of post into keywords\n- head_description: **TODO, plan to add description in Front-matter and add post excerpt to description**\n\n## Donate\n\npartial/donate.swig support donate in article, the 2d-code images is under image folder.\n- donate_alipay.png: Donate via Alipay\n- donate_wechat.png: Donate via Wechat\n\n## Baidu site tools\nFor China.\nlogin [百度站长平台](http://zhanzhang.baidu.com/), and add your site then to verify.\n\nVerification\n\n* File verification \n    download baidu_xxxx_verify.html and upload to your site root dir to verify.\n* HTML tag verification \n    add `<meta name=\"baidu-site-verification\" content=\"xxx\" />`\n to your home .html\n* CNAME verification    \n    add a cname dns parser to zz.baidu.com\n\n    \n### tools\nAfter site added, you can do \n\n1. Post links    \n    I choose post my links automatically using following script\n```js\n<script>\n(function(){\n    var bp = document.createElement('script');\n    bp.src = '//push.zhanzhang.baidu.com/push.js';\n    var s = document.getElementsByTagName(\"script\")[0];\n    s.parentNode.insertBefore(bp, s);\n})();\n</script>\n```\n2. Update robots    \n    Update your robots.txt under your site root dir\n3. Search in sites    \n    Enable and add your script\n4. Social Share    \n    Custom your share style and add script\n5. Analytics   \n    Enable baidu analytics\n6, Feedback\n    Enable feedback\n7, Back to top\n    Useful function in mobile\n\n    \n[hexo]: https://hexo.io\n[Nova]: /en/p/hexo-theme-nova\n[hexo-generator-github]: http://github.com/Jamling/hexo-generator-github\n[hexo-generator-i18n]: http://github.com/Jamling/hexo-generator-i18n\n","tags":["Hexo","Node.js"],"categories":["Web"]},{"title":"Eclipse Explorer插件4.0","url":"/2016/01/03/Eclipse/Eclipse-explorer4/","content":"## 介绍\n\n![screenshot](http://dl.ieclipse.cn/screenshots/explorer.png)\n\nEclipse Explorer 是Eclipse中快速在资源管理器中定位eclipse资源的插件。它是目前史上最强大的eclipse explorer插件\n\n特色功能\n* 支持快捷键\n* 支持Windows/Mac/Linux系统\n* 支持自动选择文件（仅Windows系统）\n* 可以在文本编辑器中使用\n* 支持二次开发**`plugin fragment`** 来实现增强功能\n\n## Plugin fragments\n### Eclipse Explorer for Java\n### Eclipse Explorer for CDT\n\n更多的补丁插件等你来开发!\n\n## 安装\n### 应用市场\n  * 点击菜单栏Help->Eclipse Marketplace... 打开应用市场\n  * 输入关键字eclipse explorer进行搜索\n  * 点击Install按钮进行安装\n  * 允许安装未未签名的插件或信任来自Jamling/ieclipse.cn的签名\n  * 重启eclipse生效\n\n市场详情链接：[https://marketplace.eclipse.org/content/eclipse-explorer](https://marketplace.eclipse.org/content/eclipse-explorer)\n\n## 配置\n### 命令\n浏览命令: 本插件会自动根据操作系统自动配置浏览命令.当然用户也可以在 Window->Preference->General->Explorer中更改或重新配置.\n\n### 快捷键\n快捷键: 默认的快捷键为**Ctrl + `**, 当然您也可以在Window->Preference->General->Keys自己设置.\n\n## 教程\n  - 选择一个可以浏览的资源或元素\n  - 右键菜单中选择\"Open in Explorer\" 或按下设置的快捷键.\n\n## 开发\n可以参考[开发文档](http://www.ieclipse.cn/p/eclipse-explorer/develop.html)开发特定语言下的eclipse explorer插件\n\n[Jamling]: https://github.com/Jamling/\n","tags":["Eclipse"],"categories":["Eclipse 插件"]},{"title":"使用反射調用隱藏或內部API","url":"/2015/12/26/Android/Android-invoke-hide-api/","content":"## 內部API定義\n\n供Android内部使用，不向SDK开放的类、接口、方法等\n\n内部API出现的形式\n- Hide\n在public类，方法，（静态）常量使用了/** @hide */注释的java元素。如android.os.ServiceManager类\n- internal\n包名中带有internal标记的所有类或包，如com.android.internal.*\n<!-- more -->\n## 使用優缺點\n\n为什么不开放？\n- 版本复杂\n- 本身不稳定\n- 兼容性差\n\n优点：在特定的条件下使用，会产生意想不到的效果\n\n缺点：兼容性差\n\n**使用需谨慎**\n\n\n## 調用方式\n\n1. 和源代码一起编译\n2. 修改eclipse adt规则\n3. 使用java反射机制\n\n\n## Java反射簡介\n- 動態語言：允許程序在運行時改變程序結構及變量類型\n- Java反射：加載在運行時才知道的class及獲取/調用此類的所有屬性/方法。\n\n## Java反射API\nClass Class#forName(String className);\nConstructor Class#getConstructor();\nObject Class#newInstance();\nConstructor Class#getConstructor(Class<?>... constructorTypeParameters);\nObject Constructor#newInstance(Object... constructorParameterValues);\nMethod Class#getDeclaredMethod(String name, Class<?>... parameterTypes);\nObject Method#invoke(Object target, Object... parameterValues);\n\n## 示例\n獲取apk運行統計信息\n```java\n        // IBinder oRemoteService = ServiceManager.getService(\"usagestats\")\n        Class<?> cServiceManager = Class.forName(\"android.os.ServiceManager\");\n        Method mGetService = cServiceManager.getMethod(\"getService\", java.lang.String.class);\n        Object oRemoteService = mGetService.invoke(null, \"usagestats\");\n        // IUsageStats oIUsageStats = IUsageStats.Stub.asInterface(oRemoteService)\n        Class<?> cStub = Class.forName(\"com.android.internal.app.IUsageStats$Stub\");\n        Method mUsageStatsService = cStub.getMethod(\"asInterface\", android.os.IBinder.class);\n        Object oIUsageStats = mUsageStatsService.invoke(null, oRemoteService);\n        // PkgUsageStats[] oPkgUsageStatsArray = mUsageStatsService.getAllPkgUsageStats();\n        Class<?> cIUsageStatus = Class.forName(\"com.android.internal.app.IUsageStats\");\n        Method mGetAllPkgUsageStats = cIUsageStatus.getMethod(\"getAllPkgUsageStats\", (Class[]) null);\n        Object[] oPkgUsageStatsArray = (Object[]) mGetAllPkgUsageStats.invoke(oIUsageStats, (Object[]) null);\n        Class<?> cPkgUsageStats = Class.forName(\"com.android.internal.os.PkgUsageStats\");\n        for (Object pkgUsageStats : oPkgUsageStatsArray) {\n            // get pkgUsageStats.packageName, pkgUsageStats.launchCount,\n            // pkgUsageStats.usageTime\n            String packageName = (String) cPkgUsageStats.getDeclaredField(\"packageName\").get(pkgUsageStats);\n            int launchCount = cPkgUsageStats.getDeclaredField(\"launchCount\").getInt(pkgUsageStats);\n            long usageTime = cPkgUsageStats.getDeclaredField(\"usageTime\").getLong(pkgUsageStats);\n            System.out.println(packageName + \":\" + launchCount + \":\" + usageTime);\n        }\n```\n\n\n                    ","tags":["Android","Java"],"categories":["Android"]},{"title":"Eclipse Marketplace介绍（译）","url":"/2015/01/03/Eclipse/Eclipse-Marketplace/","content":"## 简介\nEclipse Marketplace是为了提供基于Eclipse解决方案、产品和附加特性。每月有成千上万的开发者访问Marketplace，基本上是寻找新的创新解决方案。受此驱动，解决方案提供商在Marketplace发布他们的产品以供Eclipse开发者社区使用。\n2010年6月，作为Helios版本的一部分，Eclipse内置了Marketplace客户端，带给Eclipse“应用商店”一样的体验。Marketplace客户端允许开发者直接在Eclipse中浏览和安装基于Eclipse的产品。\n<!-- more -->\n\n## 在Eclipse Marketplace发布您的产品\n1. 首先，在发布之前，您需要创建一个账号并登陆，Marketplace账号可以和Eclipse Bugzilla共用同一账号，如果您有需求，请点击这里创建账号。\n2. 只要您登陆到Eclipse Marketplace，您将可以在网站上方的导航栏中看到“Add Content\"连接。\nEclipse Marketplace允许发布内容有两种类型\n * 解决方案－可以被下载和安装的产品，可以是完整的产品、RCP应用程序或者插件。\n * 培训＆咨询－为公司提供的培训及咨询服务，期望在Eclipse Marketplace中做广告。\n3. 如果您已经将你的产品提交发布，它将出现在缓冲队列中，在之后的24小时内，通过审批后，将出现在Eclipse Marketplace中。\n4. 如果您想编辑产品，请访问面页上方导航栏上的“My Marketplace\"链接\n\n## 为Eclipse Marketplace客户端做准备\nEclipse Marketplace是2010年6发布的Eclipse Helios版本中的新特性。它带给开发者一种“应用商店”式的体验。旨在帮助开发者搜寻他们期望的Eclpse解决方案。上百万的Eclipse用户现在可以直接在Eclipse中看到Marketplace解决方案提供商。\nMarketplace客户端列出的解决方案包含Eclipse基金会会员的商业化解决方案和所有的开源解决方案。为确保您的产品能够出现Marketplace客户端中，请遵循以下步骤：\n\n1. 如果您有商业化的产品，您需要提供免费版本，Eclipse Marketplace中没有任何需要付费使用的商业化产品。\n2. 您的产品必须能够在某个Eclipse中安装，有点遗憾的是，Marketplace客户端不提供安装产品所信赖的Eclipse下载和安装。\n3. 为确保您的产品可以在Marketplace中出现和安装，有两个信息，您必须填写完整。\n 1. 产品能够支持从Eclipse p2更新站点下载，所以更新站点（Update Site) url必须填写正确。\n 2. 必须定义产品的默认安装，默认安装包含1个或多个可安装的特性,特性具有唯一标识ID。所以您需要指定默认特性的ID。如果提供特性信息，请详见后面的说明。\n4. 我们推荐您使用当前版本的Marketplace客户端测试您的产品，Eclipse3.6及其之后版本都内置了Marketplace客户端，您可以通过Help->Eclipse Marketplace打开客户端。\n\n＊更多信息请访问Marketplace客户端内容包容策略\n","tags":["Eclipse"],"categories":["Eclipse 插件"]},{"title":"Eclipse Marketplace发布指南（译）","url":"/2015/01/03/Eclipse/Eclipse-Publish-Guide/","content":"Marketplace发布指南旨在帮助您更好地了解我们如何确定哪些内容发布在Marketplace。我们的目标是将Marketplace变成一个内容丰富，相互关联与合作的社区。但在如今充斥着垃圾邮件制造者和恶做剧者的时代，也不可能存在一个完全不受监管的社区；所以我们制定了这个发布指南。\n<!-- more -->\n\n总而言之，在Marketplace发布的内容旨在传播与Eclipse相关的产品与服务。我们会以一种透明的方式尽力确保公平地对待社区中的每个人。同时我们也要求社区行为处于类似的行为中（意思是他们会做到公平，也要求社区中的发布者要遵循公平的原则）。举个例子，我们不鼓励试图个人操纵Marketplace使其产品达到更高的排名或贬低竞争对手的产品。如果我们认为有人行为不当，我们将（如果可能的话）通知他们，并且将其内容从站点中删除。\n\n为了尽早地了解我们如何操纵Marketplace，我们先回答一些常见的问题。\n\n1. 哪些项目需要审批？\n在发布到Marketplace之前的项目必须要经过Marketplace管理员的审批。我们会在项目提交之后的24小时内进行审批，如果您有任何问题，可以免费通过marketplace-support@eclipse.org联系内森，大多数的项目都是他审批的。\n\n2. 哪些项目清单可以提交到Marketplace?\nMarketplace中的产品和服务都是应用于或来源于Eclipse社区。因此，我们寻找的是那些使用Eclipse技术并且Eclipse社区感兴趣的产品和服务。Marketplace并不是一个提供一般软件的论坛，因此，如果您的产品与Eclipse不相关，很可能不会通过审批。\n\n3. 主页上新的／更新的插件是如何产生的？\n当一个插件第一次添加的时候，它将作为新插件靠前显示。更新的插件在新版本发布的时候也会靠前显示。如果插件标记为更新过（更新了描述信息），但插件本身实际上还是一样的，那么，它将不会靠前显示。\n4. 主页上最活跃的插件是如何产生的？\n最活跃的插件是根据用户（查看插件内容之后）点击进入插件主页的数目产生的。\n","tags":["Eclipse"],"categories":["Eclipse 插件"]},{"title":"Eclipse MPC内容管理策略（译）","url":"/2015/01/03/Eclipse/Eclipse-mpc-content/","content":"## 简介\nEclipse Marketplace Client(MPC)，是Eclipse新插件，它允许Eclipse用户在Marketplace上搜寻和安装基于Eclipse的产品。MPC的目的旨在为Eclipse社区提供AppStore式的体验。MPC将做为Eclipse的内置插件，在eclipse.org下载界面中列出的所有的Eclipse安装包都会包含此插件。\n<!-- more -->\n\n同时，Eclipse基金会用MPC来高亮Eclipse会员的解决方案。本文档的目的旨在描述哪些内容可以包含在MPC中的策略。\n\n## 声明\n* Eclipse Marketplace：托管于Eclipse基金会的Marketplace产品Marketplace：第三方的Marketplace产品\n* MPC：Eclipse中内置的客户端工具。\n\n## 使用\n1. 任何基于Eclipse的解决方案，可以在Eclipse Marketplace网站中列出。解决方案包含商业产品或开源License的产品／项目。解决方案提供商可以是非Eclipse Marketplace榜单中的Eclipse基金会会员。用户也可以通过浏览器来浏览Eclipse Marketplace中的所有解决方案。\n2. MPC有两种工作模式\n 1. MPC向导和MPC内置浏览器。MPC向导需要从Eclipse启动，并展现给终端用户。出现在MPC向导中的内容为：\n  1. 任何使用开源license的解决方案。\n  2. 与Eclipse基金会成员(不包含Eclipse准会员)公司有关的解决方案。在MPC向导中列出的初始特性列表，全都来源于基金会会员公司。搜索结果和展开目录的结果会包含所有的开源解决方案。\n3. MPC内置浏览器，在用户点击MPC中的“Browser More Solution\"时启动，在内置的浏览器中，展现的是所有的特性列表，就像使用正规的浏览器浏览Eclipse Marketplace时所看到的一样。\n\n用户可以在MPC中指定可选的Marketplace提供商。这些可选的提供商一般都包含一个可以在MPC中查看基于Eclipse解决方案的目录，终端用户可以自由切换Marketplace提供商。\n\n## 预加载\nEclipse基金会预先加载了Eclipse基金会战略成员的marketplace提供商。可选的提供商有义务做到以下几点：\n1. 提供与发布包一致的培训计划表\n2. 充分测试发布包并且能够提供相关支持\n3. 完全实现MPC定义的api和协议\n4. 相关资源所在的url必须7*24小时可访问，Eclipse基金会保留删除那些不可访问的提供内容的权利\n\nMPC允许指定可选的market，终端用户可以选择market。它是Eclipse战略合作成员预加载托管在基金会上的eclipse包的唯一可选市场\n\n[原文](https://marketplace.eclipse.org/content/marketplace-client-content-inclusion-policy)\n","tags":["Eclipse"],"categories":["Eclipse 插件"]},{"title":"RFC1939_POP3协议","url":"/2015/01/01/other/RFC1939_POP3_protocal_zh/","content":"## 1.简介\n\n　　对于在网络上的比较小的结点，支持消息传输系统（MTS）是不实际的。例如，一台\n工作站可能不具有充足的资源允许SMTP服务器和相当的本地邮件传送系统保持序驻留，\n并持续运行。同样的，将一台个人计算机长时间连接在IP类型网络上的费用也是可观的\n（结点缺少的资源被称为\"联络性\"）。\n\n　　虽然如此，在这样的小结点上允许管理邮件是十分有用的，并且这些结点经常支持一\n个用户代理来管理邮件。为解决这一问题，能够支持MTS的结点就为这些不能支持的结点提\n供了邮件存储功能。邮局协议-版本3就是使这样的工作站可以用一种比较实用的方法来访问\n存储于服务器上的储存邮件。通常，这意味着工作站可以从服务器上取得邮件，而服务器为\n它暂时保存邮件。\n\n<!-- more -->\n\n　　在下文中，客户主机指的是利用POP3服务的主机，而服务器主机指的是提供POP3服务的\n主机。\n\n## 2.简单说明\n\n　　在此文档中不指明客户主机如何将邮件送入到传送系统中去。但这里有一个说明：当用\n户代理需要将信息送到传送系统时，它在接力主机上建立SMTP连接（这些接力主机可以是\nPOP3主机，也可以不是）。\n　\n## 3.基本操作\n\n　　初始时，服务器通过侦听TCP端口110开始POP3服务。当客户主机需要使用服务时，它将\n与服务器主机建立TCP连接。当连接建立后，POP3发送确认消息。客户和POP3服务器相互（分\n别）交换命令和响应，这一过程一直要持续到连接终止。\n\n　　POP3命令由一个命令和一些参数组成。所有命令以一个CRLF对结束。命令和参数由可打\n印的ASCII字符组成，它们之间由空格间隔。命令一般是三到四个字母，每个参数却可达40个\n字符长。\n\n　　POP3响应由一个状态码和一个可能跟有附加信息的命令组成。所有响应也是由CRLF对结\n束。现在有两种状态码，\"确定\"(\"+OK\")和\"失败\"(\"-ERR\")。\n\n　　对于特定命令的响应是由许多字符组成的。在这些情况中，下面一一表述：在发送第一\n行响应和一个CRLF之后，任何的附加信息行发送，他们也由CRLF对结束。当所有信息发送结束\n时，发送最后一行，包括一个结束字符（十进制码46，也就是\".\"）和一个CRLF对。如果信息\n中的任何一行以结束字符开始，此行就是通过在那一行预先装入结束而进行字符填充的。因此，\n多行响应由五个CRLF.CRLF结束。当检测多行响应时，客户检测以确认此行是否以结束字符开\n始。如果是的，而且其后的字符不是CRLF，此行的第一个字符（结束字符）将被抛弃；如果其\n后紧跟CRLF，从POP服务器来的响应终止，包括.CRLF的行也不被认为是多行响应的一部分了。\n\n　　在生命周期中，POP3会话有几个不同的状态。一旦TCP连接被打开，而且POP3服务器发送了\n确认信息，此过程就进入了\"确认\"状态。在此状态中，客户必须向POP3服务器确认自己是其的\n客户。一旦确认成功，服务器就获取与客户邮件相关的资源，此时这一过程进入了\"操作\"状态。\n在此状态中，客户提出服务，当客户发出QUIT命令时，此过程进入了\"更新\"状态。在此状态中，\nPOP3服务器释放在\"操作\"状态中取得的资源，并发送消息，终止连接。\n\n　　POP3服务器可以拥有一个自动退出登录的记时器。此记时器必须至少可以记录10分钟。这样\n从客户发送的消息才可能刷新此记时器。当记时器失效时，POP3会话并不进入\"更新\"状态，而是\n关闭TCP连接，而且不删除任何消息，不向客户发送任何响应。\n　\n## 4.\"确认\"状态\n\n　　一时TCP连接由POP3客户打开，POP3服务器发送一个单行的确认。这个消息可以是由CRLF结\n束的任何字符。例如，它可以是：  \n　　S:+OKPOP3serverready\n\n　　注意：这个消息是一个POP3应答。POP3服务器应该给出一个\"确定\"响应作为确认。\n\n　　此时POP3会话就进入了\"确认\"状态。此时，客户必须向服务器证明它的身份。在文档中介绍\n两种可能的处理机制，一种是USER和PASS命令，另一种是在后面要介绍的APOP命令。\n\n　　用USER和PASS命令进行确认过程，客户必须首先发送USER命令，如果POP3服务器以\"确认\"状\n态码响应，客户就可以发送PASS命令以完成确认，或者发送QUIT命令终止POP3会话。如果POP3服\n务器返回\"失败\"状态码，客户可以再发送确认命令，或者发送QUIT命令。\n\n　　当客户发送了PASS命令后，服务器根据USER和PASS命令的附加信息决定是否允许访问相应的\n存储邮件。\n\n　　一旦服务器通过这些数据决定允许客户访问储存邮件，服务器会在邮件上加上排它锁，以防\n止在进入\"更新\"状态前对邮件的改变。如果成功获得了排它锁，服务器返回一个\"确认\"状态码。\n会话进入\"操作状态\"，同时没有任何邮件被标记为删除。如果邮件因为某种原因不能打开（例如，\n排它锁不能获得，客户不能访问相应的邮件或者邮件不能进行语法分析），服务器将返回\"失败\"\n状态码。在返回\"失败\"状态码后，服务器会关闭连接。如果服务器没有关闭连接，客户可以重新\n发送确认命令，重新开始，或者发送QUIT命令。\n\n　　在服务器打开邮件后，它为每个消息指定一个消息号，并以八进制表示每个消息的长度。第\n一个消息被指定为1，第二个消息被指定为2，以此类推，第N个消息被指定为N。在POP3命令和响应\n中，所以的消息号和长度以十进制表示。\n\n　　下面是对上述三条命令的总结：\n　\n　\n　\n## 5.\"操作\"状态\n　\n　　一旦客户向服务器成功地确认了自己的身份，服务器将锁住并打开相应的邮件，这时POP3会\n话进入\"操作\"状态。现在客户可以重复下面的POP3命令，对于每个命令服务器都会返回应答。最\n后，客户发送QUIT命令，会话进入\"更新\"状态。\n\n　　下面是在\"操作\"状态中可用的命令：\n　\n　\n　\n　\n　\n　　　\n## 6.\"更新\"状态\n\n　　当客户在\"操作\"状态下发送QUIT命令后，会话进入\"更新\"状态。（注意：如果客户在\"确认\"状\n态下发送QUIT后，会话并不进入\"更新\"状态。）\n　　如果会话因为QUIT命令以外的原因中断，会话并不进入\"更新\"状态，也不从服务器中删除任何\n信件。\n　\n　\n## 7.可选的POP3命令\n\n　　以上讨论的命令是对POP3服务的最小实现。以下说明的可选命令允许客户更方便地处理信件，\n这是一个比较一般的POP3服务实现。\n\n　　·TOPmsgn  \n　　【参数】一个是未被标记为删除的信件数，另一个是非负数（必须提供）  \n　　【限制】仅在\"操作\"状态下使用。  \n　　【说明】  \n　　如果服务器返回\"确认\"，响应是多行的。在初始的+OK后，服务器发送信件头，一个空行将信\n件头和信件体分开，对于多行响应要注意字节填充终止符。  \n\n　　注意：如果客户要求的行数比信件体中的行数大，服务器会发送整个信件。\n\n　　【响应】+OK：其后有信件头；  \n　　-ERR：其后无类似消息。  \n　　【例子】\n```\n　　C:TOP110\n　　S:+OK\n　　S:<服务器发送消息头，一个空行和信件的头10行>\n　　S:.\n　　...\n　　C:TOP1003\n　　S:-ERRnosuchmessage\n```\n　　·UIDL[msg]  \n　　【参数】信件数（可选）。如果给出信件数，不包括被标记为删除的信件。  \n　　【限制】仅在\"操作\"状态下使用。  \n　　【说明】  \n　　如果给出了参数，且POP3服务器返回包括上述信息的\"确认\"，此行称为信息的\"独立-ID表\"。  \n　　\n　　如果没有参数，服务器返回\"确认\"响应，此响应便以多行给出。在初的+OK后，对于每个信件，\n服务器均给出相应的响应。此行叫做信件的\"独立-ID表\"。  \n\n　　为简化语法分析，所有服务器要求使用独立-ID表的特定格式。它包括空格和信件的独立-ID。  \n　　\n　　信件的独立-ID由0x21到0x7E字符组成，这个符号在给定的存储邮件中不会重复。  \n　　\n　　注意：信件不包括被标记为删除的信件。  \n　　\n　　【响应】+OK：其后是独立-ID表；  \n　　-ERR：其后无类似信件。  \n　　【例子】  \n```\n　　C:UIDL\n　　S:+OK\n　　S:1whqtswO00WBw418f9t5JxYwZ\n　　S:2QhdPYR:00WBw1Ph7x7\n　　S:.\n　　...\n　　C:UIDL2\n　　S:+OK2QhdPYR:00WBw1Ph7x7\n　　...\n　　C:UIDL3\n　　S:-ERRnosuchmessage,only2messagesinmaildrop\n```\n　　·APOPnamedigest  \n　　【参数】指定邮箱的字串和MD5摘要串。  \n　　【限制】仅在POP3确认后的\"确认\"状态中使用。  \n　　【说明】通常，每个POP3会话均以USER/PASS互换开始。这导致了用户名和口令在网络上的显式\n传送，这不会造成什么危险。但是，许多客户经常连接到服务检查信件。通常间隔时间比较短，这就\n加大了泄密的可能性。\n另一种提供\"确认\"过程的方法是使用APOP命令。\n\n　　实现APOP命令的服务器包括一个标记确认的时间戳。例如：在UNIX上使用APOP命令的语法为：\nprocess-ID.clock@hostname，其中进程-ID是进程的十进制的数，时钟是系统时钟的十进制表示，主\n机名与POP3服务器名一致。\n\n　　客户记录下此时间戳，然后以送APOP命令。name语法和USER命令一致。Digest是采用MD5算法产\n生的包括时间戳和共享密钥的字串。此密钥是客户和服务器共知的，应该注意保护此密钥，如果泄密，\n任何人都能够以用户身份进入服务器。\n\n　　如果服务器接到APOP命令，它验证digest，如果正确，服务器返回\"确认\"，进入\"操作\"状态；否\n则，给出\"失败\"并停留在\"确认\"状态。\n\n　　注意：共享密钥的长度增加，解读它的难度也相应增加，这个密钥应该是长字符串。\n　　\n　　【响应】+OK：邮件锁住并准备好；  \n　　-ERR：拒绝请求。  \n　　【例子】  \n```\n　　S:+OKPOP3serverready<1896.697170952@dbc.mtview.ca.us>\n　　C:APOPmrosec4c9334bac560ecc979e58001b3e22fb\n　　S:+OKmaildrophas1message(369octets)\n```\n　　在此例子中，共享密钥<1896.697170952@dbc.mtview.ca.us>tanstaaf由MD5算法生成，它产生了\ndigest值，c4c9334bac560ecc979e58001b3e22fb\n\n## 8.POP3命令总结\n\n基础的POP3命令：  \nUSERname在\"确认\"状态有效  \nPASSstring  \nQUIT  \n\nSTAT在\"操作\"状态有效  \nLIST[msg]  \nRETRmsg  \nDELEmsg  \nNOOP  \nRSET  \n\nQUIT在\"更新\"状态有效\n　\n可选的POP3命令：  \nAPOPnamedigest在\"确认\"状态有效  \nTOPmsgn在\"操作\"状态有效  \nUIDL[msg]  \n\nPOP3响应：  \n+OK  \n-ERR  \n\n注意：除了STAT，LIST和UIDL的响应外，其它命令的响应均为\"+OK\"和\"-ERR\"。响应后的所有文\n本将被客户略去。\n\n## 9.POP3会话实例\n```\nS:<等待连接到TCP端口110>\nC:<打开连接>\nS:+OKPOP3serverready<1896.697170952@dbc.mtview.ca.us>\nC:APOPmrosec4c9334bac560ecc979e58001b3e22fb\nS:+OKmrose smaildrophas2messages(320octets)\nC:STAT\nS:+OK2320\nC:LIST\nS:+OK2messages(320octets)\nS:1120\nS:2200\nS:.\nC:RETR1\nS:+OK120octets\nS:<服务器发送信件1>\nS:.\nC:DELE1\nS:+OKmessage1deleted\nC:RETR2\nS:+OK200octets\nS:<服务器发送信件2>\nS:.\nC:DELE2\nS:+OKmessage2deleted\nC:QUIT\nS:+OKdeweyPOP3serversigningoff(maildropempty)\nC:<关闭连接>\nS:<等待下一次连接>\n```\n## 10.消息格式\n\n　　在会话过程中的消息格式都假定与Internet文本消息格式标准一致。应该注意的是，由于各\n个服务器对于换行符的处理不同，因此计数不一定相同。通常，在\"确认\"状态中，服务器能够以\n八进制计算信件的大小。例如，如果在打开储存邮件时服务器内部认定换行符代表一个字符，一\n般服务器在计算它时作为两个字符计。注意，以终止符开始的消息行不被计数两次，因为客户将\n在接收到多行响应后删除所有字节填充。\n\n## 11.安全性考虑\n\n　　可以推测，使用APOP命令可以提供会话期间的保护。相应的，同时实现PASS和APOP命令的服务\n器只允许用户以一种方式访问；也就是说要么使用USER/PASS组合，要么使用APOP命令，不能同时\n使用两个。\n\n　　而且，注意随着共享密钥长度的增加，解读的难度也就上升了。服务器要提供用户名时不给出\n任何响应，不给出任何暗示此用户名是否正确。而口令却在网络上显式传送；使用RETR和TOP命令\n在网络上显式传送信件\n","categories":["其它"]},{"title":"编译Android源代码","url":"/2015/01/01/Android/Android-Compile-Source/","content":"编译Android源代码\n本文介绍的是如何在linux环境下获取、编译源代码，并在编译之后运行。使用的操作系统为Ubuntu11.04\n<!-- more -->\n\n## 获取源代码\nAndroid源代码仓库是分布式的，叫做git，所以在获取代码之前先安装git。git与常用的svn，cvs不一样，但不必担心，android为了简化操作，使用python脚本语言写了一个简化程序叫做curl。只需要按以下步骤一步一步操作就行了。\n\n### 安装git及curl\n ``` bash\n $ sudo apt-get install git-core curl\n ```\n在此之前我已经安装了git, gitg（git的图形化工具）\n\n### 安装repo脚本\n```\n$ curl http://android.git.kernel.org./repo >~/repo\n```\n### 授权并建立本地仓库\n```\n$ chmod a+x ~/repo\n$ mkdir android-source\n$ cd android-source\n```\n### 初始化repo客户端\n```\n$ ~/repo init -u git://android.git.kernel.org/platform/manifest.git\n```\n但是使用git协议我连接不上服务器，使用http能够访问，所以我修改了repo文件\n```\nREPO_URL='http://android.git.kernel.org/tools/repo.git'\n```\n并输入下面的指令来初始化git\n```\n$ ~/repo init -u http://android.git.kernel.org/platform/manifest.git\n```\n如果你想取分支版本的话，那么请使用-b选项，如取2.2使用以下指令\n```\n$ ~/repo init -u git://android.git.kernel.org/platform/manifest.git -b froyo\n```\n注：froyo是2.2的版本名称\n### 检出源代码\n```\n$ ~/repo sync\n```\n到这里，可以休息一下了，慢慢下吧。然后接着去做一些编译前的准备工作吧。\n\n## 初始化编译环境\n### 安装jdk\n我机器上的JDK早就装好了。所以这里copy官网的安装指南\n对于Android 2.3及其更高版本，需要安装jdk1.6\n```\n$ sudo add-apt-repository \"deb http://archive.canonical.com/ lucid partner\"\n$ sudo add-apt-repository \"deb-src http://archive.canonical.com/ubuntu lucid partner\"\n$ sudo apt-get update\n$ sudo apt-get install sun-java6-jdk\n```\n对于Android 2.2及其以下版本，需要安装jdk1.5\n```\n$ sudo add-apt-repository \"deb http://archive.ubuntu.com/ubuntu dapper main multiverse\"\n$ sudo add-apt-repository \"deb http://archive.ubuntu.com/ubuntu dapper-updates main multiverse\"\n$ sudo apt-get update\n$ sudo apt-get install sun-java5-jdk\n```\n### 安装一些必备包\n在安装之前，首先看一下，你的系统是多少位的。不同位的系统安装的包不一样\n64位系统\n```\n$ sudo apt-get install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev libc6-dev\n  lib32ncurses5-dev ia32-libs x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev libgl1-mesa-dev\n```\n32位系统\n```\n$ sudo apt-get install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev libc6-dev\n  libncurses5-dev x11proto-core-dev libx11-dev libreadline5-dev libz-dev libgl1-mesa-dev\n```\n官网原文注：如果在64位的系统中编译2.2或之前的版本，可能需要安装以下额外的包来构造32的编译环境。\n```\n$ sudo apt-get install gcc-multilib g++-multilib libc6-i386 libc6-dev-i386\n```\nNND，我编译的是2.3，所以没有安装这些包。所以我直接去make了。但是make失败了。有个错误是/usr/bin/ld: cannot find -lstdc++ \nurl is : http://ubuntuforums.org/showthread.php?t=15120\n郁闷，后来google了一下，有大侠也遇到过这问题，安装g++-multilib就好了。\n所以我又安装了g++\n```\n$ sudo apt-get install g++ g++-multilib\n```\n### 配置USB的访问\n在GUN／LINUX（尤其是Ubuntu),默认情况是不允许用户直接访问USB设备的。需要以下配置来允许访问USB\n推荐的方式是在/etc/udev/rules.d/目录下建立一个51-android.rules的文件（注意了，必须以root用户），并将以下内容写入到文件中\n```\n# adb protocol on passion (Nexus One)\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"18d1\", ATTR{idProduct}==\"4e12\", MODE=\"0600\", OWNER=\"<username>\"\n# fastboot protocol on passion (Nexus One)\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"0bb4\", ATTR{idProduct}==\"0fff\", MODE=\"0600\", OWNER=\"<username>\"\n# adb protocol on crespo (Nexus S)\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"18d1\", ATTR{idProduct}==\"4e22\", MODE=\"0600\", OWNER=\"<username>\"\n# fastboot protocol on crespo (Nexus S)\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"18d1\", ATTR{idProduct}==\"4e20\", MODE=\"0600\", OWNER=\"<username>\"\n```\n注：username必须替换为此文件的所有者。\n\n我使用的是sudo gedit创建文件，然后查看了一下属性，拥有者为root，所以把<username>替换为root了。\n\n## 编译\n### 初始化环境\n使用build/setupenv.sh脚本来初始化编译环境。使用\n```\n$ source build/envsetup.sh\n```\n或\n```\n$ . build/envsetup.sh\n```\n都可以\n### 选择目标版本\n例如\n```\n$ lunch full-eng\n```\n是一个开启所有调试的编译\n详细的目标版本选择请见官网。\n### 编译\n```\n$ make\n```\n以上准备工作做好了之后，终于到了最紧张的时刻了，以致于都没把-jN参数加上去，我电脑双CPU，4核双线程，加个-j16是不是会编译快些呢？我都写好这文档了，还在编译中呢。唉。不过还是挺高兴的。前天还刚接触linux系统，基本的linux指令都不会呢。\n\n## 小结\n公司有网络就是好哇，在以前公司，都是封闭式办公的，有时候遇到一个小问题，搞不好会阻塞一整天。不过网络信息量太大。如何找到权威而全面的资料是很重要的。我优先是参考官网相关的文档的。对于具体问题，先静下心来分析，然后一步步解决。当然也可以问前辈，可以省去不少时间。\n## 参考资料\n\nhttp://source.android.com\n","tags":["Android"],"categories":["Android"]},{"title":"ADT extensions","url":"/2015/01/01/Android/Android-adt-extensions/","content":"## Introduction\n![Alt text] (adt_ext_new_activity.png?200)\n\nQuickly new Activity/Service/BroadcastReceiver/ContentProvider in Android Project with a wizard and configurate in AndroidManifest.xml.\n\nMain function list:\n  - New Activity/Service/BroadcastReceiver.\n  - Customize action and category for intent-filter.\n  - New ContentProvider.\n  - Customize authorities for ContentProvider.\n\n<!-- more -->\n\nNotes:\n  * The publish version is based on Eclipse development version, 3.5 is the initial version.\n  * This plugin is developed under Eclipse 3.5 + JDK 1.5.\n  * Test under jdk 1.5 + eclipse 3.5 Win(32bit) OS and jre 1.6 + eclipse 3.6 Linux(64bit) OS\n\n## Install\n### Marketplace client\n  - Click \"Help->Marketplace\" in Eclipse\n  - Search \"ADT \" as keyword to find \"Android ADT extentions\" plugin in result.\n  - Click \"Install\"\n\n### Local update site\n  - Click Help->Install New Software... in Eclipse to open install page\n  - Input \"http://ieclipse.cn/updates/adt-ext\" press \"Enter\" key\n  - Select ADT extentions feature to install after pending\n\n### Local update site\n  * Click Help->Install New Software... in Eclipse to open install page\n  * Click \"Add...\" button open add site dialog\n  * Click \"Archive...\" button to select .zip file.\n  * Click \"OK\" back to install page\n  * Select ADT extentions feature to install\n\n## Tutorial\n ### New Activity\n   -  Choose a package right click and select \"New->Others\" in popups menu.\n   -  Select New Activity under Android category.(If you work in java perspective, New Activity would be visible popups menu.) to open wizard page.\n   -  Check \"with super suffix\" to add super suffix to type name.(such with a Activity suffix)\n   -  Select methos stubs which you want to create.\n   -  Click \"Add...\" to add System action/category\n   -  Click \"Remove...\" to remove selected action/category\n   -  Click \"Add custom\" in popups to add custom action/category\n   -  Click \"Up/Down\" to sort selected action/category\n   -  Double click to edit seleted action/category \n\n### New Provider\n   -  See New Activity steps to open New Provider wizard page\n   -  Input authorities for provider \n\n## Screenshot\n\nsee <https://Jamling.github.com/adt-extensions/wiki/Screenshot>.\n\n## Reference\n\nhttps://Jamling.github.com/adt-extensions","tags":["Android","Eclipse","ADT"],"categories":["Android"]},{"title":"Thread.join()在AsyncTask中的妙用","url":"/2012/06/08/Android/Android-Thread-join-in-AsyncTask/","content":"## 问题\n在Android Email当中，在设置接收服务器和发送服务器时，点击下一步，系统会弹出进度框，并执行服务器设置检验。如果用户设置信息不正确，在执行校验时，大约会花1分钟的时间去校验，最后才会提示设置信息不正确。如果用户在等待过程中点击了“取消”，然后再点下一步，发会现，不再弹出等待提示框，也不执行校验了。\n<!-- more -->\n## 分析\n\n通过分析源码发现，在点击“下一步”执行校验时，会执行一个AsyncTask，在doIngBackground（）中，去打开socket连接，完成相应的校验。同时弹出一个等待提示框。如果用户点击“取消”, 会终止此AsyncTask，并重新生成一个AsyncTask并执行。\n\n但通过debug发现，后面的AsyncTask并没有真正执行。原因是因为前面的Task阻塞在了联网校验上。通过查阅Android文档得知，AsyncTask，是异步处理类。它会新生成一个线程去执行doInBackground。对外，开发者不能获取此线程的引用，就算获取到了，对于像socket连接或IO操作会导致阻塞的作业，强行interrupt线程并不能退出阻塞。\n\n## 结论\n\n所以为避免之后的AsyncTask能够被正常执行，请记住:\n\n不要阻塞doInBackground()，我们应该新建一个线程来完成可能导致阻塞的操作。\n\n## 解决方法\n\n**使用Thread.join()**\n```java\n@Override  \nprotected Object doInBackground(Void... params) {  \n    Thread thread = new Thread(){  \n           public void run(){  \n                  mResult = getFromServer();// 从网络上获取数据  \n           }  \n    };  \n    thread.start();  \n    try{  \n        thread.join(); // 阻塞当前线程，等待thread执行完毕，可以带参数，最多等待多长时间  \n    } catch (InterruptedException e) {  \n        // Thread.join()可以被interrupt，调用AsyncTask.cancel(true);即可退出等待  \n        return null;  \n    }\n}\n```","tags":["Android","Java"],"categories":["Android"]},{"title":"Android平台邮件自动发送功能实现","url":"/2012/03/01/Android/Android-send-email-background/","content":"## 简介\n本文简述的是在Android平台如何自动发送邮件（没有邮件编写界面），主要应用场景为忘记密码等安全等级较高的操作，比如我忘记密码了，点击“发送密码到我的邮箱”系统会将密码发送到注册时的电子邮件地址。\n<!-- more -->\n## Android平台邮件客户端\n\n- Gmail: Gmai电子邮件客户端\n- Email: 通用的电子邮件客户端\n\n \n## 解决方案\n### Gmail\n\nGmail已经支持自动发送了，所以非常简单。在使用时，需要添加\n`<uses-permission android:name=\"com.google.android.gm.permission.AUTO_SEND\" />`\n到AndroidManifest.xml\n\n示例代码如下：\n```\n    Intent intent = new Intent(\"com.google.android.gm.action.AUTO_SEND\");  \n    intent.setType(\"plain/text\");  \n    String[] reciver = new String[] { \"xxxx@xxx.com\" };  \n    String subject = \"email title\";  \n    String body = \"email body\";  \n    intent.putExtra(android.content.Intent.EXTRA_EMAIL, reciver);  \n    intent.putExtra(android.content.Intent.EXTRA_SUBJECT, subject);  \n    intent.putExtra(android.content.Intent.EXTRA_TEXT, body);  \n```\n### Email\n\nEmail不支持自动发送，但又是默认邮件客户端，所以需要添加自动发送功能。主要实现步骤为：\n\n#### 编写一个自动发送邮件类\n\n主要功能为：接收用户输入，组装message对象，获取Sender实例，将message发送出去，最后删除message对象（这样已发送的邮件内容不会出现在client中，提高发安全性）\n\nJava代码\n```\n    package com.android.email.activity;  \n      \n    import android.app.Activity;  \n    import android.app.ProgressDialog;  \n    import android.content.ContentUris;  \n    import android.content.Context;  \n    import android.content.Intent;  \n    import android.os.AsyncTask;  \n    import android.os.Bundle;  \n    import android.text.TextUtils;  \n    import android.util.Log;  \n    import android.view.View;  \n    import android.view.Window;  \n    import android.net.Uri;  \n    import android.widget.Toast;  \n      \n    import com.android.emailcommon.provider.EmailContent;  \n    import com.android.emailcommon.provider.EmailContent.Account;  \n    import com.android.emailcommon.provider.EmailContent.Message;  \n    import com.android.emailcommon.mail.MessagingException;  \n    import com.android.emailcommon.mail.Address;  \n    import com.android.emailcommon.utility.Utility;  \n    import com.android.emailcommon.mail.AuthenticationFailedException;  \n    import com.android.email.EmailAddressValidator;  \n    import com.android.email.mail.Sender;  \n      \n    /** \n     * Send email in background with account configured in Email application. \n     * Sending message will not saved as draft or in out-going box. Usage: \n     *  \n     * <pre> \n     * Intent intent = new Intent(&quot;com.android.email.intent.action.sendInBack&quot;); \n     * String[] reciver = new String[] { &quot;your_name@corp.com&quot; }; \n     * String subject = &quot;email title&quot;; \n     * String body = &quot;email body &quot;; \n     * intent.putExtra(android.content.Intent.EXTRA_EMAIL, reciver[0]); \n     * intent.putExtra(android.content.Intent.EXTRA_SUBJECT, subject); \n     * intent.putExtra(android.content.Intent.EXTRA_TEXT, body); \n     * startActivityForResult(Intent.createChooser(intent, &quot;send&quot;), 0x02); \n     * </pre> \n     *  \n     * Now, attachment and multi-receiver function is unsupported. \n     *  \n     * @author melord \n     *  \n     */  \n    public class EmailSendAutoActivity extends Activity implements SendListener {  \n      \n        private static String tag = \"EmailSendAutoAcitivity\";  \n        private Context mContext;  \n      \n        private String mTo;  \n        private String mCc;  \n        private String mBcc;  \n        private String mSubject;  \n        private String mBody;  \n      \n        private EmailAddressValidator mValidator = new EmailAddressValidator();  \n        private SendListener mListener;  \n        private Toast mWaiting;  \n        private boolean enableLog = true;  \n      \n        /** \n         * Sending account email address. \n         */  \n        private String mSendEmail;  \n        /** \n         * Sending account id \n         */  \n        private long mAccountId = -1;  \n      \n        @Override  \n        protected void onCreate(Bundle savedInstanceState) {  \n            super.onCreate(savedInstanceState);  \n            this.mContext = this;  \n            requestWindowFeature(Window.FEATURE_NO_TITLE);  \n      \n            mListener = this;  \n            Intent intent = getIntent();  \n            initMessageFromIntent(intent);  \n            initAccountFromIntent(intent);  \n      \n            new SendTask().execute();  \n            String msg = intent.getStringExtra(\"sendMsg\");  \n            if (msg == null) {  \n                msg = \"Sending message...\";  \n            }  \n            // mWaiting = ProgressDialog.show(this, \"\", \"sending...\", true, true,  \n            // null);  \n            mWaiting = Toast.makeText(this, msg, Toast.LENGTH_LONG);  \n            mWaiting.show();  \n        }  \n      \n        @Override  \n        public void onBackPressed() {  \n            if (mWaiting != null) {  \n                mWaiting.cancel();  \n            }  \n            super.onBackPressed();  \n        }  \n      \n        @Override  \n        public void finish() {  \n            if (mWaiting != null) {  \n                mWaiting.cancel();  \n            }  \n            super.finish();  \n        }  \n      \n        /** \n         * Initialize sending account from intent. \n         *  \n         * @param intent \n         *            imcoming intent \n         */  \n        private void initAccountFromIntent(Intent intent) {  \n            String email = intent.getStringExtra(\"sendAccount\");  \n            if (email != null) {  \n                log(String.format(\"send email use account (%s) \", email));  \n                mSendEmail = email;  \n                Long[] ids = EmailContent.Account.getAllAccountIds(this);  \n                if (ids != null && ids.length > 0) {  \n                    for (int i = 0; i < ids.length; i++) {  \n                        EmailContent.Account temp = EmailContent.Account  \n                                .restoreAccountWithId(this, ids[i]);  \n                        if (temp != null && email.equals(temp.getEmailAddress())) {  \n                            log(\"valid account\");  \n                            mAccountId = ids[i];  \n                            break;  \n                        }  \n                    }  \n                }  \n            }  \n        }  \n      \n        /** \n         * Initialize message from intent. \n         *  \n         * @param intent \n         *            intent \n         */  \n        private void initMessageFromIntent(Intent intent) {  \n            String to = intent.getStringExtra(Intent.EXTRA_EMAIL);  \n            mTo = composeAddress(to);  \n      \n            String cc = intent.getStringExtra(Intent.EXTRA_CC);  \n            mCc = composeAddress(cc);  \n      \n            String bcc = intent.getStringExtra(Intent.EXTRA_BCC);  \n            mBcc = composeAddress(bcc);  \n      \n            mSubject = intent.getStringExtra(Intent.EXTRA_SUBJECT);  \n      \n            mBody = intent.getStringExtra(Intent.EXTRA_TEXT);  \n      \n            log(\"to:\" + mTo);  \n            log(\"cc:\" + mCc);  \n            log(\"bcc:\" + mBcc);  \n      \n        }  \n      \n        /** \n         * change to stand email address reference to Rfc822 \n         *  \n         * @param address \n         *            email address \n         * @return RFC822 format email address \n         */  \n        private String composeAddress(String address) {  \n            String addr = null;  \n            if (!TextUtils.isEmpty(address)) {  \n                Address[] addresses = Address.parse(address.trim());  \n                addr = Address.pack(addresses);  \n            }  \n            return addr;  \n        }  \n      \n        /** \n         * Update message. fill fields. \n         *  \n         * @param message \n         *            email message \n         * @param account \n         *            sending account \n         */  \n        private void updateMessage(Message message, Account account) {  \n            if (message.mMessageId == null || message.mMessageId.length() == 0) {  \n                message.mMessageId = Utility.generateMessageId();  \n            }  \n            message.mTimeStamp = System.currentTimeMillis();  \n            // it will : Name<Address>  \n            message.mFrom = new Address(account.getEmailAddress(), account  \n                    .getSenderName()).pack();  \n            message.mTo = mTo;  \n            message.mCc = mCc;  \n            message.mBcc = mBcc;  \n            message.mSubject = mSubject;  \n            message.mText = mBody;  \n            message.mAccountKey = account.mId;  \n            // here just used account setting simply  \n            message.mDisplayName = account.getSenderName();  \n            message.mFlagRead = true;  \n            message.mFlagLoaded = Message.FLAG_LOADED_COMPLETE;  \n      \n        }  \n      \n        private void log(String msg) {  \n            if (enableLog) {  \n                Log.i(tag, msg);  \n            }  \n        }  \n      \n        /** \n         * Really send message. \n         *  \n         * @param account \n         *            sending account \n         * @param messageId \n         *            message id \n         */  \n        public void sendMessage(Account account, long messageId) {  \n            // message uri  \n            Uri uri = ContentUris.withAppendedId(EmailContent.Message.CONTENT_URI,  \n                    messageId);  \n            try {  \n                // get a sender, ex. smtp sender.  \n                Sender sender = Sender.getInstance(mContext, account  \n                        .getSenderUri(mContext));  \n                // sending started  \n                mListener.onStarted(account.mId, messageId);  \n                // sending  \n                sender.sendMessage(messageId);  \n                // send completed  \n                mListener.onCompleted(account.mId);  \n      \n            } catch (MessagingException me) {  \n                // report error  \n                mListener.onFailed(account.mId, messageId, me);  \n            } finally {  \n                try {  \n                    // delete this message whenever send successfully or not  \n                    mContext.getContentResolver().delete(uri, null, null);  \n                } catch (Exception ex) {  \n                    Log.w(tag, \"delete message occur exception message uri:\" + uri);  \n                }  \n            }  \n        }  \n      \n        public void onCompleted(long accountId) {  \n            log(\"send mail ok\");  \n            // return Activity.RESULT_OK when send successfully  \n            setResult(RESULT_OK);  \n            finish();  \n        }  \n      \n        public void onFailed(long accountId, long messageId, Exception ex) {  \n            log(\"send mail failed : \" + ex.toString());  \n            finish();  \n        }  \n      \n        public void onStarted(long messageId, long accountId) {  \n            log(\"send mail started\");  \n        }  \n      \n        /** \n         * Send message task, it is an async task \n         *  \n         * @author melord_li \n         *  \n         */  \n        private class SendTask extends AsyncTask<Void, Void, Void> {  \n            @Override  \n            protected Void doInBackground(Void... params) {  \n                // get default account, if not set, first record is treated as  \n                // default.  \n                // long id = Account.getDefaultAccountId(mContext);  \n                long id = mAccountId;  \n                if (id < 0) {  \n                    id = Account.getDefaultAccountId(mContext);  \n                }  \n                if (id < 0) {  \n                    Log.w(tag, \"no account exists\");  \n                    finish();  \n                    return null;  \n                }  \n                // get full account message  \n                Account account = Account.restoreAccountWithId(mContext, id);  \n      \n                // A empty message  \n                Message message = new Message();  \n                // fill message field  \n                updateMessage(message, account);  \n      \n                // Save this message. Because send API will read message in message  \n                // db.  \n                Uri uri = message.save(mContext);  \n                if (uri == null) {  \n                    Log.e(tag, \"save message occured an error\");  \n                    finish();  \n                    return null;  \n                }  \n      \n                // send  \n                sendMessage(account, message.mId);  \n                return null;  \n            }  \n        }  \n    }  \n      \n    /** \n     * Sending monitor \n     *  \n     * @author melord \n     *  \n     */  \n    interface SendListener {  \n      \n        /** \n         * Send failed. \n         *  \n         * @param accountId \n         *            account id \n         * @param messageId \n         *            message id \n         * @param ex \n         *            exception \n         */  \n        void onFailed(long accountId, long messageId, Exception ex);  \n      \n        /** \n         * Send begin. \n         *  \n         * @param accountId \n         *            account id \n         * @param messageId \n         *            message id \n         */  \n        void onStarted(long messageId, long accountId);  \n      \n        /** \n         * Send completed. \n         *  \n         * @param accountId \n         *            account id \n         */  \n        void onCompleted(long accountId);  \n    }  \n```\n#### 配置\nXml代码\n```xml\n    <activity android:name=\".activity.EmailSendAutoActivity\" android:theme=\"@android:style/Theme.Translucent\">  \n        <intent-filter>  \n            <action android:name=\"com.android.email.intent.action.sendInBack\"/>  \n            <data android:mimeType=\"*/*\" />  \n            <category android:name=\"android.intent.category.DEFAULT\" />  \n        </intent-filter>  \n    </activity>  \n```\n#### 使用\nJava代码\n```Java\n    Intent intent = new Intent(\"com.android.email.intent.action.sendInBack\");  \n    String[] reciver = new String[] { \"yourname@corp.com\" };  \n    String subject = \"email title\";  \n    String body = \"email body\";  \n    intent.putExtra(android.content.Intent.EXTRA_EMAIL, reciver[0]);  \n    intent.putExtra(android.content.Intent.EXTRA_SUBJECT, subject);  \n    intent.putExtra(android.content.Intent.EXTRA_TEXT, body);  \n      \n    startActivityForResult(Intent.createChooser(intent, \"send\"), 0x02);  \n```\n#### 处理回调\n\n如果发送成功，会返回Activity.RESULT_OK。\n","tags":["Android"],"categories":["Android"]},{"title":"使用Android NDK编译OpenCV应用","url":"/2011/08/01/Android/Android-Complie-OpenCV/","content":"## 简介\n在linuxt系统下使用OpenCV2.3 + NDK R6编译 OpenCV人脸检测应用\n<!-- more -->\n\n## 准备\n- Android NDK ( r5或更高版本) \n下载地址：http://developer.android.com/sdk/ndk/index.html\n- OpenCV Android包 \nhttp://sourceforge.net/projects/opencvlibrary/files/opencv-android/2.3/\n- cmake(可选，替代NDK)\n参考：http://www.cmake.org/\n\n*注：http://code.google.com/p/android-opencv/网站上说要使用crystax ndk r4代替NDK。估计可能是对于较旧的Android版本需要这样。如果NDK无法编译，请尝试使用crystax ndk r4编译。*\n\n### OpenCV设置\n从网站上下载OpenCV 2.3.0 for Android 后，解压到某个目录，如~/目录下\n设置OPENCV_PACKAGE_DIR环境变量\n`$ export OPENCV_PACKAGE_DIR=~/enCV-2.3.0/`\n\n## 步骤\n### 新建一个Android工程\n在eclipse中新建一个android 工程如study.opencv，并且在工程根目录下新建一个名为jni的目录。将下载的android-ndk-r6解压到某个目录下，如~/\n从~/android-ndk-r6/sample下某个sample中拷贝Android.mk, Application.mk到study.opencv/jni目录\n\n### 设置编译脚本\n在Android.mk中，include $(CLEAR_VARS)后面，加入下行\n`include $(OPENCV_PACKAGE_DIR)/$(TARGET_ARCH_ABI)/share/opencv/OpenCV.mk`\n如果应用支持ARM NEON那么还需要加入以下行\n```\ninclude $(OPENCV_PACKAGE_DIR)/armeabi-v7a-neon/share/opencv/OpenCV.mk\nLOCAL_ARM_NEON := true\n```\n在Application.mk中加入以下行\n```\n APP_STL := gnustl_static\n APP_CPPFLAGS := -frtti -fexceptions\n```\n注：关于Android.mk与Application.mk的详细说明，请参考ndk/docs下Android-mk.html和Application-mk.html。\n\n### Java层定义native接口\n新建study.opencv.FaceRec类，定义一个人脸检测的本地接口\n```\n\t/**\n\t * detect front face from image.\n\t * \n\t * @param xml\n\t *            opencv haarcascade xml file path\n\t * @param infile\n\t *            input image file path\n\t * @param outfile\n\t *            output image file path\n\t */\n\tpublic native void detect(String xml, String infile, String outfile);\n```\n\n### 生成jni头文件\n使用javah命令生成jni头文件\n```\n$ cd ~/workspace/study.opencv/bin\n$ javah study.opencv.FaceRec\n```\n会在bin目录生成一个study_opencv_FaceRec.h文件。将此文件拷贝到../jni目录中\n\n注：如果接口有变更，请先手动删除生成的.h文件。以防止一些意外的错误。\n\n### 在c层实现图像人脸检测\n在jni目录中使用文本编辑器新建一个facedetect.cpp，实现图像人脸检测\n\n```c\n#include \"cv.h\"\n#include \"highgui.h\"\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <assert.h>\n#include <math.h>\n#include <float.h>\n#include <limits.h>\n#include <time.h>\n#include <ctype.h>\n\n#include <android/log.h>\n#include <study_opencv_FaceRec.h>\n#include <jni.h>\n\n#define  LOG_TAG    \"opencv_face_detect\"\n#define  LOGI(...)  __android_log_print(ANDROID_LOG_INFO,LOG_TAG,__VA_ARGS__)\n#define  LOGE(...)  __android_log_print(ANDROID_LOG_ERROR,LOG_TAG,__VA_ARGS__)\n\nstatic CvMemStorage* storage = 0;\nstatic CvHaarClassifierCascade* cascade = 0;\nvoid detect_and_draw( IplImage* image );\nconst char* cascade_name =\n    \"haarcascade_frontalface_alt.xml\";\n/*    \"haarcascade_profileface.xml\";*/\n/*int captureFromImage(char* xml, char* filename);*/\nchar* jstring2String(JNIEnv*, jstring);\nint captureFromImage(char* xml, char* filename, char* outfile)\n{\n\tLOGI(\"begin: \");\n\t// we just detect image\n\t// CvCapture* capture = 0;\n    IplImage *frame, *frame_copy = 0;\n    const char* input_name = \"lina.png\";\n\tif(xml != NULL)\n\t{\n\t\tcascade_name = xml;\t\n\t}\n\tif(filename != NULL)\n\t{\n\t\tinput_name = filename;\n\t}\n\tLOGI(\"xml=%s,filename=%s\", cascade_name, input_name);\n\t// load xml \n    cascade = (CvHaarClassifierCascade*)cvLoad( cascade_name, 0, 0, 0 );\n\tLOGI(\"load cascade ok ? %d\", cascade != NULL ? 1 : 0);\n\tif( !cascade )\n    {\n        LOGI(\"ERROR: Could not load classifier cascade\\n\" );\n\t\t// I just won't write long full file path, to instead of relative path, but I failed.\n\t\tFILE * fp = fopen(input_name,\"w\");\n\t\tif(fp == NULL){\n\t\t\tLOGE(\"create failed\");\n\t\t}\n        return -1;\n    }\n\tstorage = cvCreateMemStorage(0);\n\t// cvNamedWindow( \"result\", 1 );\n    IplImage* image = cvLoadImage( input_name, 1 );\n    if( image )\n    {\n\t\tLOGI(\"load image successfully\");\n        detect_and_draw( image );\n        // cvWaitKey(0);\n\t\tif(outfile != NULL)\n\t\t{\n\t\t\tLOGI(\"after detected save image file\");\n\t\t\tcvSaveImage(outfile, image);//把图像写入文件\n\t\t}\n        cvReleaseImage( &image );\n    }\n\telse\n\t{\n\t\tLOGE(\"can't load image from : %s \", input_name);\n\t}\n}\nvoid detect_and_draw( IplImage* img )\n{\n    static CvScalar colors[] = \n    {\n        {{0,0,255}},\n        {{0,128,255}},\n        {{0,255,255}},\n        {{0,255,0}},\n        {{255,128,0}},\n        {{255,255,0}},\n        {{255,0,0}},\n        {{255,0,255}}\n    };\n    double scale = 1.3;\n    IplImage* gray = cvCreateImage( cvSize(img->width,img->height), 8, 1 );\n    IplImage* small_img = cvCreateImage( cvSize( cvRound (img->width/scale),\n                         cvRound (img->height/scale)),\n                     8, 1 );\n    int i;\n    cvCvtColor( img, gray, CV_BGR2GRAY );\n    cvResize( gray, small_img, CV_INTER_LINEAR );\n    cvEqualizeHist( small_img, small_img );\n    cvClearMemStorage( storage );\n    if( cascade )\n    {\n        double t = (double)cvGetTickCount();\n        CvSeq* faces = cvHaarDetectObjects( small_img, cascade, storage,\n                                            1.1, 2, 0/*CV_HAAR_DO_CANNY_PRUNING*/,\n                                            cvSize(30, 30) );\n        t = (double)cvGetTickCount() - t;\n        LOGI( \"detection time = %gms\\n\", t/((double)cvGetTickFrequency()*1000.) );\n        for( i = 0; i < (faces ? faces->total : 0); i++ )\n        {\n            CvRect* r = (CvRect*)cvGetSeqElem( faces, i );\n            CvPoint center;\n            int radius;\n            center.x = cvRound((r->x + r->width*0.5)*scale);\n            center.y = cvRound((r->y + r->height*0.5)*scale);\n            radius = cvRound((r->width + r->height)*0.25*scale);\n            cvCircle( img, center, radius, colors[i%8], 3, 8, 0 );\n        }\n    }\n    // cvShowImage( \"result\", img );\n    cvReleaseImage( &gray );\n    cvReleaseImage( &small_img );\n}\n\nJNIEXPORT void JNICALL Java_study_opencv_FaceRec_detect\n  (JNIEnv * env, jobject obj, jstring xml, jstring filename, jstring outfile)\n{\n\tLOGI(\"top method invoked! \");/*LOGI(\"1\");\n\tchar * c_xml = (char *)env->GetStringUTFChars(xml, JNI_FALSE);\n\tLOGI(\"char * = %s\", c_xml);\n\tif(c_xml == NULL)\n\t{\n\t\tLOGI(\"error in get char*\");\n\t\treturn;\n\t}\n\tchar * c_file = env->GetStringCritical(env, filename, 0);\n\tif(c_xml == NULL)\n\t{\n\t\tLOGI(\"error in get char*\");\n\t\treturn;\n\t}\n\tcaptureFromImage(c_xml, c_file);\n\tenv->ReleaseStringCritical(env, xml, c_xml);\n\tenv->ReleaseStringCritical(env, file_name, c_file);\n\t*/\n\tcaptureFromImage(jstring2String(env,xml), jstring2String(env,filename), jstring2String(env,outfile));\n\n}\n\n//jstring to char*\n\nchar* jstring2String(JNIEnv* env, jstring jstr)\n{\n\tif(jstr == NULL)\n\t{\n\t\tLOGI(\"NullPointerException!\");\n\t\treturn NULL;\n\t}\n\tchar* rtn = NULL;\n\tjclass clsstring = env->FindClass(\"java/lang/String\");\n\tjstring strencode = env->NewStringUTF(\"utf-8\");\n\tjmethodID mid = env->GetMethodID(clsstring, \"getBytes\", \"(Ljava/lang/String;)[B\");\n\tjbyteArray barr= (jbyteArray)env->CallObjectMethod(jstr, mid, strencode);\n\tjsize alen = env->GetArrayLength(barr);\n\tjbyte* ba = env->GetByteArrayElements(barr, JNI_FALSE);\n\tif (alen > 0)\n\t{\n\t\trtn = (char*)malloc(alen + 1);\n\t\tmemcpy(rtn, ba, alen);\n\t\trtn[alen] = 0;\n\t}\n\tenv->ReleaseByteArrayElements(barr, ba, 0);\n\tLOGI(\"char*=%s\",rtn);\n\treturn rtn;\n}\n```\n\nAndroid.mk:\n```make\nLOCAL_PATH:= $(call my-dir)\n\ninclude $(CLEAR_VARS)\ninclude $(OPENCV_PACKAGE_DIR)/$(TARGET_ARCH_ABI)/share/opencv/OpenCV.mk\n\nLOCAL_MODULE    := facedetect\nLOCAL_CFLAGS    := -Werror\nLOCAL_SRC_FILES := \\\n\tfacedetect.cpp \\\n\nLOCAL_LDLIBS    := -llog\n\ninclude $(BUILD_SHARED_LIBRARY)\n```\nApplication.mk:\n```\nAPP_ABI := armeabi armeabi-v7a\nAPP_PLATFORM := android-10\nAPP_STL := gnustl_static\nAPP_CPPFLAGS := -frtti -fexceptions\n```\n\n### 使用NDK进行编译\n在工程jni目录下执行ndk-build\n```sh\n$ cd ~/workspace/study.opencv/jni\n$ ~/android-ndk-r6/ndk-build.\n```\n如果编译成功，则会在工程下面生成libs/armeabi/facedetect.so库了.\n如有编译失败，请根据提示修改错误\n\n### 调用JNI接口\n将opencv人脸检测要用到的xml文件(位于OpenCV-2.3.0/armeabi/share/opencv/haarcascades/目录下)及图像文件使用DDMS push到data/data/study.opencv/files目录中。\n\n在activity中新建一个线程，调用FaceRec#detect方法。\n```Java\n@Override\n\tpublic void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.main);\n\n\t\tfinal FaceRec face = new FaceRec();\n\t\tnew Thread() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tface.detect(\n\t\t\t\t\t\t\"/data/data/study.opencv/files/haarcascade_frontalface_alt2.xml\",\n\t\t\t\t\t\t\"/data/data/study.opencv/files/wqw1.jpg\",\n\t\t\t\t\t\t\"/data/data/study.opencv/files/wqw1_detected.jpg\");\n\t\t\t}\n\t\t}.start();\n\n\t}\n```\n\n### 运行结果\n经测试，对png,jpg,bmp图片可以正确识别，不过就是速度有点慢。\n\n## 参考\n- 人脸检测\nhttp://www.opencv.org.cn/index.php/%E4%BA%BA%E8%84%B8%E6%A3%80%E6%B5%8B\n","tags":["Android"],"categories":["Android"]},{"title":"也谈SWT的运行","url":"/2011/04/14/Java/Java-swt-run/","content":"\n前一段时间，写了两个关于j2me打包签名的工具，界面技术使用的是SWT。在eclipse测试OK之后，将src打包为jar。其中META-INF/MENIFEST.MF中指定Main-Class为 我的main类，并且classpath等也加进去了。但在双击jar并不能成功运行。\n\n没办法，只好写bat文件来启动swt。但惊奇的发现，竟然找不到某些类。主要还是swt包中的。刚开始还以为是java.library.path的问题，最后确定不是，当时还懵了一下子，不知道怎么解决。\n\n后来去eclipse swt网站查看swt example的运行。才恍然大悟，原来要这样运行。兹记之\n\n原文请参考：http://www.eclipse.org/swt/examples.php\n\n简而言之，就是将你要运行的jar也加入classpath，然后将要运行的类，使用全称附在java 命令后面。如\n`java -cp \\lib\\swt.jar;mypackager.jar; org.melord.swt.packager.Main` \n表示运行 org.melord.swt.packager.Main类。\n\n<!-- more -->\n","tags":["Java","SWT"],"categories":["Java"]},{"title":"Swing 布局管理器","url":"/2010/04/02/Java/Java-swing-layouts/","content":"## Null Layout\nNull layout也称绝对布局管理器，如果一个容器使用绝对布局的话，那么其中的组件要调用setBounds()方法以确定在哪个位置显示组件，否则组件将不显示。 如果不用WindowsBuilder之类的界面开发插件，使用绝对定位将是一件痛苦的事。 在界面较复杂的情况下，一般不会使用绝对布局\n<!-- more -->\n\n## FlowLayout\n使用此布局管理器将容器内的组件按从左到右或从右到左排列，如果剩余空间小于组件，那么组件将在新行显示。\n\n## BorderLayout\n是某些容器组件的默认布局管理器，它将容器分为NORTH, SOUTH,CENTER，WEST，EAST五个区域，每个区域最多只能有一个组件，所以它也只适用于容器内组件较少（不大于5个）的布局管理。 使用方式：\nContainer.add（component, BorderLayout. SOUTH）;\n如果第二个参数未指定，那么默认在BorderLayout. CENTER区域显示。\n如果对同一个区域添加了多个组件，那么只显示最后添加的组件。\n\n## GridLayout\n网格布局管理器，它将容器划分为指定行*列个单元格，按组件add的顺序，依次将组件放入单元格中，可以像表格一样指定其单元格之间的水平与垂直间距，但是，它不可以跨行与跨列。 所以此布局管理器只适用于容器内组件排列呈类表格方式的容器布局。\n\n\n## GridBagLayout\nGridLayout不可以跨行与跨列，但GridBagLayout可以，个人认为GridBagLayout是基于GridLayout的，因为它的原理也是将容器区域分为若干个单元格的。\n\n不过功能远比GridLayout强大，不仅可以跨行与跨列，还可以指定在容器大小变更时，组件是否向x轴与y轴方向延伸，以及延伸率。\n\n每个由 GridBagLayout 管理的组件都与 GridBagConstraints 的实例相关联\nConstraints 对象指定组件的显示区域在网格中的具体放置位置，以及组件在其显示区域中的放置方式。 除了 Constraints 对象之外，GridBagLayout 还考虑每个组件的最小大小和首选大小，以确定组件的大小。\n\n下面对GridBagConstraints的几个属性做一个简要说明，如要了解属性的原生说明请参考sun官方资料\n\n - gridx, gridy  ：指定组件在容器单元格内的行索引与列索引，如最左上的那个单元格式，其gridx为0，gridy为0。\n\n - gridwidth, gridheight ：指定单元格的跨行与跨列数\n\n - fill：指定填充方向，可以向水平，垂直或水平+垂直方向充满整个容器。\n\n - ipadx, ipady：指定组件的内部填充，相当于单元格边距，即给组件的最小宽度或高度添加多大的空间。 此属性在我实践中未能参透其中工作方式（有时填充，有时不填充）\n\n - insets：指定组件的外部填充，相当于单元格间距。\n\n - Anchor：当组件的大小小于可用显示区域时使用，指定组件在显示区域中的位置。 请见下图： \n\n<pre>\n\n   -------------------------------------------------\n   |FIRST_LINE_START   PAGE_START     FIRST_LINE_END|\n   |                                                |\n   |                                                |\n   |LINE_START           CENTER             LINE_END|\n   |                                                |\n   |                                                |\n   |LAST_LINE_START     PAGE_END       LAST_LINE_END|\n   -------------------------------------------------\n\n</pre>\n\n - weightx, weighty ：指定容器大小变动时，向x或y方向的伸缩率。\n\n关于更多GridBagLayout的信息请参考JDK API或相关资料。\n\n## BoxLayout\n允许垂直或水平布置多个组件的布局管理器。 \n它与Box联合工作，Box是一个使用了BoxLayout的轻量级组件。 Box的思想是将容器内的组件当做一个Box（盒子），在Box与Box之间可以创建一些不可见的区域，分为：\n- Glue: 相当于胶水，粘住了两个box，它会自动沿垂直或水平方向填充两个box之间的不可见区域\n- Strut: 指定高度（宽度）的垂直（水平）间距的Glue\nRigidArea: 同时指定高度与宽度的Strut\n下面请看一个示例，实现的效果与GridBagLayout中示例的效果一样\n\n## SpringLayout\nSpringLayout是一种较特殊的布局管理器，它通过定义容器及容器内组件的约束来实现布局。 它与Spring, SpringLayout. Constraints联合使用。 \n\n在此之前先说一下Spring\nSpring好似一个弹簧，它可以伸长到maximum，也可以收缩到minimun，在正常情况下它的长度是prefferenceSize，在容器大小变动时，它根据前面的三个值根据一系列规则计算出具体的value。 \nSpring是一个抽象类，它提供max,sum静态函数\n\nSpringLayout.Constraints，将管理组件大小和位置更改方式的约束存储在 SpringLayout 控制的容器中，它有x、y、width 和 height 属性，因而它类似于一个 Rectangle。 但是，在 Constraints 对象中，这些属性具有的是 Spring 值，而不是整数。 此外，可以使用 constraint 属性按四个边（东、南、西、北）操作一个 Constraints 对象。\n组件与组件的约束是通过边来定义的，如一个textfield的左边距label的右边多少距离。 下面给出边的计算公式：\nWEST = x\nNORTH = y\nEAST = x + width\nSOUTH = y + height\n下面给出一个官方的示例：\n容器容器pane使用Spring布局管理器，pane下有一个label及一个textfield。\n   \n## 总结\nSwing的布局管理器感觉没有SWT好使，在现实的界面开发中，需要根据实际情况灵活使用多种布局管理器，不像SWT使用一个GridLayout差不多就可以了。 鉴于个人理解的还不够深刻，更多的资料需要去看sun官网布局管理器的说明：\n\n","tags":["Java","Swing"],"categories":["Java"]},{"title":"Eclipse RCP产品国际化","url":"/2010/03/31/Eclipse/Eclipse-rcp-i18n/","content":"\n对rcp的国际化主要是通过添加插件工程来完成。这一部分可以从网上或者书上找到不少的资料。在这里我主要阐述一下导出的RCP产品如何对使用的 eclipse内容及其它插件的国际化。\n举个例子，你创建了一个jface对话框，确定按钮显示的是OK。如果你的rcp依赖于p2，那么检查更新的菜单显示的是Check for Updates。\n\n<!-- more -->\n国际化步骤如下：\n\n\n## 一、下载并安装eclipse中文语言包\n可以在download/Eclipse Technology Project/Babel 频道下载相关的语言包。\n我所使用的eclipse版本为伽利略（3.5.0）。分别下了eclipse语言包和rt-equinox语言包。\n下载完成之后分别解压到%eclipse_home%/dropins/eclipse_zh和%eclipse_home %/dropins/p2_zh（详细请参考eclipse插件安装方法）。\n重启eclipse，如果发现eclipse里面的菜单变成中文，说明 eclipse语言包安装成功；如果帮助菜单下的检查更新也变成中文，那么p2语言包插件也安装成功。\n\n\n## 二、添加feature工程\n在feature.xml Plug-ins选项卡中，添加要国际化段工程，如p2.sdk.nl_zh。\n**注意，添加的插件段工程不能有警告。**\n\n*注：下载的P2国际化中文资料文件并不全，在install,update界面有中英文混合的情况出现，请使用附件中的jar文件覆盖plugins/下的同名文件。*\n\n\n## 三、添加fragment工程\neclipse语言包有119个nl_zh.jar，如果我们只需要对jface进行国际化的话，而又不想在eclipse加载语言包（对于已经习惯了en_US语言包的人）。那么简单的方法就是从jface.nl_zh中提取 messages_zh.properties，并放入段工程的相同包下载。段工程的host-plugin请选择对应的 org.eclipse.jface3.5.0。\n\n*注：如对话框的确定，取消按钮，首选项的应用等常用按钮的国际化都在org.eclipse.jface插件中。*\n\n\n## 四、导出产品\n如果看到eclipse的内容和依赖的p2插件显示为中文，那么到此，rcp产品的国际化已经全部完成……\n","tags":["Eclipse"],"categories":["Eclipse 插件"]},{"title":"带NameSpace的xml XPath搜索","url":"/2008/09/29/Java/带NameSpace的xml XPath搜索/","content":"以典型的J2EE web.xml文件为例，某次要解析此文件。使用Xpath搜索得到的都是null。使用System.out.println（root）打印节点，发现比不带NameSpace的XML root多了一个uri，那么在Xpath中加入uri（setNameSpace(\"\",uri)），结果搜索的结果还是null。后来google了一下，才知道原来当NameSpace的prefix为“”时，在Xpath中需要加入“default”prefix。 \n因此，自己可以定义一个比较通用的Xpath搜索方法：\n<!-- more -->\n```java\n/** \n*@param e XPath search based element \n*@param xpath XPath search string \n*@return search result element if exist else null would be returned \n*/ \npublic Element getSingleElementByXPath(Element e,String xpath){ \n    Element ret = null; \n    try{ \n        XPath xPath = XPath.getInstance(); \n        String prefix = e.getNameSpacePrefix(); \n        String uri = e.getNameSpaceURI(); \n        if(!\"\".equals(uri)){ \n            if(!\"\".equals(prefix)){ \n                xPath.setNameSpace(prefix,uri); \n            }else { \n                xPath.setNameSpace(\"default\",uri); \n            } \n        } \n        ret = xPath.getSingleElementByXpath(e,xpath); \n    } catch (Exception e){ \n        // \n    } \n    return ret; \n}\n```\n\n不过，对于多级的Xpath搜索，此方法设置的Xpath NameSpace还是不够，需要自己在Xpath每一级中加入prefix:前导。 \n因为一次性给Xpath设置NameSpace并不起作用，这不能不说是给有NameSapce的XML搜索带来致命的移植与维护的问题。\n\n总结：\n1，对没有NameSpace的Xpath child:books/child:book... \n2, 对prefix 为\"\" 的 Xpath default:books/default:book... \n3, 对prefix 不为空的Xpath prefixValue:books/prefixValue:book.... \n","tags":["xml"],"categories":["Java"]},{"title":"jdom解析xml","url":"/2008/08/16/Java/jdom解析xml/","content":"添加依赖包jdom.jar和jaxen.jar，源代码如下\n<!-- more -->\n```java\npackage upload;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport org.jdom.Element;\nimport org.jdom.JDOMException;\nimport org.jdom.input.SAXBuilder;\nimport org.jdom.output.Format;\nimport org.jdom.output.XMLOutputter;\nimport org.jdom.xpath.XPath;\nimport org.xml.sax.ErrorHandler;\nimport org.xml.sax.SAXException;\nimport org.xml.sax.SAXParseException;\n/**\n* @author lijm\n* @date 2008-08-16 given an instance of xml parsede by jdom 1\\\\.0. three main\n*       function. 1. open an xml document and parse it.here customize an\n*       ErrorHandler which described the location of error when parse xml file,\n*       2.deal document include add/remove element. 3.write document to a file\n*       with a format.\n*/\npublic class JDOMParse {\n/**\n  * root element of an XML document.\n  */\nstatic Element root;\nstatic {\n  SAXBuilder builder = new SAXBuilder();\n  builder.setErrorHandler(new ErrorHandler() {\n   public void error(SAXParseException exception) throws SAXException {\n    print(exception);\n   }\n   public void fatalError(SAXParseException exception)\n     throws SAXException {\n    print(exception);\n   }\n   public void warning(SAXParseException exception)\n     throws SAXException {\n    print(exception);\n   }\n   private void print(SAXParseException e) {\n    String str = e.getSystemId();\n    str += \"\\r\\n\" + e.getLineNumber() + e.getColumnNumber();\n    str += \"\\r\\n\" + e.getMessage();\n    System.out.println(str);\n   }\n  });\n  try {\n   root = builder.build(new File(\"D:/ver.xml\")).getRootElement();\n  } catch (JDOMException e) {\n   e.printStackTrace();\n  } catch (IOException e) {\n   e.printStackTrace();\n  }\n}\nstatic Element addDownload(Element e, Download d) {\n  Element download = new Element(\"download\").setAttribute(\"desc\", d.desc)\n    .addContent(d.url);\n  return e.getChild(\"downloads\") == null ? e.addContent(new Element(\n    \"downloads\").addContent(download)) : e.getChild(\"downloads\")\n    .addContent(download);\n}\nstatic Element removeDownload(Element e, Download d) {\n  Element downloads = e.getChild(\"downloads\");\n  try {\n   downloads.removeContent((Element) XPath.selectSingleNode(downloads,\n     \"./download[@desc='\" + d.desc + \"']\" + \"[text()='\" + d.url\n       + \"']\"));\n  } catch (JDOMException e1) {\n   e1.printStackTrace();\n  }\n  return e;\n}\n/**\n  * @param args\n  * @throws FileNotFoundException\n  */\npublic static void main(String[] args) throws IOException {\n  Download d = new Download(\"local\", http://apache.org);\n  JDOMParse.removeDownload(JDOMParse.root, d);\n  XMLWriter.write(new File(\"D:/ver.xml\"));\n  BufferedReader br = new BufferedReader(new InputStreamReader(\n    new FileInputStream(\"D://ver.xml\")));\n  String str = null;\n  do {\n   str = br.readLine();\n   System.out.println(str);\n  } while (str != null);\n}\n}\nclass Download {\npublic String desc = \"local\";\npublic String url = \"\";\nDownload(String desc, String url) {\n  this.desc = desc;\n  this.url = url;\n}\n}\nclass XMLWriter {\nstatic XMLOutputter out;\nstatic Format format;\nstatic {\n  out = new XMLOutputter();\n  format = Format.getPrettyFormat()\n    .setTextMode(Format.TextMode.NORMALIZE);\n  format.setEncoding(\"GBK\");\n  out.setFormat(format);\n}\nstatic void write(File f) {\n  try {\n   out.output(JDOMParse.root, new FileOutputStream(f));\n  } catch (FileNotFoundException e) {\n   e.printStackTrace();\n  } catch (IOException e) {\n   e.printStackTrace();\n  }\n}\n}\n```\n","tags":["xml"],"categories":["Java"]},{"title":"清除与初始化","url":"/2007/10/23/Java/Java-清除与初始化/","content":"构造函数构建函数(Constructor)属于一种较特殊的方法类型,因为它没有返回值.这与void返回值存在着明显的区别。对于void返回值，尽管方法本身不会自动返回什么，但仍然可以让它返回另一些东西。构建器则不同，它不仅什么也不会自动返回，而且根本不能有任何选择.若创建一个没有构件器的类,则编译器会自动创建一个默认构件器.\n<!-- more -->\ngc()与finalize()gc只能清除在堆上分配的内存(纯java语言的所有对象都在堆上使用new分配内存),而不能清除栈上分配的内存（当使用JNI技术时,可能会在栈上分配内存,例如java调用c程序，而该c程序使用malloc分配内存时）.因此,如果某些对象被分配了栈上的内存区域,那gc就管不着了,对这样的对象进行内存回收就要靠finalize().\n\n举个例子来说,当java 调用非java方法时（这种方法可能是c或是c++的）,在非java代码内部也许调用了c的malloc()函数来分配内存，而且除非调用那个了free() 否则不会释放内存(因为free()是c的函数),这个时候要进行释放内存的工作,gc是不起作用的,因而需要在finalize()内部的一个固有方法调用它(free()).\n\nfinalize的工作原理应该是这样的：一旦垃圾收集器准备好释放对象占用的存储空间，它首先调用finalize()，而且只有在下一次垃圾收集过程中，才会真正回收对象的内存.所以如果使用finalize()，就可以在垃圾收集期间进行一些重要的清除或清扫工作.\n\nfinalize()在什么时候被调用?\n\n1. 所有对象被Garbage Collection时自动调用,比如运行System.gc()的时候.\n2. 程序退出时为每个对象调用一次finalize方法。\n3. 显式的调用finalize方法\n\n除此以外,正常情况下,当某个对象被系统收集为无用信息的时候,finalize()将被自动调用,但是jvm不保证finalize()一定被调用,也就是说,finalize()的调用是不确定的,这也就是为什么sun不提倡使用finalize()的原因.成员初始化对于类成员，你可以不初始化就直接使用它，JVM会自动对类成员进行初始化，比如，int类型初始化为0，char类型初始化为’’；在书者，作者指的就是类成员的初始化。那么成员函数的成员初始化呢？这就需要自己手动进行了，如果没有初始化而直接使用的话，编译器会给出一个错误：当前变量可能还没有初始化。\n如下所示：\n```java\nint i;\nString s;\nSystem.out.println(this.i);//can not be i:The local variable i may not have been initialized\n```\n\n这使我想到了C/C++，在C/C++中是这样介绍的，如果局部变量没有初始化的话，那么编译器将自动赋给它一个随机值。所以在C/C++中，如果没有给局部变量赋初值（初始化）的话，将是一件“危险”的事，而Java则聪明了许多，没有初始化的局部变量，如果直接使用的话，编译不让你通过，以减少程序出现BUG的机率。\n\n构造函数的初始化没看懂，比仙剑的迷宫还难走。搞了半天，没搞懂，惭愧！以下是原文。\n\nstatic 初始化只有在必要的时候才会进行，...它们才会得到初始化在这以后，static 对象都不会重新初始化。初始化顺序首先是 static（如果它们尚未由前一次对象创建过程初始化）接着是非 static对象。大家可从输出结果中找到相应的证据。\n原来是没有看完，根据以上原则，其它一些原则请参考原文。原文中的原例做一下面的分析。\n\n```java\npackage ch2;\npublic class Test {\n    int i;\n    public void menberInit() {\n       int i;\n       String s;\n       System.out.println(this.i);// can not be i:The local variable i may not\n       // have been initialized\n    }\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n       // Test t = new Test();\n       // t.menberInit();\n       /*static init\n       System.out.println(\"Creating new Cupboard() in main\");\n       new Cupboard();// 13\n       System.out.println(\"Creating new Cupboard() in main\");\n       new Cupboard();// 14\n       t2.f2(1);\n       t3.f3(1);\n       */\n       Mugs x = new Mugs();\n    }\n    //static Table t2 = new Table();// 1,初始化静态成员t2.\n    //static Cupboard t3 = new Cupboard();// 8\n}\nclass Bowl {\n    Bowl(int marker) {// 3,没有静态成员/方法,执行构造函数//5\n       System.out.println(\"Bowl(\" + marker + \")\");\n    }\n    void f(int marker) {\n       System.out.println(\"f(\" + marker + \")\");\n    }\n}\nclass Table {\n    static Bowl b1 = new Bowl(1);// 2,初始化静态成员b1\n    Table() {// 6\n       System.out.println(\"Table()\");\n       b2.f(1);// 7\n    }\n    void f2(int marker) {\n       System.out.println(\"f2(\" + marker + \")\");\n    }\n    static Bowl b2 = new Bowl(2);// 4,初始化静态成员b2\n}\nclass Cupboard {\n    Bowl b3 = new Bowl(3);// 11最后才是非静态\n    static Bowl b4 = new Bowl(4);// 9,先静态\n    Cupboard() {// 12\n       System.out.println(\"Cupboard()\");\n       b4.f(2);\n    }\n    void f3(int marker) {\n       System.out.println(\"f3(\" + marker + \")\");\n    }\n    static Bowl b5 = new Bowl(5);// 10,第二个静态\n}\n/**\n* non-static init\n*/\nclass Mug {\n    Mug(int marker) {\n       System.out.println(\"Mug(\" + marker + \")\");\n    }\n    void f(int marker) {\n       System.out.println(\"f(\" + marker + \")\");\n    }\n}\nclass Mugs {\n    Mug c1;\n    Mug c2;\n    {\n       c1 = new Mug(1);\n       c2 = new Mug(2);\n       System.out.println(\"c1 & c2 initialized\");\n    }\n    Mugs() {\n       System.out.println(\"Mugs()\");\n    }\n}\n```\n\n请注意程序中注释中的序号，我喜欢用机器的方式思考方式来解这种题。\n1. 发现静态成员t1，它新建一个Table对象。\n在Table对象中，发现静态变量b1，新建一个Bowl对象，初始化Bowl，执行构造\n在Table对象中，发现静态变量b2，新建一个Bowl对象，初始化Bowl，执行构造\nTable.class没有成员/静态方法了，进行构造方法。\n2. 发现静态成员t2，它新建一个Cupbord对象。\n在Cupboard.class，先初始化静态成员b4,b5,然后才是非静态成员b3,最后执行其构造。\n3. 程序继续往下执行，new Cupbord(), new Cupbord()，注意到这两次初始化，对已经初始化的静态b4,b5是不会进行第二次初始化的，而b3则每new 一次，则初始化一次。\n4. 继续执行。\n非静态实例的初始化很容易理解。\n下面是例子运行的结果：\n>\nMug(1)\nMug(2)\nc1 & c2 initialized\nMugs()\n>\n注：如果没有把两条static 实例注释掉的话，将有助于理解上面的静态实例初始化。\n","categories":["Java"]},{"title":"J2EE真不是个东西四之Servlet篇","url":"/2007/08/31/Java/J2EE真不是个东西四之Servlet篇/","content":"J2EE真不是个东西四之Servlet篇\n<!-- more -->\nServlet真不是个东西！这东西繁得YB啊！真不知道这东西有哪点好，但是看到的都称其为最好的一个CGI程序。自从遇到这鸟东西，就没有一天的好日子过。\n\n星期一：看了看Servlet，真是晕死了，用它写个你好世界竟然要16K的半页代码！函数的参数真是又臭又长，一个doGet函数竟然还要写两行！可想而知，周一的日子会好过吗？\n\n星期二：自己写一个Servlet，当然是要命的，不过倒可以学学司马怎么依样画葫芦。当然还得要小心翼翼的。写了之后要发布吧？就为了看看这个你好世界，可真是够折腾的啦！搞了半天，没有配置好，web.xml是写了又写，Tomcat是started又stop，stopped又restarted，还就是不成，于是大骂Servlet真不是东西，城门失火，殃及池鱼；大骂作者是岳不群！\n\n星期三：虽然是一见尼姑，逢赌必输，但是经过一顿大骂，亦可称之为精诚所致，金S为开了。但研究了这么长时间的Servlet总不能只为了看看这个你好世界吧，前面已经看得够多的了。于是苦心砖研request和response。这Servlet真不是个东西！调试繁得YB，还得重启Tomcat，于是大骂，便宜没好货，好货不便宜！\n\n星期四：整合Model&View，自然不是一件容易的事。在这里，暂时不骂JDBC。这个dispatcher也真不是个东西，Model, View, Controller这三者就是三国啊，斗得太厉害了，三者的关系是剪了还断，理了更乱。\n\n星期五：过滤器，这个貌似Servlet的Filter活生生就是一个岳不群，伪君子，真小人。性情是相当的古怪，搞得不好，就要遭殃。谁叫人家武功高，城府深呢，没办法也只好伺候，还好前面搞定了一个东方不败，这两家伙，武功多少有些类似。但都不是个什么好东西！\n\n星期六：周末还得查漏网之鱼，查遗补缺，自然又得花不少功夫。每个星期都得这么地折腾着，我想我的“增肥”计划是越来越渺茫了。\n\nPS： \nServlet是J2EE Web技术的一个重点，这东西是相当相当的烦。只有认真仔细，才是王道。","tags":["J2EE"],"categories":["Java"]},{"title":"J2EE真不是个东西三之JSP篇","url":"/2007/08/30/Java/J2EE真不是个东西三之JSP篇/","content":"J2EE真不是个东西三之JSP篇\n<!-- more -->\n在J2EE的规范中，JSP主要是作为一种表示技术，用一句白话说那就是GUI，也就是MVC中讲到的VIEW。如果不按照J2EE的规范，可以把JSP当作是一种服务器端语言，和PHP，ASP一样可以独立的使用。不过因为有了J2EE，诺森德的强大的蜘蛛王国也只好沦为lichking的奴役，所有在这里还不得不骂不是东西的J2EE，不过JSP也不是个什么东西，它也好不了哪去。\n\n1，异常处理太长，一个小小的异常竟然有长达一页多的异常描述，而其中有用的不过就只有那么一两行，用某某名人的话说，无异于谋财害命，我们的生命，我们的钱财就是这样一点一点被耗尽的。不过还先别骂，JSP本身也只不过是个三流角色而已！\n\n2，JavaBean的加入将是更大的残忍，这确实是一个神奇的豆，就像我爷爷的爷爷的XX的飞刀，杀人于YX之间，对于新手来说，光是重启服务器就足以让人崩溃。\n\n3，自定义标签，到现在为此我还不知道这个自定义的标签有什么用，不过从书上看这鸟东西也是相当的繁琐，所以还现在能不用就不用。还有一个叫什么自定义函数就更不是什么什么东西，直接跳过。。。\n\n4，本来嘛，与PHP，ASP一样，JSP也还与它们类似，不过到了2.0时代，又整出来一个什么EL，scripting, scriplet, script expression这三个东西是剪不断，理还乱啊！这不，相当于新的语言嘛！当然又得把我们累坏了，想不学吧，嘿，走着瞧，到后面看你还要学不学。早死早超生，还是早一点学吧。\n\n重点：\n* JavaBean用IDE来产生。\n* 需要重点看的是EL，看了以后就可以用JSTL了。\n* 其它的随便看看吧，在正式的开发中不会怎么用到的。毕竟它是号称完全面向对象的，我以前也仔细的看了，现在全丢了。\n","tags":["J2EE"],"categories":["Java"]},{"title":"J2EE真不是个东西一之开场篇","url":"/2007/08/24/Java/J2EE真不是个东西一之开场篇/","content":"J2EE真不是个东西 \n<!-- more -->\n\nJ2EE真不是个东西，当我从毕业设计开始，我就叩响了这道黑暗之门，犹如当年的耐奥祖，等待我的是无穷无尽的寒冷与黑暗。J2EE这东西是既抽象，又繁琐，要学的东西实在是太多太多，千万不要以为Java学得好，J2EE就是一条轻松之路，有许多的东西是在Java里怎么看都没看到的；千万不要以为成功地运行了第一个J2EE程序，就向成功迈向了一大步，也许在以后你就会向它永远地说声ByeBye；不要以为全世界的人都在说J2EE好，就以为它真的好，刚开始的环境配置就很有可能让你头痛好几天。 \n\nJ2EE真不是个东西，它好比是悬挂高空的太阳，就算你有着夸父的两条长腿，努力地向前跑啊跑，不跑个半死不活你才会发现，它离你依然是那么的遥远。Servlet，JSP，EJB，JMS，JavaMail，JDBC，JTA，JNDI，RMI-IIOP，JAXP，JAX-RPC，SAAJ，JAXR，JACC…这些J2EE的爪牙们，每个都带着一个尖尖的钩，它见血封喉，杀人于无形之间。每一次次地在深夜梦中惊醒，不是因为看见了贞子，也不是因为遇到了加勒比的海盗，而是梦见了J2EE的喽啰们张牙舞爪地向我扑来。\n \n     \n总之，J2EE真不是个东西！\n 学了这么长时间的J2EE，我都不敢说自己是学J2EE的，因为，有太多的东西现在还没有学到，到目前为止，也就算是对JSP，Servlet，JavaBean, JDBC算是有个初步的了解。而且就这里面，还有一些东西竟然都还没有用到过，没有去实现过，况且JTA，RMI，EJB… \n 真是路漫漫其修远兮，吾将上下而求索！\n","tags":["J2EE"],"categories":["Java"]},{"title":"J2EE真不是个东西二之配置篇","url":"/2007/08/24/Java/J2EE真不是个东西二之配置篇/","content":"\nJ2EE的配置真不是个东西！它也确实不是个什么东西！Java的诞生让我想到的lichking的诞生，有了lichking，于是就有了荒芜之地。J2EE既然这是片荒芜之地的产物，那么要建立一个企业级的应用-一支强大的UD军队，非得要有黑暗城堡-JDK不可。\n\n说到JDK的配置我就一肚子的火，记得刚学习Java的时候，写了书上的一个叫做你好世界的程序，然后在CMD下面\n\n```bash\njavac HelloWord.java\n```\n\n结果。。。\n\n我大骂Java真不是个东西。后来才知道，这个你好世界的程序要拿到java的bin目录下面，才能编译，才能\n```sh \nJava HelloWord\n```\n才能看见世界！后来老师说在CMD下面敲个\n\n```bash\nset classpath=.;\n```\n就不用拿到BIN目录下面去了，这句话又长，还没等我拿笔记下来，它就不跟我玩了。于是我每次上实习课就要咒这个classpath。我想我还有C++呢，这个Java真不是东西，它不跟我玩，我也不跟它玩下去了，于是，这个学生时代的Java就这么混过去了。\n\n时隔两年，毕业设计是J2EE方向，郁闷啊！我的候选课题都没选上！于是无奈的再次面对事实。\n \n搭建第一个JSP环境，我用了整整一天的时间，最终的结果也就是能在一个test.jsp里面看到了\n\n```jsp\nout.println(“JSP, you are a shit !”)\n```\n的结果。\n\nJ2EE真不是个东西！这个时候也只==看见了荒芜之地正在建造的光环。 \n\n## JDK的配置\n1. 设置环境变量\nJAVA_HOME == Java Installed Directory（jdk_ver: ver为JDK的版本号）；\n2. 同理设置classpath=.;%java_home%/lib/dt.jar;%java_home%/lib/tools.jar;  \n   重要的两个JAR：dt.jar & tools.jar；\n3. 设置path=%java_home%/bin \n好了，进入CMD javac 回车，java回车，看见的是help 而不是Bad command就行了，连System.out.println(“Hello,World”)的世界都可以不用去测试了。\n\n## Tomcat配置\nTomcat这只猫的配置是这样的，\n1. 解压（注意不要出现重复的路径）也好，安装也好，安装（解压）到一个目录下面。这个目录称之为catalina_home（某个版本以前叫tomcat_home，这名字蛮好的，有魅力，看一遍就记住了）。\n2. 设置环境变量，catalina_home ,catalina_base= C:/apache-tomcat5.5.17。3，在地址栏内输入http://localhost:8080/\n看到那只猫的话，那就要恭喜你了。\n \n        \n## JSP的配置\n1. classpath追加;%catalina_home%/common/lib/jsp-api.jar; %catalina_home%/common/lib/jasper-runtime.jar; %catalina_home%/common/lib/servlet-api.jar（使用Servlet才用到）;建议这些在配置Tomcat的时候一起配置好。\n\n2. web.xml的配置，从webapps/ROOT/WEB-INF下面拷贝web.xml放入自己的JSP WEB-INF目录中，打开它，把从<web-app> 到</web-app>之间的内容全删掉就OK了。好了，自己试着写第一个JSP文件吧，如果你英文功底很好的话就写个out.println(“hello,World”)。如果你是相当的热爱我们的祖国的话，那么请你在文件的第一行加入下面此句（个人建议，要热爱祖国！）\n```htmlbars\n<%@ page contentType=”text/html;charset=GBK” language=”java” %>。\n```\n如果以上配置都通过的话，那么是否该为自己庆祝一下呢？如果只是做个毕业设计或者玩玩的话，那么，是该休息一会了。毕竟荒芜之地上能造的也都造了，也可以带着侍僧和小鬼去失落的神庙狩门口的311了。但是战争不是这么快就能结束的，观众也不希望就这样结束，而且你很快也会发现，做掉了311就无事可干了。于是很快就有命令传来，于是诅咒将再一次开启。\n","tags":["J2EE"],"categories":["Java"]},{"title":"JavaScript正则表达式验证表单","url":"/2007/06/07/Web/JavaScript正则表达式验证表单/","content":"\n原理：基于自定义的标签；\n实现：目前只有文本框和密码域的验证\n\n<!-- more -->\n```js\n/*************************自定义的模式匹配函数\n*********rule：匹配规则\n*********vaule:匹配对象（表单元素的值）\n*********warning：警告内容\n*********note：显示警告的DIV层\n************************************************/\nfunction myReg(rule, value, warning, note) {\n  var reg = new RegExp(rule);\n  var noteDiv = document.getElementById(note);\n  if (!reg.test(value)) {\n    err += warning;\n    err += '\\n';\n    noteDiv.innerHTML = \"<font color=red>\" + warning + \"</font>\"\n  } else {\n    noteDiv.innerHTML = \"<font color=green>OK</font>\"\n  }\n}\nfunction checkForm2(form) {\n  var f = document.getElementById(form);\n  var l = form.length;\n  for (i = 0; i < l; i++) {\n    var e = f.elements;\n    switch (e.type) {\n    case \"text\":\n      {\n        if (e.need == \"true\") {\n          myReg(e.rule, e.value, e.warning, e.note)\n        } else {\n          if (e.value != \"\") {\n            myReg(e.rule, e.value, e.warning, e.note)\n          } else {\n            document.getElementById(e.note).innerHTML = \"ok\"\n          }\n        }\n        break\n      }\n    case \"password\":\n      {\n        myReg(e.rule, e.value, e.warning, e.note);\n        if (psw == \"\") {\n          psw = e.value\n        } else {\n          if (psw != e.value) {\n            document.getElementById(e.note).innerHTML = \"<font color=red>\" + e.warning + \"</font>\"\n          } else {\n            document.getElementById(e.note).innerHTML = \"<font color=green>ok</font>\"\n          }\n          psw = \"\"\n        }\n        break\n      }\n    }\n  }\n  if (err != \"\") {\n    alert(err);\n    err = '';\n    return false\n  } else {\n    return true\n  }\n}\n```","tags":["js"],"categories":["Web"]},{"title":"轻松做ICO图标","url":"/2006/04/27/other/轻松做ICO图标/","content":"ICO文件就是图标文件啦，图标是什么？我不用说了吧？\n毫无疑问，使用ACDSEE此类专业图像处理软件做一个ICO文件是不难的，但是如果您的操作系统没有安装此类图像编辑软件该怎么办呢？那就跟我开始下面的教程吧！\n\n<!-- more -->\n在XP下轻松做一个ICO图标\n1. 得到一个源文件,网上有的是.JPG;.GIF;.BMP;等等\n2. 右键->使用画图进行编辑\n3. 编辑图像，将大小修改为 W*W（如65*65）的正方形\n4. 文件->另存为\n5. 在文件类型中选BMP24位位图(.DLB).\n6. 文件->另存为\n7. 写上文件名.ICO\n\n好了，去看看吧！","categories":["奇淫巧技"]},{"title":"打造个性化的MP3（U盘）","url":"/2006/04/27/other/打造个性化的MP3（U盘）/","content":"想让你的U盘或MP3与众不同吗?现在跟我做：\n新建一个文本文档\n复制以下内容到U盘Autorun.inf\n\n<!-- more -->\n```\n//从这开始斜体内容是必须要的........\n[.ShellClassInfo]\nIconFile=pic\\yingmu.ico//98系统才支持吧?还可以是.EXE;DLL后缀\nIconIndex=0 //可以选的啦\n\n[.ShellClassInfo.A]\nIconFile=pic\\yingmu.ico\n[.ShellClassInfo.W]\nIconFile=I:+AFw-pic+AFxeOHUoj29O9gBcTipgJ13lUXd7sQBcaEyXYk47mJgAXGhMl2JW/mgHAFxlh072Vv5oBwBc-folder+AF8-b.ico\n\n[.ShellClassInfo]\nIconFile=pic\\yingmu.ico\nIconIndex=0\nInfotip=\n\nConfirmFileOp=0\n[.ExtShellFolderViews]\n[{BE098140-A513-11D0-A3A4-00C04FD706EC}]\nIconArea_Image=pic\\she2.jpg//背景图片\nIconArea_Text=0x00ff00//文件夹字体\nIconArea_bgcolor=0xff0000//忘了\nAttributes=1\n\n[ExtShellFolderViews]\n{BE098140-A513-11D0-A3A4-00C04FD706EC}={BE098140-A513-11D0-A3A4-00C04FD706EC}\n{5984FFE0-28D4-11CF-AE66-08002B2E1262}={5984FFE0-28D4-11CF-AE66-08002B2E1262}\nIconArea_Image=pic\\she3.jpg // U盘显示的图片\nIconArea_Text=#FF0000 // 文字颜色（红）\nAttributes=1\n```","categories":["奇淫巧技"]},{"title":"关于","url":"/about/index.html","content":"\n# 关于作者\n\nJamling，男，正式的职业为一名Java/Android软件工程师，您可以通过以下联系方式与我交流相关技术问题\n * QQ群：629153672（Android快速开发框架及支付sdk群）；307490913（SmartIM及其插件使用问题）\n * Email: <a href=\"mailto:li.jaming@gmail.com\" title=\"li.jaming@gmail.com\">li.jaming@gmail.com</a>\n * Github: https://github.com/Jamling\n\n# 关于本站\n从2004年开始，都忘了做了多少个人主页了，从2015年开始，我陆续将一些项目托管到github，觉得github page挺好的。于是选择了Tommy大神的Hexo将原来的dokuwiki站点迁移到现在的这个blog + project网站，本站使用自主设计及开发的[hexo-theme-nova]主题，并应用了自己编写的[hexo-generator-index2]，[hexo-generator-i18n], [hexo-generator-github]等插件，如果有喜欢的朋友不妨给个友链\n\n# 关于捐赠\n * 文章打赏：如果您觉得博客文章写得不错，可以对文章打赏；如果文章中有不对之处，随时欢迎您的纠正~\n * 项目捐赠：推荐您能在github上为相关项目贡献一份力量（star或fork），同时，也非常欢迎您能够慷慨解囊（捐赠）\n\n所有捐赠或打赏记录，将在2个工作日内更新，本人精力及业余时间有限，如若有网友咨询相关技术问题，将优先对捐赠/打赏对象进行解答，如果您对我的回答表示满意，可以选择打赏一个小小的红包做为奖励~\n\n[hexo-theme-nova]: https://github.com/Jamling/hexo-theme-nova\n[hexo-generator-index2]: https://github.com/Jamling/hexo-generator-index2\n[hexo-generator-i18n]: https://github.com/Jamling/hexo-generator-i18n\n[hexo-generator-github]: https://github.com/Jamling/hexo-generator-github\n"},{"title":"个人简历","url":"/about/resume2.html","content":"\n<style>\nthead {\n  display: none;\n}\n</style>\n\n## 基本信息\n\n{% raw %}\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<td><strong>姓名</strong></td>\n<td>李加明</td>\n<td><strong>性别</strong></td>\n<td>男</td>\n</tr>\n<tr>\n<td><strong>出生年月</strong></td>\n<td>1985.04.13</td>\n<td><strong>民族</strong></td>\n<td>汉</td>\n</tr>\n<tr>\n<td><strong>政治面貌</strong></td>\n<td>无</td>\n<td><strong>婚姻</strong></td>\n<td>已婚</td>\n</tr>\n<tr>\n<td><strong>手机</strong></td>\n<td>13913316745</td>\n<td><strong>Email</strong></td>\n<td><a href=\"mailto:ljm-05@163.com\" target=\"_blank\" rel=\"external\">ljm-05@163.com</a></td>\n</tr>\n<tr>\n<td><strong>住址</strong></td>\n<td colspan=\"3\">南京市江宁区东山街道万安南路9号</td>\n</tr>\n</tbody>\n</table>\n{% endraw %}\n\n## 教育背景\n\n|  |  |  |\n| --- | --- | --- | ---\n| **毕业院校** | 河海大学 | **时间** | 2003.9-2007.6\n| **所学专业** | 计算机科学与技术 | **学历** | 本科\n| **英语水平** | CET-4\n\n## 求职意向\n\n|  |  |  |\n| --- | --- | --- | ---\n| **工作地区** | 南京 | **工作性质** | 全职\n| **从事行业** | 计算机软件/互联网 | **意向职位** | 技术经理/项目经理\n\n## 工作经历\n### 南京买哪儿科技有限公司\n起止时间：2015.06－\n工作内容：\n- 组建Android团队，完成公司核心产品买哪儿App客户端研发\n- 构建客户端框架，制定开发规范、开发流程与项目开发计划\n- 负责公司相关客户端产品如买方顾问App，客服App，云商App等项目开发\n- 负责公司后台微服务架构搭建，并将数据可视化分析迁移到微服务构架中\n\n### 途牛旅游网(南京)\n起止时间：2015.04 － 2015.06\n工作内容：\n- 参与途牛App内容项目开发，负责发现模块游记的开发与维护\n- 负责图牛App的开发与维护，完成游记模块的发布功能\n\n### 南京朗睿科技有限公司\n起止时间：2014.5－2015.4\n工作内容：\n- 负责中国移动插件平台客户端（和家庭）项目研发\n- 负责团队新人培养\n\n### 仁宝（南京）信息研发有限公司\n起止时间：2011.6－2014.4\n工作内容：\n- 参与CompalUI项目，负责Android系统Application及Framework层的开发\n- 负责Google Pixel Nootbook产线软件测试项目\n- 负责团队建设和管理\n\n### 南京文思创新软件技术有限公司\n起止时间：2008.8－2011.5\n工作内容：\n- 第一年从事J2EE开发，主要参与项目有华为eSpace项目\n- 第二年从事J2SE开发，负责技术指导及框架实现\n- 第三年管理J2ME项目，负责手机电视客户端的迭代开发\n\n### 联创（南京）股份科技有限公司\n起止时间：2007.7－2008.1\n工作内容：\n- 主要从事公司内部OA系统的开发与维护\n\n## 项目经验\n\n### 买哪儿\n\n参与时间：\t15.06-\n项目描述：\t买哪儿App是买哪儿推出的核心产品，采用传统的MVC架构，分离library与app，小体积，高性能，可以满足版本的快速开发与迭代\n项目职务：\tProject Leader & Software Developer\n项目职责：\t配合产品完成项目各版本功能开发或迭代，完成MVC构架设计，不断地优化与完善底层核心library\n\n### 和家庭\n\n参与时间：\t14.05-15.04\n项目描述：\t提供sdk基础能力，内置相册，群组，消息，家庭圈，IM插件的插件式Android客户端\n项目职务：\tProject Leader & Software Developer\n项目职责：\t项目管理，对客户提出的需求进行功能分解与排期，完成如IM等关键性技术点的开发\n\n### Google Pixel Nootbook产线软件测试项目\n\n参与时间：\t13.06-14.04\n项目描述：\tGoogle第一代Pixel笔记本生产线相关的软件部分支援，如系统下载，Running测试，日志备份等\n项目职务：\tProject Leader & Software Developer\n项目职责：\t负责项目对外事务，解决部分技术难点\n\n### Auto Test Tool\n\n参与时间：\t13.06-14.04\n项目描述：\tAndroid平台自动化测试套件及工具，有MonkeyRecorder，CFTT等\n项目职务：\tDesign Leader & Software Developer\n项目职责：\t参与迭代开发\n\n### Ocean Browser/Email\n\n参与时间：\t12.06-13.01\n项目描述：\t专为移动终端实现单指操作而设计的智能高速浏览器\n项目职务：\tDesign Leader & Software Developer\n项目职责：\t负责标签页管理，全屏浏览等模块的开发\n\n### Compal UI/Framework\n\n参与时间：\t11.06-12.01\n项目描述：\t拥有自主产权的Android UI系统，以提供OEM厂商UI相关的解决方案\n项目职务：\tSoftware Developer\n项目职责：\t负责Settings, Launcher, Widget等的定制化，社交相关的lib封装及设计\n\n### IPTV 机顶盒客户端\n\n参与时间：\t11.03-11.05\n项目描述：\t集视频通话，数字电视，媒体播放，第三方应用于一身的Android智能数字电视机顶盒客户端，包含本地文件浏览，媒体文件播放，应用商店等功能。\n项目职务：\tSoftware Developer\n项目职责：\t负责DLNA模块开发（支援）\n\n### 四川移动车载音乐Kjava客户端\n\n参与时间：\t10.10-10.12\n项目描述：\t利用手机互联网及蓝牙技术，带来移动车载新体验\n项目职务：\tProgram Manager\n项目职责：\t负责蓝牙自定义协议规范的定制，开发并调试蓝牙连接模块功能（支援）\n\n### 手机电视Kjava客户端\n\n参与时间：\t10.04-11.02\n项目描述：\tkjava手机上的网络视频客户端\n项目职务：\tProgram Manager\n项目职责：\t项目管理，版本迭代\n\n### 仿真平台多核管理工具\n\n参与时间：\t09.10-10.03\n项目描述：\t仿真平台服务器状态远程监控应用\n项目职务：\tProgram Leader & Software Developer\n项目职责：\t负责软件框架，网络报文的解析等关键技术实现（外派）\n\n### XX Tool使用网站\n\n参与时间：\t09.7-09.9\n项目描述：\t客户方某工具使用网站，包含工具介绍、工具上传/下载、FAQ、讨论区等，采用Spring MVC构架，TDD驱动开发。\n项目职务：\tSoftware Developer\n项目职责：\t前端CSS2+DIV设计、所有功能模块实现及100%JUnit用例覆盖、持续集成。\n\n### 华为企业运营网站\n\n参与时间：\t08.12-09.07\n项目描述：\t按时下流行的SSH架构，开发eSpace企业运营网站\n项目职务：\tSoftware Developer\n项目职责：\t核心框架维护，公共模块组件开发\n\n## 自我评价\n### 技能方面\n有2年J2EE开发经验，熟悉Spring、Mybatis等开源框架；Ant、Gradle等构建工具；Mysql等数据库；JavaScript等Web技术；\n1年的移动开发经验，熟悉j2me移动平台开发；\n半年的Eclipse RCP开发经验；熟悉Eclipse插件开发流程，有成熟产品发布；\n7年的Android开发经验；熟悉Application层开发，具备独立的App开发能力；\n\n### 管理方面\n多年的中小团队管理经验；\n多年的中小项目管理经验；\n多年的新人技术培训经验；\n\n### 性格方面\n工作认真踏实，责任心强；\n性格乐观向上，适应力强；\t\t\t\n补充说明\t较高的学习兴趣，较强的学习能力及解决问题能力；对相关的技术都有所了解；在工作之余也涉猎一些技术相关的研究及探索。\n"},{"title":"categories","url":"/categories/index.html"},{"title":"站点收藏","url":"/fav/index.html","content":"\n## Java\n- [JavaFAQ](http://www.coderanch.com/how-to/search?CategoryFaq)\n- [jooq orm](http://sourceforge.net/projects/jooq/files/)\n- http://www.programcreek.com/\n- http://www.javased.com\n- http://www.mvnrepository.com/ 找jar很方便\n\n## Eclipse \n- [eclipse pde tutorial](http://www.vogella.de/)\n- [jdt guide](http://www.linuxtopia.org/online_books/eclipse_documentation/eclipse_jdt_plug-in_developer_guide/index.html)\n- [jface snippets](http://wiki.eclipse.org/JFaceSnippets)\n\n## Android\n- jayway http://blog.jayway.com/category/android/\n- android drawable http://since2006.com/android/2.1-drawables.php\n- [Github上的andoird开源组件整理 - luoyjx - 搞起博客 - 国内最小技术博客](http://blog.gaoqixhb.com/p/545321a35a6e8e6729c06bea/)\n- [2015最流行的Android组件、工具、框架大全 - OPEN 开发经验库](http://www.open-open.com/lib/view/open1436262653692.html) \n- [Android 沉浸式状态栏设计以及ContentView获取 - 小雨伞漂流记 - 开源中国社区](http://my.oschina.net/ososchina/blog/369630)\n- [Android代码实现ColorStateList及StateListDrawable - Sodino的专栏 - 博客频道 - CSDN.NET](http://blog.csdn.net/sodino/article/details/6797821)\n- [Android 高仿 QQ5.0 侧滑菜单效果 自定义控件来袭 - Hongyang - 博客频道 - CSDN.NET](http://blog.csdn.net/lmj623565791/article/details/39257409)\n- [android中EditText插入用户名（块）效果（EditText插入图片）](http://blog.csdn.net/leinote/article/details/9422005)\n- [Android界面特效全汇总 - 千里之外 - 博客频道 - CSDN.NET](http://blog.csdn.net/woshinia/article/details/11039677)\n- http://romannurik.github.io/AndroidAssetStudio/\n\n## Other\n- opencv http://www.opencv.org.cn/\n- opengl texture http://www.bangchui.org/read.php?tid=9354\n- [清华大学 TUNA 镜像源](https://mirrors.tuna.tsinghua.edu.cn/help/#AOSP)\n- [MaHua 在线markdown编辑器](http://mahua.jser.me/)(http://blog.csdn.net/sodino/article/details/6797821)\n- [IcoMoon App - Icon Font, SVG, PDF & PNG Generator](https://icomoon.io/app/#/select)\n\n- [结构之法 算法之道 - 博客频道 - CSDN.NET](http://blog.csdn.net/v_july_v?viewmode=contents)\n- [响应式截图](http://ami.responsivedesign.is/)\n- http://howtocenterincss.com/\n- http://idea.qinxi1992.cn/ idea reg server\n- http://shields.io/ 给你的项目打上各种标签\n- https://bandwagonhost.com/vps-hosting.php\n- http://clazz.github.io/tools/json-viewer/"},{"url":"/other/announce.html","content":"<!-- <div>\n  今天是<strong>情人节</strong>，<a href=\"http://www.ieclipse.cn/other/love2.html\" style=\"color:red;\">爱情树</a>开放啦! 在此也祝广大网友节日快乐！\n  <div>\n    PS: 如果您也喜欢这棵爱情树，请右键<a href=\"http://www.ieclipse.cn/other/love2.html\" style=\"color:red;\">点击这里</a>，然后选择“目标另存为”\n  </div>\n</div> -->\n<div>\n  暂无公告\n  <br>\n  <a href=\"//www.ieclipse.cn/other/\" style=\"color:red;\">本站特色内容</a>\n</div>\n"},{"title":"一些好玩的","url":"/other/index.html","content":"\n在此介绍本主题一些好玩的东东\n\n### 个人简历\n在`front-matter`中添加`type: resume`，可以使用简历模板。[点击这里](resume.html)查看示例。\n\n### 加密内容\n如果你的网页不想所有的人查看，可以通过在`front-matter`中添加`password: xxx`（xxx是设置的密码）来实现简单的加密。\n[点击这里](password.html)查看示例（密码：123）。\n\n### 爱情树\n不同的节日或生日，会有专属祝福语及相应的背景音乐\n相恋的时间越长，爱心树越茂盛\n本效果已经集成到nova主题中，点击[love.html](./love.html)查看\n[某人专属，密码你懂的](./jasmin.html)\n\n### 思维导图\n参考[分类](../categories/index.html)\n\n### 项目文档\n内容来自github，参考[项目](../p/)\n"},{"title":"爱你一萬年","url":"/other/love.html","content":"\n<div class=\"container-fluid\">\n  <div class=\"formusic\" style=\"z-index: -99999 !important; height: 0;\">\n    <audio\n      style=\"visibility: hidden; width: 0 !important; height: 0 !important;\"\n      autoplay=\"true\" controls=\"false\">\n      <source id=\"bgmp3\" src=\"//dingdi.ieclipse.cn/lovetree/Valentine_s_Day.mp3\" type=\"audio/mpeg\">\n      <!-- 背景音乐, 可以替换成自己喜欢的 -->\n    </audio>\n  </div>\n  <div id=\"main\" class=\"container\">\n    <div id=\"error\">\n      本页面采用HTML5编辑，目前您的浏览器无法显示，请换成谷歌(<a\n        href=\"http://www.google.cn/chrome/intl/zh-CN/landing_chrome.html?hl=zh-CN&brand=CHMI\"\n        target=\"_blank\" rel=\"external\">Chrome</a>)或者火狐(<a\n        href=\"http://firefox.com.cn/download/\" target=\"_blank\"\n        rel=\"external\">Firefox</a>)浏览器，或者其他游览器的最新版本。\n    </div>\n    <div id=\"wrap\" class=\"row\">\n      <div id=\"love\" class=\"col-xs-12 col-md-12\">\n        <canvas id=\"canvas\"></canvas>\n      </div>\n\n      <div id=\"clock-box\" class=\"col-xs-12\">\n        <span class=\"author\">明月</span>与<span class=\"lover\">欣有所属</span>已经相恋了\n        <div id=\"clock\"></div>\n      </div>\n\n      <div id=\"text\" class=\"col-xs-12 col-md-6\">\n        <div id=\"code\">\n          <div class=\"say\">献给我挚爱的：<span class=\"lover\">小欣</span></div>\n          <!-- <div class=\"say\"> </div> -->\n          <div class=\"say\"> </div> <div class=\"say\">从我们相识相爱到现在</div>\n          <div class=\"say\"> </div> <div class=\"say\">已经有<span class=\"years\">3</span>年多的时间了</div>\n          <div class=\"say\"> </div> <div class=\"say\">我不曾送你一束鲜花</div>\n          <div class=\"say\"> </div> <div class=\"say\">不代表我不爱你</div>\n          <div class=\"say\"> </div> <div class=\"say\">我将用程序员特有的方式</div>\n          <div class=\"say\"> </div> <div class=\"say\">献上我的祝福</div>\n          <div class=\"say\"> </div> <div class=\"say\"><span class=\"festival\">XX节</span>快乐！</div>\n          <div class=\"say\"> </div> <div class=\"say\">\n          <span class=\"space\"></span> -- <span class=\"author\">明月</span>--</div>\n        </div>\n      </div>\n      <div id=\"screen-detect\" class=\"hidden-xs\">\n      </div>\n    </div>\n  </div>\n</div>\n  "},{"title":"内容加密示例","url":"/other/password.html","content":"\n### 加密准备\n在内容之前插入加密脚本，在内容之后插入解密脚本，示例代码如下：\n\n``` htmlbars\n{{ page_encrypt(page, {dom:'.page-body', src:'/js/encrypt.min.js'}) }}\n<div class=\"page-body\">\n{%- block content %}\n  {{ page.content }}\n{%- endblock %}\n</div>\n{{ js('/js/decrypt.min.js') }}\n```\n\n### 加密选项\n`v`：加密版本，目前为1，解密难度：低；所以一般懂前端的人要破解密码，不是一件难事，后面可能会升级加密算法。\n`src`：加密脚本，默认为`/js/encrypt.min.js`，内容加密算法不在这里，估计有人不信，那自己看脚本吧。\n`dom`：加密对象DOM元素的选择器，如果密码正确，对应的DOM节点会显示解密后的内容\n\n### 解密算法\n解密脚本与加密脚本是一一对应的。默认为`/js/decrypt.min.js`\n\n### 密码\n密码存放在源文件中，所以如果不想让别人看到你设置的密码，确保你的源文件不被别人看到即可，如将源代码仓库设置为私有\n\n### 特别说明\n本加密对`.md`的支持不是特别好，请慎重使用。因为它不像`.html`那样可以直接渲染，试想，如果对`.md`内容加密了，如何将markdown转为html呢？如果大家有什么好的想法，不妨留下您的宝贵意见。\n"},{"title":"个人简历 － Android","url":"/about/resume.html","content":"\n<div class=\"container\" id=\"cv\">\n  <div class=\"row\">\n    <div class=\"side col-xs-12 col-md-4\">\n      <div class=\"me\">\n        <div class=\"portrait\" data-toggle=\"modal\" data-target=\"#input-modal\" data-type=\"bg\" data-selector=\".portrait\"></div>\n        <h1 id=\"username\">李加明</h1>\n        <h4 id=\"persona-tag\">Java / Android / Web</h4>\n      </div>\n      <div class=\"profile info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-user\"></span> <span class=\"info-title\">基本信息</span>\n        </h2>\n        <hr>\n        <ul class=\"info-list\">\n          <li><label class=\"left-label\">姓名</label><span class=\"label-value\">李加明</span></li>\n          <li><label class=\"left-label\">出生年月</label><span class=\"label-value\">1985.4</span></li>\n          <li><label class=\"left-label\">毕业院校</label><span class=\"label-value\">河海大学&nbsp;&nbsp;<span class=\"badge\">211</span></span></li>\n          <li><label class=\"left-label\">毕业年份</label><span class=\"label-value\">2007</span></li>\n          <li><label class=\"left-label\">学历</label><span class=\"label-value\">本科</span></li>\n          <li><label class=\"left-label\">求职意向</label><span class=\"label-value\">开发/管理</span></li>\n        </ul>\n      </div>\n      <div class=\"contact info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-earphone\"></span> <span class=\"info-title\">联系方式</span>\n        </h2>\n        <hr>\n        <ul class=\"info-list\">\n          <li><label class=\"left-label\">手机</label><span class=\"label-value\">13913316745</span></li>\n          <li><label class=\"left-label\">邮箱</label><span class=\"label-value link\"><a\n              href=\"mailto:13913316745@163.com\">13913316745@163.com</a></span></li>\n\t\t      <li><label class=\"left-label\">QQ/微信</label><span class=\"label-value link\"><a\n              href=\"\">157250921/13913316745</a></span></li>\n          <li><label class=\"left-label\">个人主页</label><span class=\"label-value link\"><a\n              href=\"http://www.ieclipse.cn\">https://www.ieclipse.cn</a></span></li>\n          <li><label class=\"left-label\">Github</label><span class=\"label-value link\"><a\n              href=\"https://github.com/Jamling\">Jamling</a></span></li>\n        </ul>\n      </div>\n      <div class=\"skill info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-star\"></span> <span class=\"info-title\">技能点</span>\n        </h2>\n        <hr>\n        <ul class=\"progress-list\">\n          <li><label class=\"left-label\">Java</label> <progress value=\"85\" max=\"100\"></progress></li>\n          <li><label class=\"left-label\">Android</label> <progress value=\"90\" max=\"100\"></progress></li>\n          <li><label class=\"left-label\">Web</label> <progress value=\"65\" max=\"100\"></progress></li>\n          <li><label class=\"left-label\">管理</label> <progress value=\"70\" max=\"100\"></progress></li>\n        </ul>\n      </div>\n      <div class=\"stack info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-wrench\"></span> <span class=\"info-title\">相关作品</span>\n        </h2>\n        <hr>\n        <ul class=\"stack-list\">\n          <li><label class=\"left-label\"><a href=\"/p/eclipse-explorer\">Eclipse Explorer</a></label>\n          <span class=\"label-value\">最强的eclipse explorer插件，没有之一</span>\n          </li>\n          <li><label class=\"left-label\"><a href=\"/p/android-orm\">Aorm</a></label>\n          <span class=\"label-value\">较早的Android ORM框架，1.0版本时，那会ormlite还没有发布呢</span></li>\n          <li><label class=\"left-label\"><a href=\"/p/quickaf\">QuickAF</a></label>\n          <span class=\"label-value\">一个Android上面的快速开发框架，内置大量的组件及实用工具</span></li>\n        </ul>\n      </div>\n      <!--             <div class=\"code info-unit\"> -->\n      <!--                 <h2 class=\"info-header\"><span class=\"glyphicon glyphicon-user\"></span> <span class=\"info-title\">个人微信</span></h2> -->\n      <!--                 <hr> -->\n      <!--                 <div class=\"weixin\" data-toggle=\"modal\" data-target=\"#input-modal\" data-type=\"src\" data-selector=\".weixin img\"> -->\n      <!--                     <img src=\"static/image/weixin.png\" alt=\"\"> -->\n      <!--                 </div> -->\n      <!--             </div> -->\n    </div>\n    <div class=\"main col-xs-12 col-md-8\">\n      <div class=\"btn-print-bar\">\n        <button type=\"button\" class=\"btn btn-info\" onclick=\"javascript: toggle_print()\">\n            <span class=\"glyphicon glyphicon-print\"></span> 打印准备\n        </button>\n        <button type=\"button\" class=\"btn btn-primary\" onclick=\"javascript: printdiv()\">\n            <span class=\"glyphicon glyphicon-print\"></span> 打印\n        </button>\n      </div>\n      <!--             <div class=\"education info-unit right-list\"> -->\n      <!--                 <h2 class=\"info-header\"><span class=\"glyphicon glyphicon-book\"></span> <span class=\"info-title\">教育经历</span></h2> -->\n      <!--                 <hr> -->\n      <!--                 <ul class=\"experience-list\"> -->\n      <!--                     <li> -->\n      <!--                         <h3>北京邮电大学 - 网络工程专业（本科）2012-2017</h3> -->\n      <!--                         <p> -->\n      <!--                             Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. -->\n      <!--                         </p> -->\n      <!--                     </li> -->\n      <!--                 </ul> -->\n      <!--             </div> -->\n      <div class=\"work info-unit right-list\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-briefcase\"></span> <span class=\"info-title\">工作经历</span>\n        </h2>\n        <hr>\n        <ul class=\"experience-list\">\n          <li>\n            <h3>南京中软国际科技服务有限公司（2020.07－）</h3>\n            <p><ul>\n              <li>参与华为智慧语音（小艺）Android开发，负责智慧屏、儿童手表、中控屏等泛终端Android开发，负责设置、多音色、智慧管家等相关模块开发，看护唤醒、音视频交互、隐私安全、稳定性等\n</li>\n              <li>重构UX相关模块，代码重复率下降1.3%</li>\n              <li>业余开发翻译辅助工具、Gerrit助手、依赖分析等效率提升工具</li>\n              <li>积极提升团队能力、重视产出质量、所带项目均获S级评价</li>\n            </ul></p>\n          </li>  \n          <li>\n            <h3>南京买哪儿科技有限公司（2015.06－2020.04）</h3>\n            <p><ul>\n              <li>组建Android团队，制定开发规范与开发流程，完成公司核心产品买哪儿App客户端研发</li>\n              <li>负责公司相关客户端产品如买方顾问App，客服App，云商App等项目开发</li>\n              <li>负责公司后端微服务架构构建，主导运营数据可视化模块实现</li>\n            </ul></p>\n          </li><!--\n          <li>\n            <h3>途牛旅游网（2015.4－2015.6）</h3>\n            <p><ul>\n              <li>参与途牛App内容项目开发，负责发现模块游记的开发与维护</li>\n              <li>负责图牛App的开发与维护，完成游记模块的发布功能</li>\n            </ul></p>\n          </li>-->\n          <li>\n            <h3>南京朗睿科技有限公司（2014.5－2015.4）</h3>\n            <p><ul>\n              <li>负责中国移动插件平台客户端（和家庭）项目管理</li>\n              <li>负责团队新人培养</li>\n            </ul></p>\n          </li>\n          <li>\n            <h3>仁宝（南京）信息研发有限公司（2011.6－2014.4）</h3>\n            <p><ul>\n              <li>参与CompalUI项目，负责Android系统Application及Framework层的开发</li>\n              <li>负责Google Pixel Nootbook产线软件测试项目</li>\n              <li>负责团队建设和管理</li>\n            </ul></p>\n          </li>\n          <li>\n            <h3>南京文思创新软件技术有限公司（2008.8－2011.5）</h3>\n            <ul>\n              <li>第一年从事J2EE开发，主要参与项目有华为eSpace项目</li>\n              <li>第二年从事J2SE开发，负责技术指导及框架实现</li>\n              <li>第三年管理J2ME项目，负责手机电视客户端的迭代开发</li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n      <div class=\"project info-unit right-list\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-tasks\"></span> <span class=\"info-title\">项目经验</span>\n        </h2>\n        <hr>\n        <ul class=\"experience-list\">\n          <li>\n            <h3>买哪儿App（15.06-）</h3>\n            <p>买哪儿App是买哪儿推出的核心产品，采用传统的MVC架构，分离library与app，小体积，高性能，可以满足版本的快速开发与迭代</p>\n          </li>\n          <li>\n            <h3>和家庭（14.05-15.4）</h3>\n            <p>和家庭为江苏移动推出的智慧家庭生活类客户端产品，客户端提供sdk基础能力，内置相册，群组，消息，家庭圈，IM即时通讯等插件</p>\n          </li>\n          <li>\n            <h3>Auto Test Tool（13.06-14）</h3>\n            <p>Auto Test Tool是由仁宝信息自主研发的一套Android平台自动化测试套件及工具，有MonkeyRecorder，CFTT等</p>\n          </li>\n          <li>\n            <h3>Ocean Browser/Email</h3>\n            <p>Ocean 系列为仁宝信息研发自主设计、研发的Android App，结合Compal UI/Framework，给OEM厂商提供的一整套UI解决方案</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n"},{"title":"捐赠墙","url":"/donate/index.html","content":"<script>\n  var top = {project: false}\n  function loadRecords(current) {\n\n    $.getJSON('//api.ieclipse.cn/donate?p=' + (current === undefined ? 1 : current), function(data) {\n      $(\"#tb-main tr:not(:first)\").remove();\n      var items = [];\n\n      $.each(data.all_list, function(key, val) {\n        var d = new Date(val.time);\n        // d.setTime(val.time * 1000);\n        var newRow = ('<tr><td>' + (key + 1) + '</td><td>' + val.name + '</td><td>￥' + val.value + '</td><td>' + d.toLocaleDateString() + '</td></tr>');\n        $(\"#tb-main tr:last\").after(newRow);\n      });\n\n      initPage(Number(data.total), Number(data.page_size), current === undefined ? 1 : current);\n\n      $(\"#tb-top-count tr:not(:first)\").remove();\n        $.each(data.top_count, function(key, val) {\n        var newRow = ('<tr><td>' + (key + 1) + '</td><td>' + val.name + '</td><td>' + val.value + '</td></tr>');\n        $(\"#tb-top-count tr:last\").after(newRow);\n      });\n\n      $(\"#tb-top-sum tr:not(:first)\").remove();\n      $.each(data.top_sum, function(key, val) {\n        var trcls = \"\";\n        if (key == 0) {\n          trcls = ' class=\"success\"';\n        } else if (key == 1) {\n          trcls = ' class=\"info\"';\n        } else if (key == 2) {\n          trcls = ' class=\"warning\"';\n        }\n        var newRow = ('<tr' + trcls + '><td>' + (key + 1) + '</td><td>' + val.name + '</td><td>' + val.value + '</td></tr>');\n        $(\"#tb-top-sum tr:last\").after(newRow);\n      });\n\n      if (top.project) {\n      $(\"#tb-prj-count tr:not(:first)\").remove();\n      $.each(data.prj_count, function(key, val) {\n        var trcls = \"\";\n        if (key == 0) {\n          trcls = ' class=\"success\"';\n        } else if (key == 1) {\n          trcls = ' class=\"info\"';\n        } else if (key == 2) {\n          trcls = ' class=\"warning\"';\n        }\n        var newRow = ('<tr' + trcls + '><td>' + (key + 1) + '</td><td>' + val.name + '</td><td>' + val.value + '</td></tr>');\n        $(\"#tb-prj-count tr:last\").after(newRow);\n      });\n      }\n    });\n\n    function initPage(total, size, page){\n      var tp = Math.ceil(total / size);\n      var currentPage = page === undefined ? 1 : page;\n      var pageSize = size == undefined ? 10 : size;\n      var html = '<ul class=\"pagination\">';\n      if (tp > 0) {\n        html += '<li>';\n        html += '<a href=\"#\" onclick=\"javascript:goPage(' + (currentPage > 1 ? currentPage - 1 : 1) + ',' + pageSize + ');\" aria-label=\"Previous\">'\n        html += '<span aria-hidden=\"true\">&laquo;</span>';\n        html += '</a>';\n        html += '</li>';\n\n        for (var i=1; i<=tp; i++) {\n          html += '<li><a href=\"#\" onclick=\"goPage(' + i + ',' + size + ');\">' + i + '</a></li>';\n        }\n\n        html += '<li>';\n        html += '<a href=\"#\" onclick=\"goPage(' + (currentPage == tp ? tp : currentPage + 1) + ',' + pageSize + ');\" aria-label=\"Next\">'\n        html += '<span aria-hidden=\"true\">&raquo;</span>';\n        html += '</a>';\n        html += '</li>';\n      }\n      html += '</ul>';\n      $('#page-bar').replaceWith(html);\n    }\n  }\n\n  function goPage(p, s){\n        loadRecords(p);\n    }\n  window.addEventListener(\"load\", function () {\n    loadRecords();\n  });\n\n  function val_donate(){\n    var f = $('#donateForm');\n    var fe = f.elements;\n    var rg = $('#donateForm :radio');\n    var s = $('#donateForm select');\n    var s1 = \"alipay\";\n\n    for (var i=0;i<rg.length;i++){\n      var r = rg[i];\n      if (r.checked){\n        s1 = r.value;\n        break;\n      }\n    }\n    s1 = s1 || 'alipay';\n    var src = '/image/donate_' + s1;\n\n    src += '.png';\n    $('#donate_pic').attr('src',src);\n  }\n\n  $('#DonateModal').on('show.bs.modal', function (e) {\n    $('#donateForm').reset();\n  })\n</script>\n\n<div class=\"container container-fluid\">\n  <div class=\"jumbotron\">\n    <div class=\"card-content\">\n      <h2 class=\"card-title\">打赏</h2>\n      <p>如果您对相关项目感兴趣，欢迎前往<a href=\"https://github.com/Jamling\">github</a>\n        fork或star，您的star或fork将是我最大的动力！如果您觉得对你有帮助，不妨点击下方的捐赠，请我喝一杯咖啡。您的馈赠将在24小时内更新在下方的打赏记录中~</p>\n    </div>\n    <div class=\"card-action\">\n      <a class=\"btn btn-raised btn-primary\" href=\"#DonateModal\" role=\"button\" data-toggle=\"modal\"\n        data-target=\"#DonateModal\">捐赠</a>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-sx-12 col-sm-8 col-md-9 col-lg-9\">\n      <div class=\"panel panel-primary\">\n        <div class=\"panel-heading\">捐赠/打赏记录</div>\n        <table class=\"table table-condensed table-hover\" id=\"tb-main\">\n          <tr>\n            <th scope=\"row\">序号</th>\n            <th>姓名</th>\n            <th>账号</th>\n            <th>日期</th>\n          </tr>\n        </table>\n      </div>\n      <!-- paginator -->\n      <nav id=\"page-bar\"></nav>\n    </div>\n    <!-- end row main -->\n    <div class=\"col-sx-6 col-sm-4 col-md-3 col-lg-3\">\n      <div class=\"panel panel-primary\">\n        <!-- Default panel contents -->\n        <div class=\"panel-heading\">捐赠次数排行</div>\n        <table class=\"table table-condensed table-hover\" id=\"tb-top-count\">\n          <tr>\n            <th>#</th>\n            <th>姓名</th>\n            <th>次数</th>\n          </tr>\n        </table>\n      </div>\n      <!-- 2nd -->\n      <div class=\"panel panel-primary\">\n        <!-- Default panel contents -->\n        <div class=\"panel-heading\">捐赠金额排行</div>\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped table-hover\" id=\"tb-top-sum\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>姓名</th>\n                <th>金额</th>\n              </tr>\n            </thead>\n            <tbody>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <!-- end 2nd -->\n    </div>\n    <!-- end top -->\n  </div>\n  <!-- end row -->\n</div>\n<!-- Modal -->\n<div class=\"modal fade\" id=\"DonatePrjectModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"DonatePrjectModalLabel\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h4 class=\"modal-title\" id=\"DonatePrjectModalLabel\">项目捐赠</h4>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-md-5\">\n              <form class=\"form-horizontal\" id=\"donateForm\">\n                <div class=\"control-group\">\n                  <label class=\"control-label\">支付方式</label>\n                  <div class=\"controls radio radio-primary \">\n                    <!-- Multiple Radios -->\n                    <label class=\"\"> <input checked=\"checked\" value=\"alipay\" name=\"pay_method\" type=\"radio\"\n                      onclick=\"val_donate();\"> <span class=\"circle\"></span> 支付宝\n                    </label> <label class=\"\"> <input value=\"wechat\" name=\"pay_method\" type=\"radio\"\n                      onclick=\"val_donate();\"> <span class=\"circle\"></span> 微信支付\n                    </label>\n                  </div>\n                </div>\n\n                <div class=\"control-group\">\n                  <!-- Select Basic -->\n                  <label class=\"control-label\">捐赠项目</label>\n                  <div class=\"controls\">\n                    <select class=\"form-control\" name=\"prj\" onchange=\"val_donate();\">\n                      <option value=\"aorm\">Android-ORM</option>\n                      <option value=\"explorer\">Eclipse-Explorer</option>\n                      <option value=\"adt-ext\">ADT-extensions</option>\n                      <option value=\"other\">其它</option>\n                    </select>\n                  </div>\n                </div>\n                <img id=\"donate_pic\" src=\"/image/donate_alipay.png\" alt=\"...\" class=\"img-rounded\" width=\"160\"\n                  height=\"160\">\n              </form>\n            </div>\n\n            <div class=\"col-md-7\">\n              <h5>扫描左侧的二维码进行捐赠（捐赠金额随意，1分也是爱~）</h5>\n\n              <label>捐赠到账之后，本站会及时更新捐赠/打赏记录及相关的榜单</label> <label class=\"text-warning\">再次诚挚感谢您的支持~</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">关闭</button>\n      </div>\n    </div>\n  </div>\n</div>\n"},{"url":"/other/addon.js","content":"var TreeAddon = function(width, height, opts) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\topts = opts || {};\n\t\t// branch\n\t\tthis.maxCount = opts.hasOwnProperty('maxCount') ? opts.maxCount : 32;\n\t\tthis.maxDepth = opts.hasOwnProperty('maxDepth') ? opts.maxDepth : 2;\n\n\t\tthis.maxWidth = opts.hasOwnProperty('maxWidth') ? opts.maxWidth : 30;\n\t\tthis.minArc = opts.hasOwnProperty('minArc') ? opts.minArc : 15;\n\t\tthis.maxArc = opts.hasOwnProperty('maxArc') ? opts.maxArc : 45;\n\t\tthis.maxLength = opts.hasOwnProperty('maxLength') ? opts.maxLength : 100;\n\n\t\tthis.root = new BranchAddon(this);\n\n\t\t// bloom\n\t\tthis.bloomWidth = opts.hasOwnProperty('bloomWidth') ? opts.bloomWidth : this.width;\n\t\tthis.bloomHeight = opts.hasOwnProperty('bloomHeight') ? opts.bloomHeight : this.height;\n\t\tthis.bloomRadius = opts.hasOwnProperty('bloomRadius') ? opts.bloomRadius : 120;\n\t\t// enable\n\t\tthis.enable = opts.hasOwnProperty('enable') ? !! opts.enable : true;\n\t}\n\nTreeAddon.prototype.add = function(c) {\n\tvar i = 0;\n\tj = 0;\n\tfor (; i < 4 && c > 0; i++) {\n\t\tfor (; j < 3 && c > 0; j++) {\n\t\t\tvar dir = i % 2 == 0 ? 0x00 : 0x10;\n\t\t\tvar len = this.maxLength;\n\t\t\tif (i >= 2) {\n\t\t\t\tlen *= 0.8;\n\t\t\t}\n\t\t\tif (j == 0) {\n\t\t\t\tthis.root.addChild(0.7 - 0.15 * i, len, dir);\n\t\t\t} else {\n\t\t\t\tthis.root.subs[i + 1].addChild(0.4 * j, 0, dir);\n\t\t\t}\n\t\t\tc--;\n\t\t}\n\t\tj = 0;\n\t}\n};\n\nTreeAddon.prototype.grow1 = function(c) {\n\tvar start = 0.25;\n\tvar step = 0.15;\n\tif (c < 4) {\n\t\tstep = (0.8 - start) / 4;\n\t}\n\tfor (var i = 0; i < 4 && this.count > 0; i++) {\n\t\tvar len = this.maxLength;\n\t\tif (i < 2) {\n\t\t\tlen *= 0.8;\n\t\t}\n\t\tthis.root.addChild(0.35 + step * i, len, 0);\n\t\tthis.count--;\n\t}\n};\n\nTreeAddon.prototype.grow2 = function() {\n\tfor (var i = 0; i < 2 * 4 && this.count > 0; i++) {\n\t\tvar len = this.maxLength;\n\t\tif (i < 2) {\n\t\t\tlen *= 0.8;\n\t\t}\n\t\tvar n = simpleFind(this.root);\n\t\tn.addChild(0.33 * (n.subs.length + 1), 0, 0);\n\t\tthis.count--;\n\t}\n\n\tfunction simpleFind(p) {\n\t\tfor (var i = 0; i < p.subs.length; i++) {\n\t\t\tvar c = p.subs[i];\n\t\t\tif (c.subs.length < 2) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t}\n};\n\nTreeAddon.prototype.getBranches = function() {\n\tvar c = this.maxCount;\n\tthis.count = this.maxCount;\n\tif (c == 1) {\n\t\tthis.root.addChild(0.5, 80, 0x10);\n\t} else {\n\t\tthis.count--;\n\t\tthis.grow1(c);\n\t\tthis.grow2();\n\t\tthis.root.addChild(0.8, 80, 0x10);\n\t}\n\treturn [this.root.toArray()];\n};\n\nvar BranchAddon = function(treeAddon, parent, idx) {\n\t\tthis.treeAddon = treeAddon;\n\t\tthis.parent = parent;\n\t\tthis.idx = idx;\n\t\tthis.subs = [];\n\n\t\tif (typeof(parent) === 'undefined') {\n\t\t\tthis.dir = 0;\n\t\t\tthis.depth = 0;\n\t\t\tthis.width = this.treeAddon.maxWidth;\n\t\t\t// this.angle = window.random(this.treeAddon.minArc, this.treeAddon.maxArc) * Math.PI / 180 / 2;\n\t\t\tthis.angle = /*window.random(5,15)*/\n\t\t\t100 * Math.PI / 180;\n\t\t\tthis.startX = this.treeAddon.width / 2 - this.width;\n\t\t\tthis.startY = this.treeAddon.height;\n\t\t\tthis.endY = this.treeAddon.height * 0.2;\n\t\t\t//this.endX = this.startX - (this.startY - this.endY) * Math.tan(this.angle);\n\t\t\tthis.endX = this.startX + (this.startY - this.endY) / Math.tan(this.angle);\n\t\t\tthis.midX = window.random(this.endX, this.endX + this.width);\n\t\t\tthis.midY = window.random(this.endY, this.endY + this.width);\n\t\t\tthis.length = Math.sqrt((this.endY - this.startY) * (this.endY - this.startY) + (this.endX - this.startX) * (this.endX - this.startX));\n\t\t\t//this.length =\n\t\t\tthis.trim();\n\t\t\t//console.log(\"root:\" + this);\n\t\t} else {\n\t\t\tthis.depth = parent.depth + 1;\n\t\t\tthis.angle = window.random(this.treeAddon.minArc, this.treeAddon.maxArc) * Math.PI / 180;\n\t\t\tvar ta = 45 * Math.PI / 180;\n\t\t\tif (parent.subs.length % 2 == 0) {\n\t\t\t\tta = 0 - ta;\n\t\t\t\tthis.dir = 1;\n\t\t\t}\n\t\t\tthis.angle = parent.angle + ta;\n\t\t}\n\n\t}\n\nBranchAddon.prototype.trim = function() {\n\tthis.startX = Math.ceil(this.startX);\n\tthis.startY = Math.ceil(this.startY);\n\tthis.endX = Math.ceil(this.endX);\n\tthis.endY = Math.ceil(this.endY);\n\tthis.midX = Math.ceil(this.midX);\n\tthis.midY = Math.ceil(this.midY);\n\tthis.length = Math.ceil(this.length);\n};\n\nBranchAddon.prototype.toString = function() {\n\treturn \"(\" + this.startX + \",\" + this.startY + \"),\" + \"(\" + this.endX + \",\" + this.endY + \"),\" + \"(\" + this.midX + \",\" + this.midY + \"),\" + \"length:\" + this.length + \",width=\" + this.width + \",angle=\" + (this.angle * 180 / Math.PI) + \",this.depth=\" + this.depth + \",dir=\" + this.dir;\n};\n\nBranchAddon.prototype.random = function(parent, startX, startY, length, depth, width) {\n\tthis.treeAddon = treeAddon;\n\tthis.startX = startX;\n\tthis.startY = startY;\n\tthis.length = length;\n\tthis.angle = window.random(this.treeAddon.minArc, this.treeAddon.maxArc) * Math.PI / 180;\n\n\tvar endX = startX + length * Math.cos(angle);\n\tvar endY = startY + length * Math.sin(angle);\n\n\tvar y = this.length * Math.sin(this.angle);\n\tvar x = this.length * Math.cos(this.angle);\n\n\tthis.endX = this.startX + x;\n\tthis.endY = this.startY + y;\n};\n\nBranchAddon.prototype.line = function(p, subDir) {\n\tif (this.length > 0) {\n\t\t//return this.length;\n\t}\n\tvar l = this.length * p;\n\tvar x, y;\n/*\n  var tx = l * Math.sin(this.angle);// 90-a\n  var ty = l * Math.cos(this.angle);//\n  if (this.endX > this.startX) {\n    x = this.startX + tx;\n  }\n  else {\n    x = this.startX  - tx;\n  }\n  if (this.endY < this.startY) {\n    y = this.startY - ty;\n  }\n  else {\n    y = this.startY + ty;\n  }\n  */\n\tx = this.startX + l * Math.cos(this.angle);\n\ty = this.startY - l * Math.sin(this.angle);\n\tif (subDir == 1) {\n\t\t//x += this.width /2;\n\t\t//y += this.width /2;\n\t}\n\treturn [x, y];\n};\n\nBranchAddon.prototype.addChild = function(p, len, dir) {\n\tvar n = new BranchAddon(this.treeAddon, this, 0);\n\tvar pt = this.line(p, n.dir);\n\tn.startX = pt[0];\n\tn.startY = pt[1];\n\tn.length = len ? len : this.length / 2;\n\tvar r = 1 - p;\n\tif (n.depth > 1) {\n\t\tr = Math.pow(r, n.depth);\n\t}\n\tn.width = Math.ceil(this.width * r);\n\n\tvar up = this.subs.length == 1 ? 1 : 0;\n\tif (this == this.treeAddon.root) {\n\t\t// vat t = this.subs[this.subs.length -1].dir;\n\t\tup = 0;\n\t}\n\tn.grow(up, this, p);\n\tn.trim();\n\tthis.subs.push(n);\n\t//console.log(\"child:\" + n);\n};\n\nBranchAddon.prototype.grow = function(up, p, r) {\n/*\n  var x = this.length * Math.sin(this.angle);\n  var y = this.length * Math.cos(this.angle);\n\n  var left = (this.dir & 0x10) == 0;\n  if (left){\n    this.endX = this.startX - x;\n  }\n  else {\n    this.endX = this.startX + x;\n  }\n  if (up == 0) {\n    this.endY = this.startY - y;\n\n    if (left){\n      this.midX = window.random(this.endX, this.endX + this.width);\n    } else {\n      this.midX = window.random(this.endX - this.width, this.endX);\n    }\n    this.midY = window.random(this.endY, this.endY + this.width);\n  } else {\n    up = 1;\n    this.endY = this.startY + y;\n    this.midX = window.random(this.endX, this.endX + this.width);\n    if (left) {\n      this.midX = window.random(this.endX, this.endX + this.width);\n    } else {\n      this.midX = window.random(this.endX - this.width, this.endX);\n    }\n    this.midY = window.random(this.endY - this.width, this.endY);\n  }*/\n\tx = this.length * Math.cos(this.angle);\n\ty = this.length * Math.sin(this.angle);\n\tthis.endX = this.startX + x;\n\tthis.endY = this.startY - y;\n\tthis.midY = window.random(this.endY, this.endY + this.width);\n\tif (this.startX < this.endX) {\n\t\tthis.midX = window.random(this.endX - this.width, this.endX);\n\t} else {\n\t\tthis.midX = window.random(this.startX, this.startX + this.width);\n\t}\n\tvar minx = Math.min(this.startX, this.endX);\n\tthis.midX = window.random(minx, minx + this.width);\n\tif (this.dir == 1) {\n\t\tthis.midX = window.random(this.endX - this.width, this.endX);\n\t}\n\n\t//this.dir = (this.dir & 0x10) + up;\n};\n\nBranchAddon.prototype.toArray = function() {\n\tif (this.subs.length > 0) {\n\n\t}\n\tvar l = this.depth == 0 ? 100 : this.length;\n\tvar cs = [];\n\tfor (var i = 0; i < this.subs.length; i++) {\n\t\tcs.push(this.subs[i].toArray());\n\t}\n\tvar a = [this.startX, this.startY, this.midX, this.midY, this.endX, this.endY, this.width, l, cs];\n\treturn a;\n};\n\nBranchAddon.prototype.getBounds = function() {\n\tvar x = this.startX;\n\tvar y = this.startY;\n\tvar x2 = this.endX;\n\tvar y2 = this.endY;\n\tfor (var i = 0; i < this.subs.length; i++) {\n\t\tvar c = this.subs[i];\n\t\tvar p = c.getBounds();\n\t\tx = Math.min(x, p[0]);\n\t\ty = Math.min(y, p[1]);\n\t\tx2 = Math.max(x2, p[2]);\n\t\ty2 = Math.max(y2, p[3]);\n\t}\n\treturn [x, y, x2, y2];\n};\n\nTreeAddon.prototype.getBounds = function() {\n\treturn this.root.getBounds();\n};\n\nvar DayAddon = function(lunar, boy, girl, date, option) {\n\t\t// 设置恋爱开始的时间,可以精确到秒\n\t\tvar love_date = new Date();\n\t\tlove_date.setFullYear(date.y ? date.y : 2010, date.M ? date.M - 1 : 0, date.d ? date.d : 1); //时间年月日\n\t\tlove_date.setHours(date.h ? date.h : 0); //小时\n\t\tlove_date.setMinutes(date.m ? date.m : 0); //分钟\n\t\tlove_date.setSeconds(date.s ? date.s : 0); //秒前一位\n\t\tlove_date.setMilliseconds(0); //秒第二位\n\n\t\tthis.start = love_date;\n\t\tthis.author = boy || '我';\n\t\tthis.lover = girl || '你';\n\t\tthis.festival = '天天';\n\t\tthis.today = new Date();\n\t\t//this.today.setFullYear(2017, 02, 23);\n\n\t\tthis.lunar = lunar.solar2lunar(this.today.getFullYear(), this.today.getMonth() + 1, this.today.getDate());\n\t\tthis.option = option || {};\n\t\tthis.sepcials = [];\n\n\t\tthis.years = this.today.getFullYear() - love_date.getFullYear();\n\t\tvar seconds = (Date.parse(this.today) - Date.parse(this.start)) / 1000;\n\t\tvar days = Math.floor(seconds / (3600 * 24));\n\t\tseconds = seconds % (3600 * 24);\n\t\tvar hours = Math.floor(seconds / 3600);\n\t\tif (hours < 10) {\n\t\t\thours = \"\" + hours;\n\t\t}\n\t\tseconds = seconds % 3600;\n\t\tvar minutes = Math.floor(seconds / 60);\n\t\tif (minutes < 10) {\n\t\t\tminutes = \"\" + minutes;\n\t\t}\n\t\tseconds = seconds % 60;\n\t\tif (seconds < 10) {\n\t\t\tseconds = \"\" + seconds;\n\t\t}\n\t\tvar result = \"第 <span class=\\\"digit\\\">\" + days + \"</span> 天 <span class=\\\"digit\\\">\" + hours + \"</span> 小时 <span class=\\\"digit\\\">\" + minutes + \"</span> 分钟 <span class=\\\"digit\\\">\" + seconds + \"</span> 秒\";\n\t\tthis.days = days;\n\t}\n\nDayAddon.prototype.getDays = function() {\n\treturn this.days;\n};\n\nDayAddon.prototype.lunarSpicial = function(y, m, d) {\n\tvar ret = (m == this.lunar.lMonth && d == this.lunar.lDay);\n\tif (y > 0) {\n\t\tret = ret && (y == this.lunar.lYear);\n\t}\n\treturn ret;\n};\n\nDayAddon.prototype.solarSpicial = function(y, m, d) {\n\tvar ret = (m == this.today.getMonth() + 1 && d == this.today.getDate());\n\tif (y > 0) {\n\t\tret = ret && (y == this.today.getFullYear());\n\t}\n\treturn ret;\n};\n\nDayAddon.prototype.addSpecial = function(word, y, m, d, lunar) {\n\tvar f = !! lunar;\n\tthis.sepcials.push({\n\t\tl: word,\n\t\ty: y,\n\t\tm: m,\n\t\td: d,\n\t\tf: f\n\t});\n};\n\nDayAddon.prototype.isSpecial = function(day) {\n\tif (day.f) {\n\t\treturn this.lunarSpicial(day.y, day.m, day.d);\n\t}\n\treturn this.solarSpicial(day.y, day.m, day.d);\n};\n\nDayAddon.prototype.display = function() {\n\tfor (var i = 0; i < this.sepcials.length; i++) {\n\t\tvar d = this.sepcials[i];\n\t\tif (this.isSpecial(d)) {\n\t\t\tthis.special = d;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t$('.lover').text(this.lover);\n\t$('.author').text(this.author);\n\t$('.years').text(this.years);\n\tif (this.special) {\n\t\tthis.festival = this.special.l;\n\t}\n\t$('.festival').text(this.festival);\n\n\tvar title = '祝' + this.lover + this.festival + '快乐！';\n\tdocument.title = title;\n\n\tif ( !! this.option.marqueeTitle) {\n\t\tvar marqueeCount = 0;\n\n\t\tfunction marqueeTitle() {\n\t\t\tvar end = marqueeCount % title.length;\n\t\t\tdocument.title = title.substr(0, end) || title;\n\t\t\tmarqueeCount++;\n\t\t\tsetTimeout('marqueeTitle()', 150);\n\t\t}\n\t\tmarqueeTitle();\n\t}\n};\n"},{"url":"/other/love.js","content":"(function(window) {\n\n\tfunction random(min, max) {\n\t\treturn min + Math.floor(Math.random() * (max - min + 1));\n\t}\n\n\tfunction bezier(cp, t) {\n\t\tvar p1 = cp[0].mul((1 - t) * (1 - t));\n\t\tvar p2 = cp[1].mul(2 * t * (1 - t));\n\t\tvar p3 = cp[2].mul(t * t);\n\t\treturn p1.add(p2).add(p3);\n\t}\n\n\tfunction inheart(x, y, r) {\n\t\t// x^2+(y-(x^2)^(1/3))^2 = 1\n\t\t// http://www.wolframalpha.com/input/?i=x%5E2%2B%28y-%28x%5E2%29%5E%281%2F3%29%29%5E2+%3D+1\n\t\tvar z = ((x / r) * (x / r) + (y / r) * (y / r) - 1) * ((x / r) * (x / r) + (y / r) * (y / r) - 1) * ((x / r) * (x / r) + (y / r) * (y / r) - 1) - (x / r) * (x / r) * (y / r) * (y / r) * (y / r);\n\t\treturn z < 0;\n\t}\n\n\tPoint = function(x, y) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t}\n\tPoint.prototype = {\n\t\tclone: function() {\n\t\t\treturn new Point(this.x, this.y);\n\t\t},\n\t\tadd: function(o) {\n\t\t\tp = this.clone();\n\t\t\tp.x += o.x;\n\t\t\tp.y += o.y;\n\t\t\treturn p;\n\t\t},\n\t\tsub: function(o) {\n\t\t\tp = this.clone();\n\t\t\tp.x -= o.x;\n\t\t\tp.y -= o.y;\n\t\t\treturn p;\n\t\t},\n\t\tdiv: function(n) {\n\t\t\tp = this.clone();\n\t\t\tp.x /= n;\n\t\t\tp.y /= n;\n\t\t\treturn p;\n\t\t},\n\t\tmul: function(n) {\n\t\t\tp = this.clone();\n\t\t\tp.x *= n;\n\t\t\tp.y *= n;\n\t\t\treturn p;\n\t\t},\n\t\ttoString: function() {\n\t\t\treturn 'Point(' + this.x + ',' + this.y + ')';\n\t\t}\n\t}\n\n\tHeart = function() {\n\t\t// x = 16 sin^3 t\n\t\t// y = 13 cos t - 5 cos 2t - 2 cos 3t - cos 4t\n\t\t// http://www.wolframalpha.com/input/?i=x+%3D+16+sin%5E3+t%2C+y+%3D+(13+cos+t+-+5+cos+2t+-+2+cos+3t+-+cos+4t)\n\t\tvar points = [],\n\t\t\tx, y, t;\n\t\tfor (var i = 10; i < 30; i += 0.2) {\n\t\t\tt = i / Math.PI;\n\t\t\tx = 16 * Math.pow(Math.sin(t), 3);\n\t\t\ty = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);\n\t\t\tpoints.push(new Point(x, y));\n\t\t}\n\t\tthis.points = points;\n\t\tthis.length = points.length;\n\t}\n\tHeart.prototype = {\n\t\tget: function(i, scale) {\n\t\t\treturn this.points[i].mul(scale || 1);\n\t\t}\n\t}\n\n\tSeed = function(tree, point, scale, color) {\n\t\tthis.tree = tree;\n\n\t\tvar scale = scale || 1\n\t\tvar color = color || '#FF0000';\n\n\t\tthis.heart = {\n\t\t\tpoint: point,\n\t\t\tscale: scale,\n\t\t\tcolor: color,\n\t\t\tfigure: new Heart(),\n\t\t}\n\n\t\tthis.cirle = {\n\t\t\tpoint: point,\n\t\t\tscale: scale,\n\t\t\tcolor: color,\n\t\t\tradius: 5,\n\t\t}\n\t}\n\tSeed.prototype = {\n\t\tdraw: function() {\n\t\t\tthis.drawHeart();\n\t\t\tthis.drawText();\n\t\t},\n\t\taddPosition: function(x, y) {\n\t\t\tthis.cirle.point = this.cirle.point.add(new Point(x, y));\n\t\t},\n\t\tcanMove: function() {\n\t\t\treturn this.cirle.point.y < (this.tree.height + 20);\n\t\t},\n\t\tmove: function(x, y) {\n\t\t\tthis.clear();\n\t\t\tthis.drawCirle();\n\t\t\tthis.addPosition(x, y);\n\t\t},\n\t\tcanScale: function() {\n\t\t\treturn this.heart.scale > 0.2;\n\t\t},\n\t\tsetHeartScale: function(scale) {\n\t\t\tthis.heart.scale *= scale;\n\t\t},\n\t\tscale: function(scale) {\n\t\t\tthis.clear();\n\t\t\tthis.drawCirle();\n\t\t\tthis.drawHeart();\n\t\t\tthis.setHeartScale(scale);\n\t\t},\n\t\tdrawHeart: function() {\n\t\t\tvar ctx = this.tree.ctx,\n\t\t\t\theart = this.heart;\n\t\t\tvar point = heart.point,\n\t\t\t\tcolor = heart.color,\n\t\t\t\tscale = heart.scale;\n\t\t\tctx.save();\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.translate(point.x, point.y);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(0, 0);\n\t\t\tfor (var i = 0; i < heart.figure.length; i++) {\n\t\t\t\tvar p = heart.figure.get(i, scale);\n\t\t\t\tctx.lineTo(p.x, -p.y);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tctx.restore();\n\t\t},\n\t\tdrawCirle: function() {\n\t\t\tvar ctx = this.tree.ctx,\n\t\t\t\tcirle = this.cirle;\n\t\t\tvar point = cirle.point,\n\t\t\t\tcolor = cirle.color,\n\t\t\t\tscale = cirle.scale,\n\t\t\t\tradius = cirle.radius;\n\t\t\tctx.save();\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.translate(point.x, point.y);\n\t\t\tctx.scale(scale, scale);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.arc(0, 0, radius, 0, 2 * Math.PI);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tctx.restore();\n\t\t},\n\t\tdrawText: function() {\n\t\t\tvar ctx = this.tree.ctx,\n\t\t\t\theart = this.heart;\n\t\t\tvar point = heart.point,\n\t\t\t\tcolor = heart.color,\n\t\t\t\tscale = heart.scale;\n\t\t\tctx.save();\n\t\t\tctx.strokeStyle = color;\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.translate(point.x, point.y);\n\t\t\tctx.scale(scale, scale);\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(15, 15);\n\t\t\tctx.lineTo(60, 15);\n\t\t\tctx.stroke();\n\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.scale(0.75, 0.75);\n\t\t\tctx.font = \"12px 微软雅黑,Verdana\"; // 字号肿么没有用? (ˉ(∞)ˉ)\n\t\t\tctx.fillText(\"click here\", 23, 16);\n\t\t\tctx.restore();\n\t\t},\n\t\tclear: function() {\n\t\t\tvar ctx = this.tree.ctx,\n\t\t\t\tcirle = this.cirle;\n\t\t\tvar point = cirle.point,\n\t\t\t\tscale = cirle.scale,\n\t\t\t\tradius = 26;\n\t\t\tvar w = h = (radius * scale);\n\t\t\tctx.clearRect(point.x - w, point.y - h, 4 * w, 4 * h);\n\t\t},\n\t\thover: function(x, y) {\n\t\t\tvar ctx = this.tree.ctx;\n\t\t\tvar pixel = ctx.getImageData(x, y, 1, 1);\n\t\t\treturn pixel.data[3] == 255\n\t\t}\n\t}\n\n\tFooter = function(tree, width, height, speed) {\n\t\tthis.tree = tree;\n\t\tthis.point = new Point(tree.seed.heart.point.x, tree.height - height / 2);\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.speed = speed || 2;\n\t\tthis.length = 0;\n\t}\n\tFooter.prototype = {\n\t\tdraw: function() {\n\t\t\tvar ctx = this.tree.ctx,\n\t\t\t\tpoint = this.point;\n\t\t\tvar len = this.length / 2;\n\n\t\t\tctx.save();\n\t\t\tctx.strokeStyle = 'rgb(35, 31, 32)';\n\t\t\tctx.lineWidth = this.height;\n\t\t\tctx.lineCap = 'round';\n\t\t\tctx.lineJoin = 'round';\n\t\t\tctx.translate(point.x, point.y);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(len, 0);\n\t\t\tctx.lineTo(-len, 0);\n\t\t\tctx.stroke();\n\t\t\tctx.restore();\n\n\t\t\tif (this.length < this.width) {\n\t\t\t\tthis.length += this.speed;\n\t\t\t}\n\t\t}\n\t}\n\n\tTree = function(canvas, width, height, opt) {\n\t\tthis.canvas = canvas;\n\t\tthis.ctx = canvas.getContext('2d');\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.opt = opt || {};\n\n\t\tthis.record = {};\n\n\t\tthis.initSeed();\n\t\tthis.initFooter();\n\t\tthis.initBranch();\n\t\tthis.initBloom();\n\t}\n\tTree.prototype = {\n\t\tinitSeed: function() {\n\t\t\tvar seed = this.opt.seed || {};\n\t\t\tvar x = seed.x || this.width / 2;\n\t\t\tvar y = seed.y || this.height / 2;\n\t\t\tvar point = new Point(x, y);\n\t\t\tvar color = seed.color || '#FF0000';\n\t\t\tvar scale = seed.scale || 1;\n\n\t\t\tthis.seed = new Seed(this, point, scale, color);\n\t\t},\n\n\t\tinitFooter: function() {\n\t\t\tvar footer = this.opt.footer || {};\n\t\t\tvar width = footer.width || this.width;\n\t\t\tvar height = footer.height || 5;\n\t\t\tvar speed = footer.speed || 2;\n\t\t\tthis.footer = new Footer(this, width, height, speed);\n\t\t},\n\n\t\tinitBranch: function() {\n\t\t\tvar branchs = this.opt.branch || []\n\t\t\tthis.branchs = [];\n\t\t\tthis.addBranchs(branchs);\n\t\t},\n\n\t\tinitBloom: function() {\n\t\t\tvar bloom = this.opt.bloom || {};\n\t\t\tvar cache = [],\n\t\t\t\tnum = bloom.num || 500,\n\t\t\t\twidth = bloom.width || this.width,\n\t\t\t\theight = bloom.height || this.height,\n\t\t\t\tfigure = this.seed.heart.figure;\n\t\t\tvar r = bloom.radius || 240,\n\t\t\t\tx, y;\n\t\t\tfor (var i = 0; i < num; i++) {\n\t\t\t\tcache.push(this.createBloom(width, height, r, figure));\n\t\t\t}\n\t\t\tthis.blooms = [];\n\t\t\tthis.bloomsCache = cache;\n\t\t},\n\n\t\ttoDataURL: function(type) {\n\t\t\treturn this.canvas.toDataURL(type);\n\t\t},\n\n\t\tdraw: function(k) {\n\t\t\tvar s = this,\n\t\t\t\tctx = s.ctx;\n\t\t\tvar rec = s.record[k];\n\t\t\tif (!rec) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar point = rec.point,\n\t\t\t\timage = rec.image;\n\n\t\t\tctx.save();\n\t\t\tctx.putImageData(image, point.x, point.y);\n\t\t\tctx.restore();\n\t\t},\n\n\t\taddBranch: function(branch) {\n\t\t\tthis.branchs.push(branch);\n\t\t},\n\n\t\taddBranchs: function(branchs) {\n\t\t\tvar s = this,\n\t\t\t\tb, p1, p2, p3, r, l, c;\n\t\t\tfor (var i = 0; i < branchs.length; i++) {\n\t\t\t\tb = branchs[i];\n\t\t\t\tp1 = new Point(b[0], b[1]);\n\t\t\t\tp2 = new Point(b[2], b[3]);\n\t\t\t\tp3 = new Point(b[4], b[5]);\n\t\t\t\tr = b[6];\n\t\t\t\tl = b[7];\n\t\t\t\tc = b[8]\n\t\t\t\ts.addBranch(new Branch(s, p1, p2, p3, r, l, c));\n\t\t\t}\n\t\t},\n\n\t\tremoveBranch: function(branch) {\n\t\t\tvar branchs = this.branchs;\n\t\t\tfor (var i = 0; i < branchs.length; i++) {\n\t\t\t\tif (branchs[i] === branch) {\n\t\t\t\t\tbranchs.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcanGrow: function() {\n\t\t\treturn !!this.branchs.length;\n\t\t},\n\t\tgrow: function() {\n\t\t\tvar branchs = this.branchs;\n\t\t\tfor (var i = 0; i < branchs.length; i++) {\n\t\t\t\tvar branch = branchs[i];\n\t\t\t\tif (branch) {\n\t\t\t\t\tbranch.grow();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\taddBloom: function(bloom) {\n\t\t\tthis.blooms.push(bloom);\n\t\t},\n\n\t\tremoveBloom: function(bloom) {\n\t\t\tvar blooms = this.blooms;\n\t\t\tfor (var i = 0; i < blooms.length; i++) {\n\t\t\t\tif (blooms[i] === bloom) {\n\t\t\t\t\tblooms.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcreateBloom: function(width, height, radius, figure, color, alpha, angle, scale, place, speed) {\n\t\t\tvar x, y;\n\t\t\twhile (true) {\n\t\t\t\tx = random(20, width - 20);\n\t\t\t\ty = random(20, height - 20);\n\t\t\t\tif (inheart(x - width / 2, height - (height - 40) / 2 - y, radius)) {\n\t\t\t\t\treturn new Bloom(this, new Point(x, y), figure, color, alpha, angle, scale, place, speed);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcanFlower: function() {\n\t\t\treturn !!this.blooms.length;\n\t\t},\n\t\tflower: function(num) {\n\t\t\tvar s = this,\n\t\t\t\tblooms = s.bloomsCache.splice(0, num);\n\t\t\tfor (var i = 0; i < blooms.length; i++) {\n\t\t\t\ts.addBloom(blooms[i]);\n\t\t\t}\n\t\t\tblooms = s.blooms;\n\t\t\tfor (var j = 0; j < blooms.length; j++) {\n\t\t\t\tblooms[j].flower();\n\t\t\t}\n\t\t},\n\n\t\tsnapshot: function(k, x, y, width, height) {\n\t\t\tvar ctx = this.ctx;\n\t\t\tvar image = ctx.getImageData(x, y, width, height);\n\t\t\tthis.record[k] = {\n\t\t\t\timage: image,\n\t\t\t\tpoint: new Point(x, y),\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t}\n\t\t},\n\t\tsetSpeed: function(k, speed) {\n\t\t\tthis.record[k || \"move\"].speed = speed;\n\t\t},\n\t\tmove: function(k, x, y) {\n\t\t\tvar s = this,\n\t\t\t\tctx = s.ctx;\n\t\t\tvar rec = s.record[k || \"move\"];\n\t\t\tvar point = rec.point,\n\t\t\t\timage = rec.image,\n\t\t\t\tspeed = rec.speed || 10,\n\t\t\t\twidth = rec.width,\n\t\t\t\theight = rec.height;\n\n\t\t\ti = point.x + speed < x ? point.x + speed : x;\n\t\t\tj = point.y + speed < y ? point.y + speed : y;\n\n\t\t\tctx.save();\n\t\t\tctx.clearRect(point.x, point.y, width, height);\n\t\t\tctx.putImageData(image, i, j);\n\t\t\tctx.restore();\n\n\t\t\trec.point = new Point(i, j);\n\t\t\trec.speed = speed * 0.95;\n\n\t\t\tif (rec.speed < 2) {\n\t\t\t\trec.speed = 2;\n\t\t\t}\n\t\t\treturn i < x || j < y;\n\t\t},\n\n\t\tjump: function() {\n\t\t\tvar s = this,\n\t\t\t\tblooms = s.blooms;\n\t\t\tif (blooms.length) {\n\t\t\t\tfor (var i = 0; i < blooms.length; i++) {\n\t\t\t\t\tblooms[i].jump();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((blooms.length && blooms.length < 3) || !blooms.length) {\n\t\t\t\tvar bloom = this.opt.bloom || {},\n\t\t\t\t\twidth = bloom.width || this.width,\n\t\t\t\t\theight = bloom.height || this.height,\n\t\t\t\t\tfigure = this.seed.heart.figure;\n\t\t\t\tvar r = 240,\n\t\t\t\t\tx, y;\n\t\t\t\tfor (var i = 0; i < random(1, 2); i++) {\n\t\t\t\t\tblooms.push(this.createBloom(width / 2 + width, height, r, figure, null, 1, null, 1, new Point(random(-100, this.width - 40), this.height + 40), random(200, 300)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tBranch = function(tree, point1, point2, point3, radius, length, branchs) {\n\t\tthis.tree = tree;\n\t\tthis.point1 = point1;\n\t\tthis.point2 = point2;\n\t\tthis.point3 = point3;\n\t\tthis.radius = radius;\n\t\tthis.length = length || 100;\n\t\tthis.len = 0;\n\t\tthis.t = 1 / (this.length - 1);\n\t\tthis.branchs = branchs || [];\n\t}\n\n\tBranch.prototype = {\n\t\tgrow: function() {\n\t\t\tvar s = this, p;\n\t\t\tif (s.len <= s.length) {\n\t\t\t\tp = bezier([s.point1, s.point2, s.point3], s.len * s.t);\n\t\t\t\tthis.draw(p);\n\t\t\t\ts.len += 1;\n\t\t\t\ts.radius *= 0.97;\n\t\t\t} else {\n\t\t\t\ts.tree.removeBranch(s);\n\t\t\t\ts.tree.addBranchs(s.branchs);\n\t\t\t}\n\t\t},\n\t\tdraw: function(p) {\n\t\t\tvar s = this;\n\t\t\tvar ctx = s.tree.ctx;\n\t\t\tctx.save();\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = 'rgb(35, 31, 32)';\n\t\t\tctx.shadowColor = 'rgb(35, 31, 32)';\n\t\t\tctx.shadowBlur = 2;\n\t\t\tctx.moveTo(p.x, p.y);\n\t\t\tctx.arc(p.x, p.y, s.radius, 0, 2 * Math.PI);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tctx.restore();\n\t\t}\n\t};\n\n\tBloom = function(tree, point, figure, color, alpha, angle, scale, place, speed) {\n\t\tthis.tree = tree;\n\t\tthis.point = point;\n\t\tthis.color = color || 'rgb(255,' + random(0, 255) + ',' + random(0, 255) + ')';\n\t\tthis.alpha = alpha || random(0.3, 1);\n\t\tthis.angle = angle || random(0, 360);\n\t\tthis.scale = scale || 0.1;\n\t\tthis.place = place;\n\t\tthis.speed = speed;\n\n\t\tthis.figure = figure;\n\t}\n\tBloom.prototype = {\n\t\tsetFigure: function(figure) {\n\t\t\tthis.figure = figure;\n\t\t},\n\t\tflower: function() {\n\t\t\tvar s = this;\n\t\t\ts.draw();\n\t\t\ts.scale += 0.1;\n\t\t\tif (s.scale > 1) {\n\t\t\t\ts.tree.removeBloom(s);\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar s = this,\n\t\t\t\tctx = s.tree.ctx,\n\t\t\t\tfigure = s.figure;\n\n\t\t\tctx.save();\n\t\t\tctx.fillStyle = s.color;\n\t\t\tctx.globalAlpha = s.alpha;\n\t\t\tctx.translate(s.point.x, s.point.y);\n\t\t\tctx.scale(s.scale, s.scale);\n\t\t\tctx.rotate(s.angle);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(0, 0);\n\t\t\tfor (var i = 0; i < figure.length; i++) {\n\t\t\t\tvar p = figure.get(i);\n\t\t\t\tctx.lineTo(p.x, -p.y);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tctx.restore();\n\t\t},\n\t\tjump: function() {\n\t\t\tvar s = this,\n\t\t\t\theight = s.tree.height;\n\n\t\t\tif (s.point.x < -20 || s.point.y > height + 20) {\n\t\t\t\ts.tree.removeBloom(s);\n\t\t\t} else {\n\t\t\t\ts.draw();\n\t\t\t\ts.point = s.place.sub(s.point).div(s.speed).add(s.point);\n\t\t\t\ts.angle += 0.05;\n\t\t\t\ts.speed -= 1;\n\t\t\t}\n\t\t}\n\t};\n\n\twindow.random = random;\n\twindow.bezier = bezier;\n\twindow.Point = Point;\n\twindow.Tree = Tree;\n\n})(window);\n"},{"url":"/other/jasmin.html","content":"\n<!DOCTYPE html>\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<title>爱你一萬年</title>\n<!-- <link type=\"text/css\" rel=\"stylesheet\"\n  href=\"http://zwsssn.u.qiniudn.com/love/default.css\"> -->\n  <link rel=\"stylesheet\" href=\"http://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n  <link rel=\"stylesheet\" href=\"http://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap-theme.min.css\">\n<script src=\"http://cdn.bootcss.com/jquery/2.2.0/jquery.min.js\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/jscex/jscex.min.js\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/jscex/jscex-parser.js\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/jscex/jscex-jit.js\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/jscex/jscex-builderbase.min.js\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/jscex/jscex-async.min.js\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/jscex/jscex-async-powerpack.min.js\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/lovetree/functions.js\" charset=\"utf-8\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/lovetree/love.js\" charset=\"utf-8\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/lovetree/calendar.js\"></script>\n<script type=\"text/javascript\"\n  src=\"//dingdi.ieclipse.cn/lovetree/addon.js\" charset=\"utf-8\"></script>\n<style type=\"text/css\">\nbody {\n  font-size: 16px;\n}\n#wrap{position:relative;margin:0 auto;margin-top:10px;}\n#code{display:none;font-size:1em;}\n#clock-box {font-size:1em;display:none; margin-bottom: 1em; border-bottom: 4px solid #000}\n#clock-box a {font-size:28px;text-decoration:none;}\n#clock .digit {font-size:1.5em;}\n#error{margin:0 auto;text-align:center;margin-top:60px;display:none;}\n.hand{cursor:pointer;}\n.say{margin-left:5px;}\n.space{margin-right:150px;}\n.say {\n  min-height: 16px;\n}\n.lover, .author, .festival, .years {\n  color: red;\n  font-weight: bold;\n}\n.years {\n  font-size: 1.5em;\n}\n/*\n#canvas {\n  width: 1100px;\n  height: 680px;\n}\n@media (max-width: 767px) {\n  #canvas {\n    width: 360px;\n    height: 240px;\n  }\n}*/\n@media (min-width: 768px) {\n  .container {\n    padding: 0.1em;\n  }\n  #text {\n    position: absolute;\n    top: 20px;\n    z-index: 999;\n  }\n  #clock-box {\n    position:absolute;\n    z-index: 1000;\n    font-size:2em;\n    left:0px;\n    bottom:10px;\n    border-bottom: none;\n  }\n  #clock{margin-left:48px;}\n}\n#love {\n\n}\n</style>\n</head>\n<body>\n\n  <div class=\"formusic\" style=\"z-index: -99999 !important; height: 0;\">\n    <audio\n      id=\"bg\"\n      style=\"visibility: hidden; width: 0 !important; height: 0 !important;\"\n      autoplay=\"true\" controls=\"false\">\n      <source id=\"bgmp3\" src=\"//dingdi.ieclipse.cn/lovetree/Valentine_s_Day.mp3\" type=\"audio/mpeg\">\n    </audio>\n    <!-- <embed name=\"MUSIC1\" src=\"http://www.1t2t.com/1t/mid/76.mid\" mastersound=\"\" hidden=\"true\" loop=\"-1\" autostart=\"true\">\n    </embed> -->\n  </div>\n  <div id=\"main\" class=\"container\">\n    <div id=\"error\">\n      本页面采用HTML5编辑，目前您的浏览器无法显示，请换成谷歌(<a\n        href=\"http://www.google.cn/chrome/intl/zh-CN/landing_chrome.html?hl=zh-CN&brand=CHMI\"\n        target=\"_blank\" rel=\"external\">Chrome</a>)或者火狐(<a\n        href=\"http://firefox.com.cn/download/\" target=\"_blank\"\n        rel=\"external\">Firefox</a>)浏览器，或者其他游览器的最新版本。\n    </div>\n    <div id=\"wrap\" class=\"row\">\n      <div id=\"love\" class=\"col-xs-12 col-md-12\">\n        <canvas id=\"canvas\"></canvas>\n      </div>\n\n      <div id=\"clock-box\" class=\"col-xs-12\">\n        <span class=\"author\">明月</span>与<span class=\"lover\">欣有所属</span>已经相恋了\n        <div id=\"clock\"></div>\n      </div>\n\n      <div id=\"text\" class=\"col-xs-12 col-md-6\">\n        <div id=\"code\">\n          <div class=\"say\">献给我挚爱的：<span class=\"lover\">小欣</span></div>\n          <!-- <div class=\"say\"> </div> -->\n          <div class=\"say\"> </div> <div class=\"say\">从我们相识相爱到现在</div>\n          <div class=\"say\"> </div> <div class=\"say\">已经有<span class=\"years\">3</span>年多的时间了</div>\n          <div class=\"say\"> </div> <div class=\"say\">我不曾送你一束鲜花</div>\n          <div class=\"say\"> </div> <div class=\"say\">不代表我不爱你</div>\n          <div class=\"say\"> </div> <div class=\"say\">我将用程序员特有的方式</div>\n          <div class=\"say\"> </div> <div class=\"say\">献上我的祝福</div>\n          <div class=\"say\"> </div> <div class=\"say\"><span class=\"festival\">XX节</span>快乐！</div>\n          <div class=\"say\"> </div> <div class=\"say\">\n          <span class=\"space\"></span> -- <span class=\"author\">明月</span>--</div>\n        </div>\n      </div>\n      <div id=\"screen-detect\" class=\"hidden-xs\">\n      </div>\n    </div>\n  </div>\n\n  <script type=\"text/javascript\">\n      (function() {\n        var divLove = $('#love');\n        var divText = $('#text');\n        var canvas = $('#canvas');\n\n        if (!canvas[0].getContext) {\n          $(\"#error\").show();\n          return false;\n        }\n\n        var smallScreen = $('#screen-detect').css('display') === 'none';\n\n        var width = divLove.width();\n        var height = Math.max(width, canvas.height());\n        if (smallScreen) {\n          height = 400;\n        } else {\n          height = 600;\n        }\n\n        var dayAddon = new DayAddon(calendar, 'Jamling', 'Jasmin', {\n          y: 2013, // 2013年\n          M: 3, // 3 月\n          d: 23,\n          h: 8,\n          m: 10,\n          s: 0\n        });\n        // 每年的7月13日\n        dayAddon.addSpecial('生日', 0, 07, 13);\n        dayAddon.addSpecial('恋爱五周年纪念日', 2018, 03, 23);\n        dayAddon.addSpecial('恋爱周年纪念日', 0, 03, 23);\n        // 每年的阴历七月初七\n        dayAddon.addSpecial('新年', 0, 1, 1, true);\n        dayAddon.addSpecial('乞巧节', 0, 7, 7, true);\n        dayAddon.addSpecial('元宵节', 0, 1, 15, true);\n        dayAddon.addSpecial('端午节', 0, 5, 5, true);\n        dayAddon.addSpecial('中秋节', 0, 8, 15, true);\n        dayAddon.addSpecial('重阳节', 0, 9, 9, true);\n        dayAddon.addSpecial('腊八节', 0, 12, 8, true);\n\n        // 阳历节日\n        dayAddon.addSpecial('元旦', 0, 1, 1);\n        dayAddon.addSpecial('情人节', 0, 2, 14);\n        dayAddon.addSpecial('女神节', 0, 3, 7);\n        dayAddon.addSpecial('女王节', 0, 3, 8);\n        dayAddon.addSpecial('愚人节', 0, 4, 1);\n        dayAddon.addSpecial('劳动节', 0, 5, 1);\n        dayAddon.addSpecial('青年节', 0, 5, 4);\n        dayAddon.addSpecial('国庆节', 0, 10, 1);\n        dayAddon.addSpecial('万圣节', 0, 11, 23);\n        dayAddon.addSpecial('平安夜', 0, 12, 24);\n        dayAddon.addSpecial('圣诞节', 0, 12, 25);\n\n        dayAddon.display();\n        // 本人七牛上的歌曲有:天空之城等\n        if (dayAddon.festival === '生日') {\n          $('#bg').attr(\"src\", \"//dingdi.ieclipse.cn/lovetree/Happy_Birthday.mp3\");\n          $('#bg')[0].play();\n        }\n\n        var treeAddon = new TreeAddon(width, height, {\n            maxCount: Math.floor(dayAddon.days / 100),\n            maxLength: smallScreen ? 80 : 100,\n            maxWidth: smallScreen ? 16 : 32,/*\n            bloomWidth: smallScreen ? width - 40 : width,\n            bloomHeight: smallScreen ? height - 40: height - 40,*/\n            bloomRadius: Math.ceil(height/3)\n          }\n        );\n        canvas.attr(\"width\", width);\n        canvas.attr(\"height\", height);\n        //if (true) return;\n\n        var opts = {\n          seed : {\n            x : width / 2 - 20,\n            color : \"rgb(190, 26, 37)\",\n            scale : 2\n          },\n          branch : [ [\n              535,\n              680,\n              570,\n              250,\n              500,\n              200,\n              30,\n              100,\n              [\n                  [ 540, 500, 455, 417, 340, 400, 13, 100, [ [ 450, 435, 434, 430, 394, 395, 2, 40 ] ] ],\n                  [ 550, 445, 600, 356, 680, 345, 12, 100, [ [ 578, 400, 648, 409, 661, 426, 3, 80 ] ] ],\n                  [ 539, 281, 537, 248, 534, 217, 3, 40 ],\n                  [ 546, 397, 413, 247, 328, 244, 9, 80,\n                      [ [ 427, 286, 383, 253, 371, 205, 2, 40 ], [ 498, 345, 435, 315, 395, 330, 4, 60 ] ] ],\n                  [ 546, 357, 608, 252, 678, 221, 6, 100, [ [ 590, 293, 646, 277, 648, 271, 2, 80 ] ] ] ] ] ],\n          bloom : {\n            num : Math.floor(dayAddon.days / 10),\n            width : treeAddon.bloomWidth,\n            height : treeAddon.bloomHeight,\n            radius : treeAddon.bloomRadius\n          },\n          footer : {\n            width : width,\n            height : 5,\n            speed : 10,\n          }\n        }\n\n\n        opts.branch = treeAddon.getBranches();\n\n        var tree = new Tree(canvas[0], width, height, opts);\n        var seed = tree.seed;\n        var foot = tree.footer;\n        var hold = 0;\n\n        canvas.click(function(e) {\n          var offset = canvas.offset(), x, y;\n          x = e.pageX - offset.left;\n          y = e.pageY - offset.top;\n          if (seed.hover(x, y)) {\n            hold = 0;\n            canvas.unbind(\"click\");\n            canvas.unbind(\"mousemove\");\n            canvas.removeClass('hand');\n          }\n        }).mousemove(function(e) {\n          var offset = canvas.offset(), x, y;\n          x = e.pageX - offset.left;\n          y = e.pageY - offset.top;\n          canvas.toggleClass('hand', seed.hover(x, y));\n        });\n\n        var seedAnimate = eval(Jscex.compile(\"async\", function() {\n          seed.draw();\n          while (hold) {\n            $await(Jscex.Async.sleep(10));\n          }\n          while (seed.canScale()) {\n            seed.scale(0.95);\n            $await(Jscex.Async.sleep(10));\n          }\n          while (seed.canMove()) {\n            seed.move(0, 2);\n            foot.draw();\n            $await(Jscex.Async.sleep(10));\n          }\n        }));\n\n        var growAnimate = eval(Jscex.compile(\"async\", function() {\n          do {\n            tree.grow();\n            $await(Jscex.Async.sleep(10));\n          } while (tree.canGrow());\n        }));\n\n        var flowAnimate = eval(Jscex.compile(\"async\", function() {\n          do {\n            tree.flower(2);\n            $await(Jscex.Async.sleep(10));\n          } while (tree.canFlower());\n        }));\n\n        var moveAnimate = eval(Jscex.compile(\"async\", function() {\n          var x1 = 240, y1 = 0, x2 = 500, y2 = 0;\n          var w = 610, h = 680;\n          var tb = treeAddon.getBounds();\n          w = Math.max(treeAddon.bloomRadius * 4, tb[2] - tb[0]);\n          h = canvas.height();\n          x1 = (canvas.width() - w) / 2;\n          x2 = canvas.width() - w - 20;\n          x1 = Math.max(x1, 0);\n          x2 = Math.max(x2, 0);\n\n          tree.snapshot(\"p1\", x1, y1, w, h);\n          while (tree.move(\"p1\", x2, y2)) {\n            foot.draw();\n            $await(Jscex.Async.sleep(10));\n          }\n          foot.draw();\n          tree.snapshot(\"p2\", x2, y2, w, h);\n\n          // 会有闪烁不得意这样做, (＞﹏＜)\n          canvas.parent().css(\"background\", \"url(\" + tree.toDataURL('image/png') + \") no-repeat\");\n          canvas.css(\"background\", \"#ffe\");\n          $await(Jscex.Async.sleep(300));\n          canvas.css(\"background\", \"none\");\n        }));\n\n        var jumpAnimate = eval(Jscex.compile(\"async\", function() {\n          var ctx = tree.ctx;\n          while (true) {\n            tree.ctx.clearRect(0, 0, width, height);\n            tree.jump();\n            foot.draw();\n            $await(Jscex.Async.sleep(25));\n          }\n        }));\n\n        var textAnimate = eval(Jscex.compile(\"async\", function() {\n          var together = dayAddon.start;\n\n          $(\"#code\").show().typewriter();\n          $(\"#clock-box\").fadeIn(500);\n          while (true) {\n            timeElapse(together);\n            $await(Jscex.Async.sleep(1000));\n\n            // var h = $(document).height()-$(window).height();\n            // $(document).scrollTop(h);\n          }\n        }));\n\n        var runAsync = eval(Jscex.compile(\"async\", function() {\n          $await(seedAnimate());\n          if (!inputPwd(2)) {\n            return false;\n          }\n          $await(growAnimate());\n          $await(flowAnimate());\n          $await(moveAnimate());\n\n          textAnimate().start();\n\n          $await(jumpAnimate());\n        }));\n\n        function inputPwd(count){\n          var pwd = [' ','I love you', dayAddon.lover, dayAddon.festival];\n          var tip = '送给谁的？今天是什么特殊的日子？';\n          var txt = prompt('查看本网页需要密码\\n密码提示：' + tip, '');\n          if (pwd.indexOf(txt) < 0) {\n            alert('密码错误！');\n            if (count >0) {\n              return inputPwd(count-1);\n            } else {\n              return false;\n            }\n          } else {\n            return true;\n          }\n        }\n\n        runAsync().start();\n      })();\n    </script>\n</body>\n</html>\n"},{"title":"项目","url":"/p/index.html"},{"title":"tags","url":"/tags/index.html"},{"title":"示例简历","url":"/other/resume.html","content":"\n<div class=\"container\" id=\"cv\">\n  <div class=\"row\">\n    <div class=\"side col-xs-12 col-md-4\">\n      <div class=\"me\">\n        <div class=\"portrait\" data-toggle=\"modal\" data-target=\"#input-modal\" data-type=\"bg\" data-selector=\".portrait\"></div>\n        <h1 id=\"username\">Jamling</h1>\n        <h4 id=\"persona-tag\">Java / Android / Web</h4>\n      </div>\n      <div class=\"profile info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-user\"></span> <span class=\"info-title\">基本信息</span>\n        </h2>\n        <hr>\n        <ul class=\"info-list\">\n          <li><label class=\"left-label\">姓名</label><span class=\"label-value\">李四</span></li>\n          <li><label class=\"left-label\">出生年月</label><span class=\"label-value\">保密</span></li>\n          <li><label class=\"left-label\">毕业院校</label><span class=\"label-value\">社会大学</span></li>\n          <li><label class=\"left-label\">毕业年份</label><span class=\"label-value\">保密</span></li>\n          <li><label class=\"left-label\">学历</label><span class=\"label-value\">保密</span></li>\n          <li><label class=\"left-label\">求职意向</label><span class=\"label-value\">保密</span></li>\n        </ul>\n      </div>\n      <div class=\"contact info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-earphone\"></span> <span class=\"info-title\">联系方式</span>\n        </h2>\n        <hr>\n        <ul class=\"info-list\">\n          <li><label class=\"left-label\">手机</label><span class=\"label-value\">保密</span></li>\n          <li><label class=\"left-label\">邮箱</label><span class=\"label-value link\"><a\n              href=\"mailto:\">保密</a></span></li>\n          <li><label class=\"left-label\">个人主页</label><span class=\"label-value link\"><a\n              href=\"http://www.ieclipse.cn\">http://www.ieclipse.cn</a></span></li>\n          <li><label class=\"left-label\">Github</label><span class=\"label-value link\"><a\n              href=\"https://github.com/Jamling\">Jamling</a></span></li>\n        </ul>\n      </div>\n      <div class=\"skill info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-star\"></span> <span class=\"info-title\">技能点</span>\n        </h2>\n        <hr>\n        <ul class=\"progress-list\">\n          <li><label class=\"left-label\">Java</label> <progress value=\"90\" max=\"100\"></progress></li>\n          <li><label class=\"left-label\">Android</label> <progress value=\"95\" max=\"100\"></progress></li>\n          <li><label class=\"left-label\">Web</label> <progress value=\"70\" max=\"100\"></progress></li>\n          <li><label class=\"left-label\">技术x</label> <progress value=\"80\" max=\"100\"></progress></li>\n        </ul>\n      </div>\n      <div class=\"stack info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-wrench\"></span> <span class=\"info-title\">技术栈</span>\n        </h2>\n        <hr>\n        <ul class=\"stack-list\">\n          <li><label class=\"left-label\">Java</label><span class=\"label-value\">SSH、Eclipse RCP/Plugin</span></li>\n          <li><label class=\"left-label\">Android</label><span class=\"label-value\">QuickAF、Aorm</span></li>\n          <li><label class=\"left-label\">Web</label><span class=\"label-value\">CSS、Html、JavaScript、Node.js</span></li>\n        </ul>\n      </div>\n      <!--             <div class=\"code info-unit\"> -->\n      <!--                 <h2 class=\"info-header\"><span class=\"glyphicon glyphicon-user\"></span> <span class=\"info-title\">个人微信</span></h2> -->\n      <!--                 <hr> -->\n      <!--                 <div class=\"weixin\" data-toggle=\"modal\" data-target=\"#input-modal\" data-type=\"src\" data-selector=\".weixin img\"> -->\n      <!--                     <img src=\"static/image/weixin.png\" alt=\"\"> -->\n      <!--                 </div> -->\n      <!--             </div> -->\n    </div>\n    <div class=\"main col-xs-12 col-md-8\">\n      <div class=\"btn-print-bar\">\n        <button type=\"button\" class=\"btn btn-info\" onclick=\"javascript: toggle_print()\">\n            <span class=\"glyphicon glyphicon-print\"></span> 打印准备\n        </button>\n        <button type=\"button\" class=\"btn btn-primary\" onclick=\"javascript: printdiv()\">\n            <span class=\"glyphicon glyphicon-print\"></span> 打印\n        </button>\n      </div>\n      <!--             <div class=\"education info-unit right-list\"> -->\n      <!--                 <h2 class=\"info-header\"><span class=\"glyphicon glyphicon-book\"></span> <span class=\"info-title\">教育经历</span></h2> -->\n      <!--                 <hr> -->\n      <!--                 <ul class=\"experience-list\"> -->\n      <!--                     <li> -->\n      <!--                         <h3>北京邮电大学 - 网络工程专业（本科）2012-2017</h3> -->\n      <!--                         <p> -->\n      <!--                             Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. -->\n      <!--                         </p> -->\n      <!--                     </li> -->\n      <!--                 </ul> -->\n      <!--             </div> -->\n      <div class=\"work info-unit right-list\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-briefcase\"></span> <span class=\"info-title\">工作经历</span>\n        </h2>\n        <hr>\n        <ul class=\"experience-list\">\n          <li>\n            <h3>XX科技有限公司（2015.06－）</h3>\n            <p>带领Android团队完成公司旗下Android客户端产品研发，包括XX产品、YY产品、ZZ产品等。</p>\n          </li>\n          <li>\n            <h3>XX科技有限公司（2014.5－2015.4）</h3>\n            <p>负责XX项目开发及管理。</p>\n          </li>\n          <li>\n            <h3>XX信息研发有限公司（2011.6－2014.4）</h3>\n            <p>参与XX项目，做了XX事。</p>\n          </li>\n          <li>\n            <h3>XX软件技术有限公司（2008.8－2011.5）</h3>\n            <ul>\n              <li>第一年怎么样</li>\n              <li>第二年又如何</li>\n              <li>第三年做什么</li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n      <div class=\"project info-unit right-list\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-tasks\"></span> <span class=\"info-title\">项目经验</span>\n        </h2>\n        <hr>\n        <ul class=\"experience-list\">\n          <li>\n            <h3>项目一（14.05-15.4）</h3>\n            <p>项目的介绍，个人在其中担任什么角色，做了什么事</p>\n          </li>\n          <li>\n            <h3>项目二（14.05-15.4）</h3>\n            <p>项目的介绍，个人在其中担任什么角色，做了什么事</p>\n          </li>\n          <li>\n            <h3>项目三（14.05-15.4）</h3>\n            <p>项目的介绍，个人在其中担任什么角色，做了什么事</p>\n          </li>\n        </ul>\n      </div>\n      <!--\n      <div class=\"trophy info-unit\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-gift\"></span> <span class=\"info-title\">奖项与证书</span>\n        </h2>\n        <hr>\n        <ul class=\"experience-list\">\n          <li>\n            <h3>小学生作文二等奖</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n              et dolore magna aliqua. Ut enim ad minim veniam。</p>\n          </li>\n          <li>\n            <h3>曾获统一冰红茶“再来一瓶”奖</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n              et dolore magna aliqua. Ut enim ad minim veniam。</p>\n          </li>\n          <li>\n            <h3>这一行也是为了凑版面</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n              et dolore magna aliqua. Ut enim ad minim veniam。</p>\n          </li>\n        </ul>\n      </div>\n       -->\n      <div class=\"aboutme info-unit right-paragraph\">\n        <h2 class=\"info-header\">\n          <span class=\"glyphicon glyphicon-bookmark\"></span> <span class=\"info-title\">自我评价</span>\n        </h2>\n        <hr>\n        简单介绍一下<br />\n        本简历模板是在<a href=\"https://www.shiyanlou.com/courses/624\">在Github Pages上部署自己的简历</a>的基础上修改而成\n\n      </div>\n    </div>\n  </div>\n</div>\n"},{"title":"Something Special","url":"/en/demo/index.html","content":"\nSome special feautre of Nova theme.\n\n### Resume\nAdd `type: resume` in `front-matter` to display resume layout, [Here is a sample](resume.html)\n\n### Encrypt conent\n`password: xxx` in `front-matter` to encrypt content (xxx is the access password). And the visitor must input the right password to view the page content.\n[Click here](password.html) to see sample (password is: 123)\n\n### Love tree\nYou can express your love to your babe, [Sample](./love.html)，[Fullscreen Sample](./love2.html) (Password is: I love you)\n### Mind map\nSee [Categories](../categories/index.html)\n\n### Project documents\nRepository content from github, see [Projects](../p/)\n"},{"title":"About","url":"/en/about/index.html","content":"\n# About author\n\nJamling，male，a Java/Android software research & develop engineer, welcome to contact me by:\n * Email: <a href=\"mailto:li.jaming@gmail.com\" title=\"li.jaming@gmail.com\">li.jaming@gmail.com</a>\n * Github: https://github.com/Jamling\n\n# About site\nThis is a static blog site powered by Hexo, main struction is blog + project.\n\n# Abount donate\n * Blog donate：if you feel the article good, you can give me a reward.\n * Project donate：Looking forward to your star or fork on github, a reward is also welcome~\n \nAll donate/reward records will be updated in 2 days.\n\n"},{"title":"Projects","url":"/en/p/index.html"},{"title":"Change logs","url":"/p/Android-ORM/change.html","content":"\n\n"},{"title":"Downloads","url":"/p/Android-ORM/download.html","content":"\n"},{"title":"Android-ORM","url":"/p/Android-ORM/index.html","content":"\n"},{"title":"User guide","url":"/p/Android-ORM/userguide.html","content":"\n## 引入\n- Android studio\n在项目build.gradle中添加以下依赖\n```gradle\ndependencies {\n    compile 'cn.ieclipse.aorm:aorm-core:1.1.2'\n}\n```\n- Eclipse\n安装 [Android ADT-extension](https://marketplace.eclipse.org/content/android-adt-extensions) 插件，然后Add ORM capapility\n\n## 设置\n\n设置Aorm的一些全局设置\n```java\nAorm.enableDebug(true);// 启用/禁用debug，在debug模式下会打印SQL等日志\nAorm.allowExtend(false);// 允许/禁止模型继承，如果开启继承，ROM映射模型将会从父类中查找映射字段\nAorm.setExactInsertOrUpdate(true);//设置是否精确的插入或更新操作。如果设置为true, 在执行写操作之前先查询数据库，如果查询出来的对象不存在，则插入新数据；如果存在，则更新数据库。如果设置为false，那么则根据主键是否为0来决定插入或更新操作（如果主键大于0，则执行更新操作，有可能会导致更新失败）。\n```\n\n## 创建映射模型\n\n### 设置映射表\n只需简单地对class添加@Table注解，即可设置对数据库表的映射\n\n```java\n@Table(name = \"student\")\npublic class Student implements java.ioSerializable{\n    //...\n}\n```\n\n### 设置映射字段\n对Java bean的属性添加@Column注解\n\n- pk (标识为主键)\nid is true\n```java\n    @Column(name = \"_id\", id = true)\n    private long id;\n```\n- 普通字段\n```java\n    @Column(name = \"_name\")\n    private String name;\n    @Column(name = \"_age\")\n    private int age;\n```\n- 非映射字段\n如果不想映射数据库字段，则无需设置@Column注解\n```\n    private String address;\n```\n\n映射的属性必须设置标准的Getter/Setter属性。\n\n## 创建表\n如果使用的是Eclipse已经安装了Android ADT-extensions插件，则可以使用此插件来生成数据库：右键选择Aorm模型（可以多选）->右键菜单->ADT extensions->New ORM Provider打开组件生成向导来自动生成。\n\n当然，您也可以手动创建，如下代码所示：\n```java\n        mOpenHelper = new SQLiteOpenHelper(this.getContext(), \"example.db\",\n                null, 1) {\n            public void onCreate(SQLiteDatabase db) {\n                // method 3: use AORM to create table\n                Aorm.createTable(db, Grade.class);\n                Aorm.createTable(db, Student.class);\n                Aorm.createTable(db, Course.class);\n            }\n        };\n```\n\n## 示例\n\n### 查询\n\n#### 简单查询\n查询所有的学生记录。\n```java\nSession session = ExampleContentProvider.getSession();\n// 最简单的查询，查询所有的记录\nCriteria criteria = Criteria.create(Student.class);\nList<Student> list = session.list(Student.class);\n```\n查询为cursor对象，cursor可以直接在CursorAdapter中使用\n```java\nCursor c = session.query(criteria);\n```\n\n查询单个学生信息\n```java\n// 查询主键为4的学生\ns = session.get(Student.class, 4);\n```\n#### 条件查询\nEquals查询\n```java\n// 添加id equals条件\ncriteria.add(Restrictions.eq(\"id\", 1));\n```\nLike查询\n```java\n// 添加姓名中包含Jamling的学生\ncriteria.add(Restrictions.like(\"name\", \"Jaming\"));\n```\n比较查询\n```java\n// 添加年龄大于30岁条件\ncriteria.add(Restrictions.gt(\"age\", 30));\n```\n排序\n```\n// 按年龄升序排序\ncriteria.addOrder(Order.asc(\"age\"));\n```\nDistinct\n```\n// set district\ncriteria.setDistinct(true);\n```\nLimit\n```\n// 限定查询第10到20条记录\ncriteria.setLimit(10, 10);\n```\n\n#### 连接查询\nCriteria支持以下四种连接\n1. 左连接\n2. 左外连接\n3. 内连接\n4. 交叉连接（笛卡尔积）\n\n通过Criteria.create方法来创建连接。如下示例代码。\n\n```java\nCriteria criteria = Criteria.create(Student.class, \"s\")\n                .addChild(Grade.class, \"g\")\n                .add(Restrictions.eqProperty(\"s.id\", \"g.sid\"));\n// query to list.\nList<Object[]> ret = session.listAll(criteria);\nObject[] item = ret.get(0);\nStudent s = (Student) item[0];\nGrade g = (Grade) item[1];\n```\n\n### 插入记录\n\n```java\nSession session = ExampleContentProvider.getSession();\n// insert\nStudent s = new Student();\ns.setName(\"Jamling\");\nlong rowId = session.insert(s, null);\n```\n\n### 更新记录\n\n```java\n// update student's name to Jame whose id is 1\ns.setId(1);\ns.setName(\"Jame\");\nint rows = session.update(s);\n```\n\n### 删除记录\n\n```java\n// delete student whose id is 2\nsession.deleteById(Student.class, 2);\n```\n"},{"title":"Downloads","url":"/p/QuickAF/download.html","content":"\n"},{"title":"User guide","url":"/p/QuickAF/userguide.html","content":"\n整体框架采用MVC模式，Activity/Fragment为View层。XXXController为Controller层。各种请求及响应模型为model层。\n\n## BaseActivity/BaseFragment\napp中的所有activity，建议都继承BaseActivity，所有Fragment建议都继承BaseFragment。\n下面对BaseActivity/BaseFragment中的界面初始化方法做简单的说明\n### 初始化窗体\n\n```java\nprotected void initWindowFeature() {\n    requestWindowFeature(Window.FEATURE_NO_TITLE);\n}\n```\n\n在此方法中，可以设置界面窗体特征，比如，标题栏是否可以，是否全屏，是否沉浸式效果，是否显示标题栏，是否悬浮标题栏等。\n**BaseFragment无此方法*\n\n### 初始化参数\n\n```java\nprotected void initIntent(Bundle bundle) {\n\n}\n```\n\n在此方法中，可以初始化参数，如activity/fragment恢复状态，或是从其它界面传入的参数。\n\n### 初始化顶部\n\n```java\nprotected void initHeaderView() {\n    // \n}\n```\n\n比如左边设置一个返回的text view，中间设置一个text view用于显示标题\n\n### 初始化主体\n\n```java\nprotected void initContentView(View view) {\n\n}\n```\n初始化界面主体（中间）部分\n\n### 初始化底部\n\n```java\nprotected void initBottomView() {\n\n}\n```\n\n*BaseFragment无此方法*\n\n### 初始化数据\n\n```java\nprotected void initData() {\n\n}\n```\n\n### 设置悬浮标题栏\nvoid cn.ieclipse.af.app.AfActivity.setOverlay(boolean overlay)\n\n仅在标题栏可见时有效\n\n### 设置标题栏可见\nvoid cn.ieclipse.af.app.AfActivity.setShowTitleBar(boolean showTitleBar)\n设置是否显示标题栏\n注：如果在initWindowFeature中设置为不可见，那么initHeaderView将不会被调用\n\n## 常用控件\n### TitleBar\nTitleBar定义了标题栏的布局。分为左，中，右三块区域。可以根据设计方案对TitleBar进行设置。\n默认情况下，BaseActivity中对TitleBar的定义为：\n左侧返回TextView：mTitleLeftView\n中间标题名称TextView：mTitleTextView\n一般情况下，只需要设置mTitleTextView的文本即可\n下面主要是对右侧菜单进行添加\n\n- 右侧button为图片:\n``` java\nmTitleTextView.setText(R.string.house_title);\nmMap = (ImageView) mAbTitleBar.addRightView(R.layout.layout_title_icon);\nmMap.setImageResource(R.drawable.title_map);\nmSearch = (ImageView) mAbTitleBar.addRightView(R.layout.layout_title_icon);\nmSearch.setImageResource(R.drawable.title_search);\nsetOnClickListener(mMap, mSearch);\n```\n\n- 右侧button为文字:\n```java\nmManageTv = (TextView) mTitleBar.addRightView(R.layout.layout_title_text);\nmManageTv.setText(isMyList() ? R.string.note_my_book_title_manage : R.string.note_other_book_title_change);\n```\n\n- 右侧button为图片加文字(比较少)\n```java\nmSubmit = (TextView) mTitleBar.addRightView(R.layout.layout_title_post_submit);\n```\n然后再更改drawableLeft…等.\n\n## AppController\n各个App客户端用到的接口可能不一样，定义的消息码也未必一样。所以需要针对当前接口的特性，编写具体的AppController，AppController继承Aflibrary中的Controller。用于管理接口异步请求task。工程中的所有controller必须继承AppContoller。\n建议的做法：\n一个接口对应一个task，一个task对应listener中的两个方法，一个onXXXSuccess方法用于监听task的成功调用，一个onXXXFailure方法用监听task的调用失败\n\n### UploadController\n用于带图片、文件上传的地方\n\n## Model\n### BaseRequest\n所有网络请求模型的顶层类\n\n### BasePostRequest\n所有需要带身份信息的网络请求模型父类\n\n4.5.3   BaseListPostRequest\n带分页请求和身份信息的网络请求模型父类\n4.5.4   BaseResponse\n网络请求返回的大对象，如data数据为空，刚定义返回的模型为BaseResponse即可\n4.5.5   BaseListInfo\n响应data中带分页的响应模型\n4.5.6   XxxInfo\n响应data中的响应模型\n需要实现java.io.Serializable接口，如果配合RefreshableListView使用，需要重写equals方法\n\n"},{"title":"Downloads","url":"/p/SmartIM4Eclipse/download.html","content":"\n"},{"title":"Overview","url":"/p/QuickAF/index.html","content":"\n"},{"title":"Downloads","url":"/p/SmartIM4IntelliJ/download.html","content":"\n"},{"title":"Overview","url":"/p/SmartIM4Eclipse/index.html","content":"\n"},{"title":"Overview","url":"/p/SmartIM4IntelliJ/index.html","content":"\n"},{"title":"Download","url":"/p/adt-extensions/download.html","content":"\n"},{"title":"Android ADT-extensions","url":"/p/adt-extensions/index.html","content":"\n"},{"title":"Change logs","url":"/p/adt-extensions/change.html","content":"\n## 4.0.1/2016-07-12\n- Fix can't open docs issue in edit component page\n\n## 4.0.0/2016-03-30\n\n- Package with eclipse 4.x\n- Include Android-ORM plugin\n- Add Activity/Service/Receiver/Provider configuration feature\n\n## 3.5.1/2014-10-24\n- Fix sub-class of android component not configurated in AndroidManifest.xml\n\n## 3.5.0/2011-07-11\n- Initial version\n\n\n"},{"title":"Change logs","url":"/p/eclipse-explorer/change.html","content":"\n## 4.1.0/2016-06-20\n- Host plugin support open TextEditor input in explorer\n- Uniform open folder/file in explorer behavior\n- Support exploring internal .jar of explorer4java fragment\n- Add new fragment explorer4cdt\n- Add setIdentifier for IExplorable\n\n## 4.0.0/2016-03-30\n\n- Package with eclipse 4.x\n- Host/Fragment uncoupled\nHost explorer reduced to only common resource explorer (Platform resource) \nJava explorer uncoupled to [Eclipse Explorer for Java](https://marketplace.eclipse.org/content/eclipse-explorer-java)\n\n## 3.5.1/2011.08.03\n\n1. 修复linux系统下，无法对java project正确explorer的bug。\n2. 将preference 移动到general目录下\n3. 添加系统自动检测，linux默认为nautilus命令。\n\n## 3.5.0/2010-04-23\n\n1. 修改对源文件目录不能打开的bug；\n2. 修改默认快捷键为CTRL+`（1左边的那个）原来的默认F3快捷键与某些eclipse版本存在冲突；\n3. MANIFEST.MF依赖约束中去除版本绑定；\n\n\n"},{"title":"Developer","url":"/p/eclipse-explorer/develop.html","content":"\n## 简介\n\n[Eclipse Explorer] 4.x版本是一个重构版本。它对平台资源与特定语言版本下的eclipse资源进行了解耦。这样，方便开发者将[Eclipse Explorer]集成到自己的RCP产品中，或者开发支持特定语言eclipse版本（如Eclipse for Java IDE）的explorer插件。\n\nEclipse Explorer的目标是打造最强大的explorer插件！如果您对此感兴趣，诚邀您和我们一起共同改进此项目。\n\n## 开发规范\n- Fragment工程须提交到[Eclipse Explorer]\n- Bundle-Name 建议使用explorer4xxx，xxx为开发语言，如explorer4java\n- Feature Name 建议使用Eclipse explorer for xxx，如Eclipse explorer for CDT\n\n## Fragment列表\n- Eclipse explorer for Java, Eclipse 标准版及其它Java语言版本下的explorer插件\n- Eclipse explorer for CDT, Eclipse IDE for C/C++ Developers下的explorer插件\n\n## 开发步骤\n- 新建fragment工程\n在Eclipse中，新建工程，选择Plugin Development目录下的Fragment Project\n\n![image](/p/eclipse-explorer/develop/new_fragment_project1.png)\n\n- 设置宿主插件\n添加[Eclipse Explorer]做为宿主插件\n\n![image](/p/eclipse-explorer/develop/new_fragment_project3.png)\n\n- 添加fragment依赖\n如Java版本fragment，添加org.eclipse.jdt.core依赖\n\n- 继承AdapterFactory\n新建一个类，如JavaAdapterFactory.java并继承Eclipse Explorer插件中的cn.ieclipse.pde.explorer.AdapterFactory类\n重写getExplorable()方法，返回可以浏览的资源对象\n示例：\n```java\n    @Override\n    public IExplorable getExplorable(Object obj) {\n        String path = null;\n        if (obj instanceof IJavaElement) {\n            // java project.\n            if (obj instanceof IJavaProject) {\n                path = ((IJavaProject) obj).getProject().getLocation()\n                        .toOSString();\n                return new Explorer(path, null);\n            }\n            // jar resource is null\n            else if (obj instanceof JarPackageFragmentRoot) {\n                String file = ((IPackageFragmentRoot) obj).getPath()\n                        .toOSString();\n                // get folder\n                return new Explorer(null, file);\n            }\n            else if (obj instanceof IPackageFragmentRoot) {\n                // src folder\n                IPackageFragmentRoot src = ((IPackageFragmentRoot) obj);\n                IProject p = src.getJavaProject().getProject();\n                String prjPath = p.getLocation().toOSString();\n                path = new File(prjPath, src.getElementName())\n                        .getAbsolutePath();\n                return new Explorer(path, null);\n                // System.out.println(path);\n            }\n            else if (obj instanceof IPackageFragment) {// other : package\n                IResource resource = ((IPackageFragment) obj).getResource();\n                path = resource.getLocation().toOSString();\n                return new Explorer(path, null);\n            }\n            else {// member:filed:\n                IResource resource = ((IJavaElement) obj).getResource();\n                String file = resource.getLocation().toOSString();\n                // get folder\n                return new Explorer(null, file);\n            }\n        }\n        return null;\n    }\n```\n\n- 配置fragment扩展\n在fragment.xml，Extensions选项卡，添加org.eclipse.core.runtime.adapters扩展点\n<p> ![image](/p/eclipse-explorer/develop/new_extension.png) ![image](/p/eclipse-explorer/develop/add_adapter_factory_extension.png)</p>\n示例：\n```xml\n   <extension\n         point=\"org.eclipse.core.runtime.adapters\">\n      <factory\n            adaptableType=\"org.eclipse.jdt.core.IJavaElement\"\n            class=\"cn.ieclipse.pde.explorer.java.JavaAdapterFactory\">\n         <adapter\n               type=\"cn.ieclipse.pde.explorer.IExplorable\">\n         </adapter>\n      </factory>\n   </extension>\n```\n\n\n\n- 调试\n对fragment工程Run As->Eclipse Application进行调试，建议打开\"Error log\"视图并查看日志。\n\n- 创建feature\n调试并测试完毕之后，在Eclipse中，新建工程，选择Plugin Development目录下的Feature Project，为fragment工程创建feature。\nFeature 创建完毕之后，请在cn.ieclipse.pde.explorer.feature工程中Included Features选项卡添加创建的feature，然后对cn.ieclipse.pde.explorer.site重新Build All。Build完之后，对Feature做安装测试并验证\n\n## 发布\n在发布之前，应当充分测试fragment/feature/update site，测试通过后，可以选择将此fragment发布到Eclipse marketplace或作为[Eclipse Explorer]的补丁发布。发布成功后，请在[Eclipse Explorer]项目\n测试及发布成功后，可以选择在fork [Eclipse Explorer] README.md中添加您的fragment插件及作者信息并提交Pull request.\n\n如果作为[Eclipse Explorer]的补丁发布（推荐使用此方式），请[mail](mailto:li.jaming@gmail.com)管理员在Eclipse Marketplace上更新fragment。\n\n[Eclipse Explorer]: https://github.com/Jamling/eclipse-explorer\n\n\n"},{"title":"Releases","url":"/p/eclipse-explorer/download.html","content":"\n"},{"title":"Eclipse explorer","url":"/p/eclipse-explorer/index.html","content":"\n"},{"title":"Overview","url":"/p/hexo-generator-i18n/index.html"},{"title":"Releases","url":"/p/hexo-generator-i18n/download.html","content":"\n"},{"title":"Downloads","url":"/p/hexo-theme-nova/download.html","content":"\n"},{"title":"Front-matter","url":"/p/hexo-theme-nova/front-matter.html","content":"\n{% blockquote hexo.io https://hexo.io/docs/front-matter.html Front-matter  %}\nFront-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.\n{% endblockquote %}\n\nThe nova theme defined following front-matter beyond the official's\n - toc\n - title2\n - description\n - type\n - gh \n\n### toc\nShow table of contents or not, if not set, the default value is:\n - post layout: false\n - project layout: true\n - page layout: true\n \nSample (source of current page): \n\n```yaml\n---\ntitle: Hexo your blog\ndate: 2016-03-04 12:48:31\ncategory: [软件技术, Web]\ntags: [Hexo, Node.js]\ntoc: true\n---\n\n# Overview\n\nThis article...\n```\n \n### title2\nThe internationalization title key, will be translated with `__(title2)`\n\nExample\n`download.md` content:\n```yaml\n---\ntitle: Downloads\ntitle2: project.download\n---\n```\n`languages/en.yml` content:\n```yaml\nproject:\n\tdownload: Downloads\n```\n\nThe page title will be the output of `__('project.download')`, the result is: <var>Downloads</var>\n\n### description\nThe extra description of html page, will append to the content of `<html><head><meta name=\"description\"...`\n\n### type\n`type` front-matter only used in page layout.\n\nSample (Source of `source/categories/index.md`):\n\n```yaml\n---\ntitle: categories\ndate: 2016-03-30 16:14:59\ntype: categories\ntitle2: menu.category\n---\n\n```\n\n### gh\n\nNova project page are generated by [hexo-generator-github] partially, a `gh` front-matter is used for [project layout](./layouts.html#project).\n\n- gh.user: the github user, default is the user in theme <var>_config.yml</var>\n- gh.repo: the github repo, default is fetched from url\n- gh.type \n    - get_repos: The `gh_repos()` helper will invoked to get repositories from github. \n    - get_contents: The `gh_repo_contents()` helper will be invoked to get markdown file under repository.\n    <var>gh.path</var> to indicate the concrete file on github, default is **README.md**\n    <var>gh.ref</var> to indicate the branch on github, default is **master**\n    - get_releases: The `gh_repo_releases()` helper will be invoked to get releases under repository.\n    \nSample (Source of `p/Android-ORM/index.md`):\n```yaml\n---\ntitle: Android-ORM\ndate: 2016-01-30 17:43:26\nlayout: project\ntitle2: project.overview\ngh:\n  type: get_contents\n  path: README_zh.md\n  user: Jamling\n  repo: Android-ORM\n---\n```\n\nWhat's the page output? see the snippets of helpers.js in [hexo-generator-github] plugin.\n\n```js\nfunction gh_contents(options){\n  var o = options || {}\n  var user = o.hasOwnProperty('user') ? o.user : this.config.github.user;\n  var name = o.hasOwnProperty('repo') ? o.repo : null;\n  var path = o.hasOwnProperty('path') ? o.path : 'README.md';\n  var ref = o.hasOwnProperty('ref') ? o.ref : 'master';\n  \n  if (name === undefined) {\n    return '';\n  }\n  \n  var cache = (this.gh_read_cache(this.page));\n  if (cache){\n\t  return this.markdown(cache.toString());\n  }\n  \n  gh.setToken(this.config.github.token);\n  var url = util.format('repos/%s/%s/contents/%s', user, name, path);\n  console.log(\"no cache, and try load from : \" + url);\n  var repo = gh.reqSync(url, {data:{'ref': ref}});\n  if (repo && repo.content){\n    var md = new Buffer(repo.content, repo.encoding).toString();\n    var content = this.markdown(md);\n    this.gh_write_cache(this.gh_cache_dir(this.page, md));\n    return content;\n  }\n  return '';\n}\n\n```\n[hexo-generator-github]: https://github.com/Jamling/hexo-generator-github\n\n"},{"title":"Overview","url":"/p/hexo-theme-nova/index.html","content":"\n"},{"title":"Plugins","url":"/p/hexo-theme-nova/plugins.html","content":"\n{% blockquote hexo.io https://hexo.io/docs/plugins.html Plugins  %}\nHexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo: \n{% endblockquote %}\n\n## Script\n\nAll the [helpers](./helpers.html) under <var>scripts</var> are simple plugin.\n\n## Plugin\n\nNova theme used 3rd plugins are:\n- [lodash] used as util library for writing script plugin.\n- [cheerio] helps to process toc.\n- [hexo-renderer-sass] helps to generate css.\n- [hexo-generator-github] helps to generate project pages.\n- [hexo-generator-i18n] helps to generate multi-language sites.\n\n[lodash]: https://github.com/lodash/lodash\n[cheerio]: https://github.com/cheeriojs/cheerio\n[hexo-renderer-sass]: https://github.com/knksmith57/hexo-renderer-sass\n[hexo-generator-github]: https://github.com/Jamling/hexo-generator-github/\n[hexo-generator-i18n]: https://github.com/Jamling/hexo-generator-i18n/"},{"title":"Helpers","url":"/p/hexo-theme-nova/helpers.html","content":"\n{% blockquote hexo.io https://hexo.io/docs/helpers.html Helpers  %}\nHelpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.\n{% endblockquote %}\n\nHelpers of nova are located under theme `scripts` folder\n\n## helpers.js\n\n### head_title\n\nReturns page title. `title2` assigned in front-marker the title will be i18n output\n\n### head_keyword\nReturn keyword meta\n\n### head_description\nReturn description meta\n\n### header_menu\n@param `className` class of menu item, param may changed in feature\nReturn menu navigation\n\n### page_title\n@param `page` if undefined means current page.\nReturn the page title, usually place to `<head><title>`\n\n### page_path\n@param `post`  the post\n@param `options` the options\nReturn post path navination\n\nOption | Description | Default\n--- | --- | ---\n`class` | The path item class | category-item\n`icon` | The path preffix icon class | glyphicon glyphicon-folder-close\n\n### page_excerpt\n@param `post` the post, if undefined means current page\nReturn page excerpt, if <!-- more --> not avaliable in .md, return the first paragraph as excerpt.\n\n### post_cates\n@param `post`  the post\n@param `options` the options\nRetrun categories in post\n\nOption | Description | Default\n--- | --- | ---\n`class` | The path item class | category-item\n`icon` | The path preffix icon class | glyphicon glyphicon-folder-close\n\n### post_tags\n@param `post`  the post\n@param `options` the options\nReturn post tags in post\n\nOption | Description | Default\n--- | --- | ---\n`class` | The path item class | tag-item\n`icon` | The path preffix icon class | glyphicon glyphicon-tags\n\n### ~~page_share_jiathis~~\n@param `post` the post, if undefined means current page\n@param `webid` [the webib of jiathis share](http://www.jiathis.com/help/html/support-media-website), if empty will redirect to share target page of jiathis.\nReturn share link of post\n\n### page_uid\n@param `page` page or this.page if undefined.\nReturn the unique id of page\n\n### widget_cates\n\nList categories in post widget.\n\nOption | Description | Default\n--- | --- | ---\n`show_count` | Show post count under category | true\n\n### widget_tags\n\nList tags in post widget.\n\n## list_categories.js\n### nova_list_categories\n\nInserts a list of all categories.\nSimilar to list_categories, used in <var>post/widget_categories.swig</var>\nOnly changed the ul, li, style.\n\n``` js\n<%- nova_list_categories([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each category | true\n`style` | Style to display the category list. `list` displays categories in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`depth` | Levels of categories to be displayed. `0` displays all categories and child categories; `-1` is similar to `0` but displayed in flat; `1` displays only top level categories. | 0\n`class` | Class name of category list. | category\n`transform` | The function that changes the display of category name. |\n\n## list_archives.js\n### nova_list_archives\n\nInserts a list of archives.\nSimilar to list_archives, used in post/widget_archives.swig\nThe helper adds archive.posts and changes class style.\n\n\n``` js\n<%- nova_list_archives([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`type` | Type. This value can be `yearly` or `monthly`. | monthly\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each archive | true\n`format` | Date format | MMMM YYYY\n`style` | Style to display the archive list. `list` displays archives in an unordered list. **`group` displays archives in a panel** | list. **`page`** displays archives in archives page.\n`separator` | Separator between archives. (Only works if `style` is not `list`) | ,\n`class` | Class name of archive list. | archive\n`transform` | The function that changes the display of archive name. |\n`post_limit` | The posts display limitation. (add in nova) | 10\n\n### ~~nova_archives~~\n\nDeprecated from 0.2.0, see `nova_list_archives` helpers and set `page` style options\n\nInserts a list of archives.\nSimilar to list_archives, used in post/archives.swig\n\n``` js\n<%- nova_archives([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`type` | Type. This value can be `yearly` or `monthly`. | monthly\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each archive | true\n`format` | Date format | MMMM YYYY\n`style` | Style to display the archive list. `list` displays archives in an unordered list. **`group` displays archives in a panel** | list\n`separator` | Separator between archives. (Only works if `style` is not `list`) | ,\n`class` | Class name of archive list. | archive\n`transform` | The function that changes the display of archive name. |\n`post_limit` | The posts display limitation. (add in nova) | 10\n\n## list_posts.js\n### nova_list_posts\n\nInserts a list of posts. Only changs the class style.\n\n``` js\n<%- nova_list_posts([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of posts | date\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`style` | Style to display the post list. `list` displays posts in an unordered list.  | list\n`separator` | Separator between posts. (Only works if `style` is not `list`) | ,\n`class` | Class name of post list. | post\n`amount` | The number of posts to display (0 = unlimited) | 6\n`transform` | The function that changes the display of post name. |\n\n## paginator.js\n### nova_paginator\n\nInserts a paginator. Similar to paginator, adds class option for paginator bar.\n\n``` js\n<%- paginator(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`base` | Base URL | /\n`format` | URL format | page/%d/\n`total` | The number of pages | 1\n`current` | Current page number | 0\n`prev_text` | The link text of previous page. Works only if `prev_next` is set to true. | Prev\n`next_text` | The link text of next page. Works only if `prev_next` is set to true. | Next\n`space` | The space text | &hellp;\n`prev_next` | Display previous and next links | true\n`end_size` | The number of pages displayed on the start and the end side | 1\n`mid_size` | The number of pages displayed between current page, but not including current page | 2\n`show_all` | Display all pages. If this is set true, `end_size` and `mid_size` will not works. | false\n`class` | paginator ui class (add in nova). | 'pagination'\n\n### nova_paginator2\nDisplay a paginator bar only with previous and next, used in single page.\n\nOption | Description | Default\n--- | --- | ---\n`show_name` | Show page title | false\n\n## toc.js\n### nova_toc\n\nParses all heading tags (h1~h6) in the content and inserts a table of contents.\nDelete list_number option, add expand and deep option.\n\n``` js\n<%- nova_toc(str, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | Class name | ~toc~ -> nav\n~`list_number`~ | Displays list number | true\n`deep` | The toc deepth | 3\n`expand` | The toc max expand level | 6\n\n**Examples:**\n\n``` js\n{{ nova_toc(page.content, {class:'nav toc-ul', deep: 6, expand:6}) }}\n```\n"},{"title":"Layouts","url":"/p/hexo-theme-nova/layouts.html","content":"The theme provided three layouts to demonstrate the page.\n\n 1. `post` for blog\n 2. `project` for github project\n 3. `page` for other pages\n\n## Summary ##\n### post\nSimilar to most hexo theme, nova has index, archive, widgets layout. The difference is nova rewrite archive list helpers and provided two paginator helpers.\n\n### project\nProject layout is aimed to demonstrate the github projects info. For project layout, a `gh` front-matter is nessary in your page.\n\nThe projects sidebar is configurated in <var>_data</var>/<var>projects.yml</var>\n\n### page\n\nThe default layout of other pages.\n\nA `type` front-matter is used to mark special pages.\n\n- categories: Categories page\n- donates: Donate list page.\n\n### other\n- comment: Page comment, default is uyan comment\n- share: Jiathis share component\n- analytics: Baidu analytics component\n- donate: page donate component\n\n## Layout tree\n<pre>\nlayout\n\tpost\n\t\tindex.swig // home\n\t\tarticle.swig // post article detail\n\t\tarchive.swig // archive/tag/category \n\t\twidget_xxx.swig // search, tags, categories, recently... widget_xxx.swig // search, tags, categories, recently...widget_xxx.swig // search, tags, categories, recently...\n\tproject\n\t\tprojects.swig // project home, list repos on github\n\t\treleases.swig // list repo releases on github\n\t\tcontents.swig // display repo contents on github\n\t\tsidebar.swig // project navigator side bar\n\tportail\n\t\theader.swig // html head, header\n\t\tfooter.swig // html footer\n\t\tcomment.swig // page comment\n\t\ttoc.swig    // toc suffix\n\tpage\n\t\tcategories.swig // all categories\n\t\tdonates.swig // donate records and rank\n\t\tarticle.swig // the article \n\tindex.swig // index layout dispatcher, link to post/index.\n\tpost.swig // post layout dispatcher.\n\tpage.swig // page layout dispatcher.\n\tproject.swig // project layout dispatcher.\n</pre>\n\n### post \n\nThe index page is a special article list page, listing all post with excerpt in main container.\n\nThe archive, category, tag page regards as archive list page, listing article archive list in main container.\n\nThe article page display the post detail content in main container\n\nThe `layout/post.swig` dispatche layout to `layout/post/xxx.swig` :\n\n```htmlbars\n<div class=\"container container-fluid\">\n<div class=\"row\">\n  <div class=\"{{theme.layout.index.main}}\">\n    {% if is_home() %}\n    {{ partial('post/index') }}\n    {% elseif is_archive() || is_category() || is_tag() %}\n    {{ partial('post/archive') }}\n    {% elseif is_post() %}\n    {% set show_toc = theme.toc.post && page.toc %}\n    {{ partial('post/article', {post: page}) }}\n    {% endif %}\n  </div>\n  <!-- aside -->\n  <div class=\"{{theme.layout.index.widgets}}\">\n    <aside>\n      {%- if page_toc() %}\n      {{ partial('./partial/toc', {style: theme.layout.index.widgets}) }}\n      {%- endif %}\n    </aside>\n  </div>\n</div>\n</div>\n```\nThe `layout/index.swig` is a special layout for home page.\n\n### page\n\nFor common page, display content in main container, and TOC in right aside.\n\nFor special page, dispatcher to special layout.\n\n`layout/page.swig` dispatcher:\n\n```htmlbars\n{%- if page.type === 'categories' %}\n{{ partial('page/categories', {}) }}\n{%- elseif page.type === 'donates' %}\n{{ partial('page/donates', {}) }}\n{%- else %}\n<div class=\"container container-fluid\">\n  <div class=\"row\">\n    <div class=\"{{theme.layout.page.main}}\">\n      {{ partial('./page/article') }}\n    </div>\n    <div class=\"{{theme.layout.page.toc}}\">\n      {{ partial('./partial/toc') }}\n    </div>\n  </div><!--  end row -->\n</div>\n{%- endif %}\n\n```\n\n### project\n\nProjects page, listing repos on github\n\nOther page, display content in main container, TOC in right aside and nagivation bar in left aside.\n\n`layout/project.swig` dispatcher:\n\n```js\n{% if page.gh %}\n  {% set gh = gh_opts() %}\n  {% if gh.type === 'get_contents' %} \n    {% set page.content = gh_contents() %}\n    {{ partial('project/contents', {} )}}\n  {% elseif gh.type === 'get_repos' %}\n    {{ partial('project/projects', {} )}}\n  {% elseif gh.type === 'get_releases' %}\n    {{ partial('project/releases', {} )}}\n  {% endif %}\n{% else %}\n  {{ partial('project/contents', {} )}}\n{% endif %}\n```\n\n# Plugin\nThere are many [plugins](https://hexo.io/plugins) of [hexo], it's easy to write a plugin under [hexo].\nJust write a <var>.js</var> under <var>script</var> in your theme.\n\nhere is a sample (<var>script</var>/<var>helpers.js</var>) to write a helper plugin to return page title.\n```js\n// return page title.\nhexo.extend.helper.register('page_title', function(){\n  var p = this.page;\n  var ret = '';\n  if (p.title2) { // if has a title2 in front-matter, i18n title2 value as title\n    ret = this.i18n(p.title2);\n  }\n  else if (p.title){ // use title value as title \n    ret = p.title;\n  }\n  return ret;\n});\n```\n\nAnd another sample of display categories in post:\n```js\n// insert category of post\nhexo.extend.helper.register('post_cates', function(post){\n  var cats = post.categories;\n  var _self = this;\n  var ret = '';\n  if (cats == null || cats.length == 0) {\n      return ret;\n  }\n  ret += '<span class=\"glyphicon glyphicon-folder-close\" aria-hidden=\"true\"></span>&nbsp;' + _self.__('category.label') + '';\n  ret += '<ol class=\"breadcrumb category\">';\n  cats.forEach(function(item){\n    ret += '<li><a class=\"\" href=\"' + _self.url_for_lang(item.path) + '\">' + item.name + '</a></li>';\n  });\n  ret += '</ol>';\n  return ret;\n});\n```\nUse in layout/post.swig\n\n```htmlbars\n          <footer class=\"post-item-footer\">\n            {{ post_cates(post) }} \n            {{ post_tags(post) }}\n          </footer>\n```\nWill output:\n<pre>\n    <footer class=\"post-item-footer\">\n            <span class=\"glyphicon glyphicon-folder-close\" aria-hidden=\"true\"></span>&nbsp;分类<ol class=\"breadcrumb category\"><li><a class=\"\" href=\"/categories/软件技术/\">软件技术</a></li><li><a class=\"\" href=\"/categories/软件技术/Web/\">Web</a></li></ol> \n            <span class=\"glyphicon glyphicon-tags\" aria-hidden=\"true\"></span>&nbsp;标签<ol class=\"breadcrumb tag\"><li><a class=\"\" href=\"/tags/Hexo/\">Hexo</a></li><li><a class=\"\" href=\"/tags/Node-js/\">Node.js</a></li></ol>\n    </footer>\n</pre>\n\nThe [Nova] rewrite lost of helper of [hexo] to simplify the style. Please visit [Helpers](http://ieclipse.cn/p/hexo-theme-nova/helpers.html) for more informations."},{"url":"/other/calendar.js","content":"/**\n* @1900-2100区间内的公历、农历互转\n* @charset UTF-8\n* @Author  Jea杨(JJonline@JJonline.Cn) \n* @Time    2014-7-21\n* @Time    2016-8-13 Fixed 2033hex、Attribution Annals\n* @Time    2016-9-25 Fixed lunar LeapMonth Param Bug\n* @Version 1.0.2\n* @公历转农历：calendar.solar2lunar(1987,11,01); //[you can ignore params of prefix 0]\n* @农历转公历：calendar.lunar2solar(1987,09,10); //[you can ignore params of prefix 0]\n*/\nvar calendar = {\n\n    /**\n      * 农历1900-2100的润大小信息表\n      * @Array Of Property\n      * @return Hex \n      */\n    lunarInfo:[0x04bd8,0x04ae0,0x0a570,0x054d5,0x0d260,0x0d950,0x16554,0x056a0,0x09ad0,0x055d2,//1900-1909\n            0x04ae0,0x0a5b6,0x0a4d0,0x0d250,0x1d255,0x0b540,0x0d6a0,0x0ada2,0x095b0,0x14977,//1910-1919\n            0x04970,0x0a4b0,0x0b4b5,0x06a50,0x06d40,0x1ab54,0x02b60,0x09570,0x052f2,0x04970,//1920-1929\n            0x06566,0x0d4a0,0x0ea50,0x06e95,0x05ad0,0x02b60,0x186e3,0x092e0,0x1c8d7,0x0c950,//1930-1939\n            0x0d4a0,0x1d8a6,0x0b550,0x056a0,0x1a5b4,0x025d0,0x092d0,0x0d2b2,0x0a950,0x0b557,//1940-1949\n            0x06ca0,0x0b550,0x15355,0x04da0,0x0a5b0,0x14573,0x052b0,0x0a9a8,0x0e950,0x06aa0,//1950-1959\n            0x0aea6,0x0ab50,0x04b60,0x0aae4,0x0a570,0x05260,0x0f263,0x0d950,0x05b57,0x056a0,//1960-1969\n            0x096d0,0x04dd5,0x04ad0,0x0a4d0,0x0d4d4,0x0d250,0x0d558,0x0b540,0x0b6a0,0x195a6,//1970-1979\n            0x095b0,0x049b0,0x0a974,0x0a4b0,0x0b27a,0x06a50,0x06d40,0x0af46,0x0ab60,0x09570,//1980-1989\n            0x04af5,0x04970,0x064b0,0x074a3,0x0ea50,0x06b58,0x055c0,0x0ab60,0x096d5,0x092e0,//1990-1999\n            0x0c960,0x0d954,0x0d4a0,0x0da50,0x07552,0x056a0,0x0abb7,0x025d0,0x092d0,0x0cab5,//2000-2009\n            0x0a950,0x0b4a0,0x0baa4,0x0ad50,0x055d9,0x04ba0,0x0a5b0,0x15176,0x052b0,0x0a930,//2010-2019\n            0x07954,0x06aa0,0x0ad50,0x05b52,0x04b60,0x0a6e6,0x0a4e0,0x0d260,0x0ea65,0x0d530,//2020-2029\n            0x05aa0,0x076a3,0x096d0,0x04afb,0x04ad0,0x0a4d0,0x1d0b6,0x0d250,0x0d520,0x0dd45,//2030-2039\n            0x0b5a0,0x056d0,0x055b2,0x049b0,0x0a577,0x0a4b0,0x0aa50,0x1b255,0x06d20,0x0ada0,//2040-2049\n            /**Add By JJonline@JJonline.Cn**/\n            0x14b63,0x09370,0x049f8,0x04970,0x064b0,0x168a6,0x0ea50, 0x06b20,0x1a6c4,0x0aae0,//2050-2059\n            0x0a2e0,0x0d2e3,0x0c960,0x0d557,0x0d4a0,0x0da50,0x05d55,0x056a0,0x0a6d0,0x055d4,//2060-2069\n            0x052d0,0x0a9b8,0x0a950,0x0b4a0,0x0b6a6,0x0ad50,0x055a0,0x0aba4,0x0a5b0,0x052b0,//2070-2079\n            0x0b273,0x06930,0x07337,0x06aa0,0x0ad50,0x14b55,0x04b60,0x0a570,0x054e4,0x0d160,//2080-2089\n            0x0e968,0x0d520,0x0daa0,0x16aa6,0x056d0,0x04ae0,0x0a9d4,0x0a2d0,0x0d150,0x0f252,//2090-2099\n            0x0d520],//2100\n\n    /**\n      * 公历每个月份的天数普通表\n      * @Array Of Property\n      * @return Number \n      */\n    solarMonth:[31,28,31,30,31,30,31,31,30,31,30,31],\n\n    /**\n      * 天干地支之天干速查表\n      * @Array Of Property trans[\"甲\",\"乙\",\"丙\",\"丁\",\"戊\",\"己\",\"庚\",\"辛\",\"壬\",\"癸\"]\n      * @return Cn string \n      */\n    Gan:[\"\\u7532\",\"\\u4e59\",\"\\u4e19\",\"\\u4e01\",\"\\u620a\",\"\\u5df1\",\"\\u5e9a\",\"\\u8f9b\",\"\\u58ec\",\"\\u7678\"],\n\n    /**\n      * 天干地支之地支速查表\n      * @Array Of Property \n      * @trans[\"子\",\"丑\",\"寅\",\"卯\",\"辰\",\"巳\",\"午\",\"未\",\"申\",\"酉\",\"戌\",\"亥\"]\n      * @return Cn string \n      */\n    Zhi:[\"\\u5b50\",\"\\u4e11\",\"\\u5bc5\",\"\\u536f\",\"\\u8fb0\",\"\\u5df3\",\"\\u5348\",\"\\u672a\",\"\\u7533\",\"\\u9149\",\"\\u620c\",\"\\u4ea5\"],\n\n    /**\n      * 天干地支之地支速查表<=>生肖\n      * @Array Of Property \n      * @trans[\"鼠\",\"牛\",\"虎\",\"兔\",\"龙\",\"蛇\",\"马\",\"羊\",\"猴\",\"鸡\",\"狗\",\"猪\"]\n      * @return Cn string \n      */\n    Animals:[\"\\u9f20\",\"\\u725b\",\"\\u864e\",\"\\u5154\",\"\\u9f99\",\"\\u86c7\",\"\\u9a6c\",\"\\u7f8a\",\"\\u7334\",\"\\u9e21\",\"\\u72d7\",\"\\u732a\"],\n\n    /**\n      * 24节气速查表\n      * @Array Of Property \n      * @trans[\"小寒\",\"大寒\",\"立春\",\"雨水\",\"惊蛰\",\"春分\",\"清明\",\"谷雨\",\"立夏\",\"小满\",\"芒种\",\"夏至\",\"小暑\",\"大暑\",\"立秋\",\"处暑\",\"白露\",\"秋分\",\"寒露\",\"霜降\",\"立冬\",\"小雪\",\"大雪\",\"冬至\"]\n      * @return Cn string \n      */\n    solarTerm:[\"\\u5c0f\\u5bd2\",\"\\u5927\\u5bd2\",\"\\u7acb\\u6625\",\"\\u96e8\\u6c34\",\"\\u60ca\\u86f0\",\"\\u6625\\u5206\",\"\\u6e05\\u660e\",\"\\u8c37\\u96e8\",\"\\u7acb\\u590f\",\"\\u5c0f\\u6ee1\",\"\\u8292\\u79cd\",\"\\u590f\\u81f3\",\"\\u5c0f\\u6691\",\"\\u5927\\u6691\",\"\\u7acb\\u79cb\",\"\\u5904\\u6691\",\"\\u767d\\u9732\",\"\\u79cb\\u5206\",\"\\u5bd2\\u9732\",\"\\u971c\\u964d\",\"\\u7acb\\u51ac\",\"\\u5c0f\\u96ea\",\"\\u5927\\u96ea\",\"\\u51ac\\u81f3\"],\n\n    /**\n      * 1900-2100各年的24节气日期速查表\n      * @Array Of Property \n      * @return 0x string For splice\n      */\n    sTermInfo:['9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e','97bcf97c3598082c95f8c965cc920f',\n              '97bd0b06bdb0722c965ce1cfcc920f','b027097bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e',\n              '97bcf97c359801ec95f8c965cc920f','97bd0b06bdb0722c965ce1cfcc920f','b027097bd097c36b0b6fc9274c91aa',\n              '97b6b97bd19801ec9210c965cc920e','97bcf97c359801ec95f8c965cc920f','97bd0b06bdb0722c965ce1cfcc920f',\n              'b027097bd097c36b0b6fc9274c91aa','9778397bd19801ec9210c965cc920e','97b6b97bd19801ec95f8c965cc920f',\n              '97bd09801d98082c95f8e1cfcc920f','97bd097bd097c36b0b6fc9210c8dc2','9778397bd197c36c9210c9274c91aa',\n              '97b6b97bd19801ec95f8c965cc920e','97bd09801d98082c95f8e1cfcc920f','97bd097bd097c36b0b6fc9210c8dc2',\n              '9778397bd097c36c9210c9274c91aa','97b6b97bd19801ec95f8c965cc920e','97bcf97c3598082c95f8e1cfcc920f',\n              '97bd097bd097c36b0b6fc9210c8dc2','9778397bd097c36c9210c9274c91aa','97b6b97bd19801ec9210c965cc920e',\n              '97bcf97c3598082c95f8c965cc920f','97bd097bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\n              '97b6b97bd19801ec9210c965cc920e','97bcf97c3598082c95f8c965cc920f','97bd097bd097c35b0b6fc920fb0722',\n              '9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e','97bcf97c359801ec95f8c965cc920f',\n              '97bd097bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e',\n              '97bcf97c359801ec95f8c965cc920f','97bd097bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\n              '97b6b97bd19801ec9210c965cc920e','97bcf97c359801ec95f8c965cc920f','97bd097bd07f595b0b6fc920fb0722',\n              '9778397bd097c36b0b6fc9210c8dc2','9778397bd19801ec9210c9274c920e','97b6b97bd19801ec95f8c965cc920f',\n              '97bd07f5307f595b0b0bc920fb0722','7f0e397bd097c36b0b6fc9210c8dc2','9778397bd097c36c9210c9274c920e',\n              '97b6b97bd19801ec95f8c965cc920f','97bd07f5307f595b0b0bc920fb0722','7f0e397bd097c36b0b6fc9210c8dc2',\n              '9778397bd097c36c9210c9274c91aa','97b6b97bd19801ec9210c965cc920e','97bd07f1487f595b0b0bc920fb0722',\n              '7f0e397bd097c36b0b6fc9210c8dc2','9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e',\n              '97bcf7f1487f595b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\n              '97b6b97bd19801ec9210c965cc920e','97bcf7f1487f595b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722',\n              '9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e','97bcf7f1487f531b0b0bb0b6fb0722',\n              '7f0e397bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa','97b6b97bd19801ec9210c965cc920e',\n              '97bcf7f1487f531b0b0bb0b6fb0722','7f0e397bd07f595b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\n              '97b6b97bd19801ec9210c9274c920e','97bcf7f0e47f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722',\n              '9778397bd097c36b0b6fc9210c91aa','97b6b97bd197c36c9210c9274c920e','97bcf7f0e47f531b0b0bb0b6fb0722',\n              '7f0e397bd07f595b0b0bc920fb0722','9778397bd097c36b0b6fc9210c8dc2','9778397bd097c36c9210c9274c920e',\n              '97b6b7f0e47f531b0723b0b6fb0722','7f0e37f5307f595b0b0bc920fb0722','7f0e397bd097c36b0b6fc9210c8dc2',\n              '9778397bd097c36b0b70c9274c91aa','97b6b7f0e47f531b0723b0b6fb0721','7f0e37f1487f595b0b0bb0b6fb0722',\n              '7f0e397bd097c35b0b6fc9210c8dc2','9778397bd097c36b0b6fc9274c91aa','97b6b7f0e47f531b0723b0b6fb0721',\n              '7f0e27f1487f595b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa',\n              '97b6b7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722',\n              '9778397bd097c36b0b6fc9274c91aa','97b6b7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722',\n              '7f0e397bd097c35b0b6fc920fb0722','9778397bd097c36b0b6fc9274c91aa','97b6b7f0e47f531b0723b0b6fb0721',\n              '7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722','9778397bd097c36b0b6fc9274c91aa',\n              '97b6b7f0e47f531b0723b0787b0721','7f0e27f0e47f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722',\n              '9778397bd097c36b0b6fc9210c91aa','97b6b7f0e47f149b0723b0787b0721','7f0e27f0e47f531b0723b0b6fb0722',\n              '7f0e397bd07f595b0b0bc920fb0722','9778397bd097c36b0b6fc9210c8dc2','977837f0e37f149b0723b0787b0721',\n              '7f07e7f0e47f531b0723b0b6fb0722','7f0e37f5307f595b0b0bc920fb0722','7f0e397bd097c35b0b6fc9210c8dc2',\n              '977837f0e37f14998082b0787b0721','7f07e7f0e47f531b0723b0b6fb0721','7f0e37f1487f595b0b0bb0b6fb0722',\n              '7f0e397bd097c35b0b6fc9210c8dc2','977837f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721',\n              '7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722','977837f0e37f14998082b0787b06bd',\n              '7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd097c35b0b6fc920fb0722',\n              '977837f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722',\n              '7f0e397bd07f595b0b0bc920fb0722','977837f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721',\n              '7f0e27f1487f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722','977837f0e37f14998082b0787b06bd',\n              '7f07e7f0e47f149b0723b0787b0721','7f0e27f0e47f531b0b0bb0b6fb0722','7f0e397bd07f595b0b0bc920fb0722',\n              '977837f0e37f14998082b0723b06bd','7f07e7f0e37f149b0723b0787b0721','7f0e27f0e47f531b0723b0b6fb0722',\n              '7f0e397bd07f595b0b0bc920fb0722','977837f0e37f14898082b0723b02d5','7ec967f0e37f14998082b0787b0721',\n              '7f07e7f0e47f531b0723b0b6fb0722','7f0e37f1487f595b0b0bb0b6fb0722','7f0e37f0e37f14898082b0723b02d5',\n              '7ec967f0e37f14998082b0787b0721','7f07e7f0e47f531b0723b0b6fb0722','7f0e37f1487f531b0b0bb0b6fb0722',\n              '7f0e37f0e37f14898082b0723b02d5','7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721',\n              '7f0e37f1487f531b0b0bb0b6fb0722','7f0e37f0e37f14898082b072297c35','7ec967f0e37f14998082b0787b06bd',\n              '7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722','7f0e37f0e37f14898082b072297c35',\n              '7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722',\n              '7f0e37f0e366aa89801eb072297c35','7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f149b0723b0787b0721',\n              '7f0e27f1487f531b0b0bb0b6fb0722','7f0e37f0e366aa89801eb072297c35','7ec967f0e37f14998082b0723b06bd',\n              '7f07e7f0e47f149b0723b0787b0721','7f0e27f0e47f531b0723b0b6fb0722','7f0e37f0e366aa89801eb072297c35',\n              '7ec967f0e37f14998082b0723b06bd','7f07e7f0e37f14998083b0787b0721','7f0e27f0e47f531b0723b0b6fb0722',\n              '7f0e37f0e366aa89801eb072297c35','7ec967f0e37f14898082b0723b02d5','7f07e7f0e37f14998082b0787b0721',\n              '7f07e7f0e47f531b0723b0b6fb0722','7f0e36665b66aa89801e9808297c35','665f67f0e37f14898082b0723b02d5',\n              '7ec967f0e37f14998082b0787b0721','7f07e7f0e47f531b0723b0b6fb0722','7f0e36665b66a449801e9808297c35',\n              '665f67f0e37f14898082b0723b02d5','7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721',\n              '7f0e36665b66a449801e9808297c35','665f67f0e37f14898082b072297c35','7ec967f0e37f14998082b0787b06bd',\n              '7f07e7f0e47f531b0723b0b6fb0721','7f0e26665b66a449801e9808297c35','665f67f0e37f1489801eb072297c35',\n              '7ec967f0e37f14998082b0787b06bd','7f07e7f0e47f531b0723b0b6fb0721','7f0e27f1487f531b0b0bb0b6fb0722'],\n\n    /**\n      * 数字转中文速查表\n      * @Array Of Property \n      * @trans ['日','一','二','三','四','五','六','七','八','九','十']\n      * @return Cn string \n      */\n    nStr1:[\"\\u65e5\",\"\\u4e00\",\"\\u4e8c\",\"\\u4e09\",\"\\u56db\",\"\\u4e94\",\"\\u516d\",\"\\u4e03\",\"\\u516b\",\"\\u4e5d\",\"\\u5341\"],\n\n    /**\n      * 日期转农历称呼速查表\n      * @Array Of Property \n      * @trans ['初','十','廿','卅']\n      * @return Cn string \n      */\n    nStr2:[\"\\u521d\",\"\\u5341\",\"\\u5eff\",\"\\u5345\"],\n\n    /**\n      * 月份转农历称呼速查表\n      * @Array Of Property \n      * @trans ['正','一','二','三','四','五','六','七','八','九','十','冬','腊']\n      * @return Cn string \n      */\n    nStr3:[\"\\u6b63\",\"\\u4e8c\",\"\\u4e09\",\"\\u56db\",\"\\u4e94\",\"\\u516d\",\"\\u4e03\",\"\\u516b\",\"\\u4e5d\",\"\\u5341\",\"\\u51ac\",\"\\u814a\"],\n\n    /**\n      * 返回农历y年一整年的总天数\n      * @param lunar Year\n      * @return Number\n      * @eg:var count = calendar.lYearDays(1987) ;//count=387\n      */\n    lYearDays:function(y) {\n        var i, sum = 348;\n        for(i=0x8000; i>0x8; i>>=1) { sum += (calendar.lunarInfo[y-1900] & i)? 1: 0; }\n        return(sum+calendar.leapDays(y));\n    },\n\n    /**\n      * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\n      * @param lunar Year\n      * @return Number (0-12)\n      * @eg:var leapMonth = calendar.leapMonth(1987) ;//leapMonth=6\n      */\n    leapMonth:function(y) { //闰字编码 \\u95f0\n        return(calendar.lunarInfo[y-1900] & 0xf);\n    },\n\n    /**\n      * 返回农历y年闰月的天数 若该年没有闰月则返回0\n      * @param lunar Year\n      * @return Number (0、29、30)\n      * @eg:var leapMonthDay = calendar.leapDays(1987) ;//leapMonthDay=29\n      */\n    leapDays:function(y) {\n        if(calendar.leapMonth(y))  { \n            return((calendar.lunarInfo[y-1900] & 0x10000)? 30: 29); \n        }\n        return(0);\n    },\n\n    /**\n      * 返回农历y年m月（非闰月）的总天数，计算m为闰月时的天数请使用leapDays方法\n      * @param lunar Year\n      * @return Number (-1、29、30)\n      * @eg:var MonthDay = calendar.monthDays(1987,9) ;//MonthDay=29\n      */\n    monthDays:function(y,m) {\n        if(m>12 || m<1) {return -1}//月份参数从1至12，参数错误返回-1\n        return( (calendar.lunarInfo[y-1900] & (0x10000>>m))? 30: 29 );\n    },\n\n    /**\n      * 返回公历(!)y年m月的天数\n      * @param solar Year\n      * @return Number (-1、28、29、30、31)\n      * @eg:var solarMonthDay = calendar.leapDays(1987) ;//solarMonthDay=30\n      */\n    solarDays:function(y,m) {\n        if(m>12 || m<1) {return -1} //若参数错误 返回-1\n        var ms = m-1;\n        if(ms==1) { //2月份的闰平规律测算后确认返回28或29\n            return(((y%4 == 0) && (y%100 != 0) || (y%400 == 0))? 29: 28);\n        }else {\n            return(calendar.solarMonth[ms]);\n        }\n    },\n\n    /**\n     * 农历年份转换为干支纪年\n     * @param  lYear 农历年的年份数\n     * @return Cn string\n     */\n    toGanZhiYear:function(lYear) {\n        var ganKey = (lYear - 3) % 10;\n        var zhiKey = (lYear - 3) % 12;\n        if(ganKey == 0) ganKey = 10;//如果余数为0则为最后一个天干\n        if(zhiKey == 0) zhiKey = 12;//如果余数为0则为最后一个地支\n        return calendar.Gan[ganKey-1] + calendar.Zhi[zhiKey-1];\n        \n    },\n\n    /**\n     * 公历月、日判断所属星座\n     * @param  cMonth [description]\n     * @param  cDay [description]\n     * @return Cn string\n     */\n    toAstro:function(cMonth,cDay) {\n        var s   = \"\\u9b54\\u7faf\\u6c34\\u74f6\\u53cc\\u9c7c\\u767d\\u7f8a\\u91d1\\u725b\\u53cc\\u5b50\\u5de8\\u87f9\\u72ee\\u5b50\\u5904\\u5973\\u5929\\u79e4\\u5929\\u874e\\u5c04\\u624b\\u9b54\\u7faf\";\n        var arr = [20,19,21,21,21,22,23,23,23,23,22,22];\n        return s.substr(cMonth*2 - (cDay < arr[cMonth-1] ? 2 : 0),2) + \"\\u5ea7\";//座\n    },\n\n    /**\n      * 传入offset偏移量返回干支\n      * @param offset 相对甲子的偏移量\n      * @return Cn string\n      */\n    toGanZhi:function(offset) {\n        return calendar.Gan[offset%10] + calendar.Zhi[offset%12];\n    },\n\n    /**\n      * 传入公历(!)y年获得该年第n个节气的公历日期\n      * @param y公历年(1900-2100)；n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起 \n      * @return day Number\n      * @eg:var _24 = calendar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春\n      */\n    getTerm:function(y,n) {\n        if(y<1900 || y>2100) {return -1;}\n        if(n<1 || n>24) {return -1;}\n        var _table = calendar.sTermInfo[y-1900];\n        var _info = [\n            parseInt('0x'+_table.substr(0,5)).toString() ,\n            parseInt('0x'+_table.substr(5,5)).toString(),\n            parseInt('0x'+_table.substr(10,5)).toString(),\n            parseInt('0x'+_table.substr(15,5)).toString(),\n            parseInt('0x'+_table.substr(20,5)).toString(),\n            parseInt('0x'+_table.substr(25,5)).toString()\n        ];\n        var _calday = [\n            _info[0].substr(0,1),\n            _info[0].substr(1,2),\n            _info[0].substr(3,1),\n            _info[0].substr(4,2),\n            \n            _info[1].substr(0,1),\n            _info[1].substr(1,2),\n            _info[1].substr(3,1),\n            _info[1].substr(4,2),\n            \n            _info[2].substr(0,1),\n            _info[2].substr(1,2),\n            _info[2].substr(3,1),\n            _info[2].substr(4,2),\n            \n            _info[3].substr(0,1),\n            _info[3].substr(1,2),\n            _info[3].substr(3,1),\n            _info[3].substr(4,2),\n            \n            _info[4].substr(0,1),\n            _info[4].substr(1,2),\n            _info[4].substr(3,1),\n            _info[4].substr(4,2),\n            \n            _info[5].substr(0,1),\n            _info[5].substr(1,2),\n            _info[5].substr(3,1),\n            _info[5].substr(4,2),\n        ];\n        return parseInt(_calday[n-1]);\n    },\n\n    /**\n      * 传入农历数字月份返回汉语通俗表示法\n      * @param lunar month\n      * @return Cn string\n      * @eg:var cnMonth = calendar.toChinaMonth(12) ;//cnMonth='腊月'\n      */\n    toChinaMonth:function(m) { // 月 => \\u6708\n        if(m>12 || m<1) {return -1} //若参数错误 返回-1\n        var s = calendar.nStr3[m-1];\n        s+= \"\\u6708\";//加上月字\n        return s;\n    },\n\n    /**\n      * 传入农历日期数字返回汉字表示法\n      * @param lunar day\n      * @return Cn string\n      * @eg:var cnDay = calendar.toChinaDay(21) ;//cnMonth='廿一'\n      */\n    toChinaDay:function(d){ //日 => \\u65e5\n        var s;\n        switch (d) {\n            case 10:\n            s = '\\u521d\\u5341'; break;\n        case 20:\n            s = '\\u4e8c\\u5341'; break;\n            break;\n        case 30:\n            s = '\\u4e09\\u5341'; break;\n            break;\n        default :\n            s = calendar.nStr2[Math.floor(d/10)];\n            s += calendar.nStr1[d%10];\n        }\n        return(s);\n    },\n\n    /**\n      * 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”\n      * @param y year\n      * @return Cn string\n      * @eg:var animal = calendar.getAnimal(1987) ;//animal='兔'\n      */\n    getAnimal: function(y) {\n        return calendar.Animals[(y - 4) % 12]\n    },\n\n    /**\n      * 传入阳历年月日获得详细的公历、农历object信息 <=>JSON\n      * @param y  solar year\n      * @param m  solar month\n      * @param d  solar day\n      * @return JSON object\n      * @eg:console.log(calendar.solar2lunar(1987,11,01));\n      */\n    solar2lunar:function (y,m,d) { //参数区间1900.1.31~2100.12.31\n        if(y<1900 || y>2100) {return -1;}//年份限定、上限\n        if(y==1900&&m==1&&d<31) {return -1;}//下限\n        if(!y) { //未传参  获得当天\n            var objDate = new Date();\n        }else {\n            var objDate = new Date(y,parseInt(m)-1,d)\n        }\n        var i, leap=0, temp=0;\n        //修正ymd参数\n        var y = objDate.getFullYear(),m = objDate.getMonth()+1,d = objDate.getDate();\n        var offset   = (Date.UTC(objDate.getFullYear(),objDate.getMonth(),objDate.getDate()) - Date.UTC(1900,0,31))/86400000;\n        for(i=1900; i<2101 && offset>0; i++) { temp=calendar.lYearDays(i); offset-=temp; }\n        if(offset<0) { offset+=temp; i--; }\n        \n        //是否今天\n        var isTodayObj = new Date(),isToday=false;\n        if(isTodayObj.getFullYear()==y && isTodayObj.getMonth()+1==m && isTodayObj.getDate()==d) {\n            isToday = true;\n        }\n        //星期几\n        var nWeek = objDate.getDay(),cWeek = calendar.nStr1[nWeek];\n        if(nWeek==0) {nWeek =7;}//数字表示周几顺应天朝周一开始的惯例\n        //农历年\n        var year = i;\n        \n        var leap = calendar.leapMonth(i); //闰哪个月\n        var isLeap = false;\n        \n        //效验闰月\n        for(i=1; i<13 && offset>0; i++) {\n            //闰月\n            if(leap>0 && i==(leap+1) && isLeap==false){ \n                --i;\n                isLeap = true; temp = calendar.leapDays(year); //计算农历闰月天数\n            }\n            else{\n                temp = calendar.monthDays(year, i);//计算农历普通月天数\n            }\n            //解除闰月\n            if(isLeap==true && i==(leap+1)) { isLeap = false; }\n            offset -= temp;\n        }\n        \n        if(offset==0 && leap>0 && i==leap+1)\n        if(isLeap){\n            isLeap = false;\n        }else{ \n            isLeap = true; --i;\n        }\n        if(offset<0){ offset += temp; --i; }\n        //农历月\n        var month   = i;\n        //农历日\n        var day     = offset + 1;\n        \n        //天干地支处理\n        var sm      =   m-1;\n        var gzY     =   calendar.toGanZhiYear(year);\n        \n        //月柱 1900年1月小寒以前为 丙子月(60进制12)\n        var firstNode   = calendar.getTerm(year,(m*2-1));//返回当月「节」为几日开始\n        var secondNode  = calendar.getTerm(year,(m*2));//返回当月「节」为几日开始\n        \n        //依据12节气修正干支月\n        var gzM     =   calendar.toGanZhi((y-1900)*12+m+11);\n        if(d>=firstNode) {\n            gzM     =   calendar.toGanZhi((y-1900)*12+m+12);\n        }\n        \n        //传入的日期的节气与否\n        var isTerm = false;\n        var Term   = null;\n        if(firstNode==d) {\n            isTerm  = true;\n            Term    = calendar.solarTerm[m*2-2];\n        }\n        if(secondNode==d) {\n            isTerm  = true;\n            Term    = calendar.solarTerm[m*2-1];\n        }\n        //日柱 当月一日与 1900/1/1 相差天数\n        var dayCyclical = Date.UTC(y,sm,1,0,0,0,0)/86400000+25567+10;\n        var gzD = calendar.toGanZhi(dayCyclical+d-1);\n        //该日期所属的星座\n        var astro = calendar.toAstro(m,d);\n        \n        return {'lYear':year,'lMonth':month,'lDay':day,'Animal':calendar.getAnimal(year),'IMonthCn':(isLeap?\"\\u95f0\":'')+calendar.toChinaMonth(month),'IDayCn':calendar.toChinaDay(day),'cYear':y,'cMonth':m,'cDay':d,'gzYear':gzY,'gzMonth':gzM,'gzDay':gzD,'isToday':isToday,'isLeap':isLeap,'nWeek':nWeek,'ncWeek':\"\\u661f\\u671f\"+cWeek,'isTerm':isTerm,'Term':Term,'astro':astro};\n    },\n\n    /**\n      * 传入农历年月日以及传入的月份是否闰月获得详细的公历、农历object信息 <=>JSON\n      * @param y  lunar year\n      * @param m  lunar month\n      * @param d  lunar day\n      * @param isLeapMonth  lunar month is leap or not.[如果是农历闰月第四个参数赋值true即可]\n      * @return JSON object\n      * @eg:console.log(calendar.lunar2solar(1987,9,10));\n      */\n    lunar2solar:function(y,m,d,isLeapMonth) {   //参数区间1900.1.31~2100.12.1\n        var isLeapMonth = !!isLeapMonth;\n        var leapOffset  = 0;\n        var leapMonth   = calendar.leapMonth(y);\n        var leapDay     = calendar.leapDays(y);\n        if(isLeapMonth&&(leapMonth!=m)) {return -1;}//传参要求计算该闰月公历 但该年得出的闰月与传参的月份并不同\n        if(y==2100&&m==12&&d>1 || y==1900&&m==1&&d<31) {return -1;}//超出了最大极限值 \n        var day  = calendar.monthDays(y,m); \n        var _day = day;\n        //bugFix 2016-9-25 \n        //if month is leap, _day use leapDays method \n        if(isLeapMonth) {\n            _day = calendar.leapDays(y,m);\n        }\n        if(y < 1900 || y > 2100 || d > _day) {return -1;}//参数合法性效验\n        \n        //计算农历的时间差\n        var offset = 0;\n        for(var i=1900;i<y;i++) {\n            offset+=calendar.lYearDays(i);\n        }\n        var leap = 0,isAdd= false;\n        for(var i=1;i<m;i++) {\n            leap = calendar.leapMonth(y);\n            if(!isAdd) {//处理闰月\n                if(leap<=i && leap>0) {\n                    offset+=calendar.leapDays(y);isAdd = true;\n                }\n            }\n            offset+=calendar.monthDays(y,i);\n        }\n        //转换闰月农历 需补充该年闰月的前一个月的时差\n        if(isLeapMonth) {offset+=day;}\n        //1900年农历正月一日的公历时间为1900年1月30日0时0分0秒(该时间也是本农历的最开始起始点)\n        var stmap   =   Date.UTC(1900,1,30,0,0,0);\n        var calObj  =   new Date((offset+d-31)*86400000+stmap);\n        var cY      =   calObj.getUTCFullYear();\n        var cM      =   calObj.getUTCMonth()+1;\n        var cD      =   calObj.getUTCDate();\n\n        return calendar.solar2lunar(cY,cM,cD);\n    }\n};"},{"title":"Overview","url":"/en/p/adt-extensions/index.html","content":"\n"},{"title":"Overview","url":"/en/p/eclipse-explorer/index.html","content":"\n"},{"title":"Overview","url":"/en/p/hexo-theme-nova/index.html","content":"\n"},{"title":"User guide","url":"/en/p/Android-ORM/userguide.html","content":"\n## Add library dependencies\n- Android studio\n```gradle\ndependencies {\n    compile 'cn.ieclipse.aorm:aorm-core:1.1.2'\n}\n```\n- Eclipse\nInstall [Android ADT-extension](https://marketplace.eclipse.org/content/android-adt-extensions) plugin\n\n## Settings\n\nOptional settings, setting the Aorm globally.\n```java\nAorm.enableDebug(true);// Enable/Disable debug to print SQL\nAorm.allowExtend(false);// Disable model bean extend\nAorm.setExactInsertOrUpdate(true);//Set use actuarial insertOrUpdate. If true, will query the object from database, insert if not exists or update if exist, otherwise insert when PK is 0 or update when PK more than 0 (maybe update fail)\n```\n\n## Create model bean\n\n### Add mapping table\nAdd @Table annotation in your java bean\n\n```java\n@Table(name = \"student\")\npublic class Student implements java.ioSerializable{\n    //...\n}\n```\n\n### Add column mapping\nAdd @Column annotation for java bean field\n\n- pk (primary key field)\nid is true\n```java\n    @Column(name = \"_id\", id = true)\n    private long id;\n```\n\n- normal field\n\n```java\n    @Column(name = \"_name\")\n    private String name;\n\n    @Column()\n    private int age;\n```\n\n- un-mapping field\nNo Aorm annotation assigned.\n```java\n    private String address;\n```\n\nThe bean must generate getter/setter methods\n\n## Create table\nIf Android ADT-extensions install in Eclipse. Select the java element includes Aorm beans and Open New ORM Provider to generate ContentPrivider in wizards.\n\nOr create manually.\n```java\n        mOpenHelper = new SQLiteOpenHelper(this.getContext(), \"example.db\",\n                null, 1) {\n            public void onCreate(SQLiteDatabase db) {\n                // method 3: use AORM to create table\n                Aorm.createTable(db, Grade.class);\n                Aorm.createTable(db, Student.class);\n                Aorm.createTable(db, Course.class);\n            }\n        };\n```\n\n## Usage\n\n### Query\n\n#### Simple query\nQuery all students\n```java\nSession session = ExampleContentProvider.getSession();\n// simplest query, query all student table.\nCriteria criteria = Criteria.create(Student.class);\nList<Student> list = session.list(Student.class);\n```\nQuery to cursor, so used it in CursorAdapter\n```java\nCursor c = session.query(criteria);\n```\n\nQuery to single object\n```java\n// query student whose id is 4\ns = session.get(Student.class, 4);\n```\n#### Restriction query\nEquals\n```java\n// add restrication: id equals\ncriteria.add(Restrictions.eq(\"id\", 1));\n```\nLike\n```java\n// add restriction: name like Jamling\ncriteria.add(Restrictions.like(\"name\", \"Jaming\"));\n```\nCompare\n```java\n// add restriction: age > 30\ncriteria.add(Restrictions.gt(\"age\", 30));\n```\nOrder\n```\n// add order\ncriteria.addOrder(Order.asc(\"age\"));\n```\nDistinct\n```\n// set district\ncriteria.setDistinct(true);\n```\nLimit\n```\n// set limit from row 10 to 20\ncriteria.setLimit(10, 10);\n```\n\n#### Join query\nThe Criteria support four join\n1. Left Join\n2. Left outer join\n3. Inner join\n4. Cross join\n\n```java\nCriteria criteria = Criteria.create(Student.class, \"s\")\n                .addChild(Grade.class, \"g\")\n                .add(Restrictions.eqProperty(\"s.id\", \"g.sid\"));\n// query to list.\nList<Object[]> ret = session.listAll(criteria);\nObject[] item = ret.get(0);\nStudent s = (Student) item[0];\nGrade g = (Grade) item[1];\n```\n\n### Insert\n```java\nSession session = ExampleContentProvider.getSession();\n// insert\nStudent s = new Student();\ns.setName(\"Jamling\");\nlong rowId = session.insert(s, null);\n```\n\n### Update\n```java\n// update student's name to Jame whose id is 1\ns.setId(1);\ns.setName(\"Jame\");\nint rows = session.update(s);\n```\n\n### Delete\n```java\n// delete student whose id is 2\nsession.deleteById(Student.class, 2);\n```\n\n\n\n\n"},{"title":"Overview","url":"/en/p/hexo-generator-i18n/index.html"},{"title":"Developer","url":"/en/p/eclipse-explorer/develop.html","content":"\n## 简介\n\n[Eclipse Explorer] 4.x is a millstone version. It de-couples the resources and the development language plugin under Eclipse platform. And it's possible to integrated the [Eclipse Explorer] to your RCP products or other Eclipse IDE for xxx developer. (such as Eclipse for Java IDE).\n\nOur aim is making the most powerful explorer plugin of Eclipse, if you are insterting, invite you to join us sincerely.\n\n## Suggestions\n- Fork [Eclipse Explorer]\n- Submit fragment project to [Eclipse Explorer]\n- Bundle-Name suggested to explorer4xxx, xxx is the dev lang, e.g. explorer4java\n- Feature Name suggested to name as Eclipse explorer for xxx, e.g. Eclipse explorer for CDT\n\n## Fragment list\n- Eclipse explorer for Java, for Eclipse standard or other Java versions\n- Eclipse explorer for CDT, for Eclipse IDE for C/C++ Developers\n\n## Dev guide\n- New fragment project\nEclipse->New->Others->Plugin Development->Fragment Project\n\n![image](/p/eclipse-explorer/develop/new_fragment_project1.png)\n\n- Set host plugin\nSet [Eclipse Explorer] as host plugin\n\n![image](/p/eclipse-explorer/develop/new_fragment_project3.png)\n\n- Set fragment dependencies\nAdd the fragment dependencies, e.g. add org.eclipse.jdt.core for explorer4java fragment.\n\n- Extension AdapterFactory\nNew class such as JavaAdapterFactory.java and extend cn.ieclipse.pde.explorer.AdapterFactory. Rewrite getExplorable() abstract method and return the IExplorable object.\n\nSample:\n\n```java\n    @Override\n    public IExplorable getExplorable(Object obj) {\n        String path = null;\n        if (obj instanceof IJavaElement) {\n            // java project.\n            if (obj instanceof IJavaProject) {\n                path = ((IJavaProject) obj).getProject().getLocation()\n                        .toOSString();\n                return new Explorer(path, null);\n            }\n            // jar resource is null\n            else if (obj instanceof JarPackageFragmentRoot) {\n                String file = ((IPackageFragmentRoot) obj).getPath()\n                        .toOSString();\n                // get folder\n                return new Explorer(null, file);\n            }\n            else if (obj instanceof IPackageFragmentRoot) {\n                // src folder\n                IPackageFragmentRoot src = ((IPackageFragmentRoot) obj);\n                IProject p = src.getJavaProject().getProject();\n                String prjPath = p.getLocation().toOSString();\n                path = new File(prjPath, src.getElementName())\n                        .getAbsolutePath();\n                return new Explorer(path, null);\n                // System.out.println(path);\n            }\n            else if (obj instanceof IPackageFragment) {// other : package\n                IResource resource = ((IPackageFragment) obj).getResource();\n                path = resource.getLocation().toOSString();\n                return new Explorer(path, null);\n            }\n            else {// member:filed:\n                IResource resource = ((IJavaElement) obj).getResource();\n                String file = resource.getLocation().toOSString();\n                // get folder\n                return new Explorer(null, file);\n            }\n        }\n        return null;\n    }\n```\n\n- Configure extensions\nIn fragment.xml Editor->Extensions Tab, add org.eclipse.core.runtime.adapters extension.\n<p> ![image](/p/eclipse-explorer/develop/new_extension.png) ![image](/p/eclipse-explorer/develop/add_adapter_factory_extension.png)</p>\nSample:\n\n```xml\n   <extension\n         point=\"org.eclipse.core.runtime.adapters\">\n      <factory\n            adaptableType=\"org.eclipse.jdt.core.IJavaElement\"\n            class=\"cn.ieclipse.pde.explorer.java.JavaAdapterFactory\">\n         <adapter\n               type=\"cn.ieclipse.pde.explorer.IExplorable\">\n         </adapter>\n      </factory>\n   </extension>\n```\n\n- Debug\nDebug fragment project as Eclipse Application. \"Error log\" is suggested to show.\n\n- Create feature\nAfter debuging and testing, New->Project->Plugin Development->Feature Project to create feature.\nAdd the created feature to cn.ieclipse.pde.explorer.feature project Included Features tab. Finally rebuild the cn.ieclipse.pde.explorer.site project then test the feature installation.\n\n## Publish\nMake sure the fragment/feature/update site passing the test, then publish fragment to Eclipse marketplace or published as [Eclipse Explorer] fragment. Finally, fork [Eclipse Explorer] and edit the  README.md to insert the fragment and author info and pull a  request.\n\nPublished as [Eclipse Explorer] fragment is recommended, please [mail](mailto:li.jaming@gmail.com) to update the information on Eclipse Marketplace.\n\n[Eclipse Explorer]: https://github.com/Jamling/eclipse-explorer\n\n\n"},{"title":"Overview","url":"/en/p/Android-ORM/index.html","content":"\n"}]